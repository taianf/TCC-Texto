%!PS-Adobe-2.0 EPSF-2.0
%%Title: preTotSched.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Jun 11 23:58:14 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (preTotSched.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 11 23:58:14 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 594 M
63 0 V
5597 0 R
-63 0 V
1166 1430 M
63 0 V
5597 0 R
-63 0 V
1166 2267 M
63 0 V
5597 0 R
-63 0 V
1166 3103 M
63 0 V
5597 0 R
-63 0 V
1166 3940 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1169 807 Pls
1174 788 Pls
1179 779 Pls
1185 830 Pls
1190 1373 Pls
1195 1358 Pls
1201 822 Pls
1206 878 Pls
1211 1331 Pls
1216 835 Pls
1220 1374 Pls
1222 830 Pls
1227 776 Pls
1232 836 Pls
1238 830 Pls
1242 781 Pls
1248 1326 Pls
1254 886 Pls
1258 1307 Pls
1264 765 Pls
1269 803 Pls
1274 793 Pls
1280 1338 Pls
1285 796 Pls
1291 790 Pls
1295 804 Pls
1301 820 Pls
1307 757 Pls
1311 770 Pls
1317 717 Pls
1322 775 Pls
1327 790 Pls
1333 795 Pls
1338 837 Pls
1343 838 Pls
1348 868 Pls
1354 807 Pls
1359 798 Pls
1364 765 Pls
1370 795 Pls
1374 783 Pls
1380 810 Pls
1386 808 Pls
1391 817 Pls
1396 857 Pls
1401 831 Pls
1407 826 Pls
1412 1317 Pls
1417 1369 Pls
1423 796 Pls
1427 765 Pls
1433 1327 Pls
1439 817 Pls
1443 1375 Pls
1449 793 Pls
1454 806 Pls
1459 1309 Pls
1465 877 Pls
1470 794 Pls
1475 798 Pls
1480 1384 Pls
1486 786 Pls
1491 781 Pls
1496 784 Pls
1502 883 Pls
1507 801 Pls
1512 780 Pls
1518 1316 Pls
1523 826 Pls
1528 763 Pls
1533 830 Pls
1539 1553 Pls
1544 791 Pls
1549 796 Pls
1555 824 Pls
1559 786 Pls
1565 796 Pls
1571 842 Pls
1575 801 Pls
1581 786 Pls
1586 1409 Pls
1591 787 Pls
1597 808 Pls
1602 781 Pls
1607 1316 Pls
1612 1606 Pls
1618 1450 Pls
1624 828 Pls
1628 780 Pls
1634 788 Pls
1639 1333 Pls
1644 1518 Pls
1650 810 Pls
1655 806 Pls
1660 792 Pls
1665 786 Pls
1671 781 Pls
1676 1333 Pls
1681 781 Pls
1687 1463 Pls
1691 781 Pls
1697 793 Pls
1703 847 Pls
1707 1343 Pls
1713 1338 Pls
1718 781 Pls
1724 1361 Pls
1729 812 Pls
1734 804 Pls
1740 816 Pls
1744 821 Pls
1750 793 Pls
1756 817 Pls
1760 786 Pls
1766 805 Pls
1771 792 Pls
1776 799 Pls
1782 796 Pls
1787 1320 Pls
1792 768 Pls
1797 798 Pls
1803 795 Pls
1808 793 Pls
1813 810 Pls
1819 791 Pls
1824 837 Pls
1829 785 Pls
1835 743 Pls
1840 793 Pls
1845 765 Pls
1850 764 Pls
1856 806 Pls
1861 799 Pls
1866 1351 Pls
1872 770 Pls
1876 782 Pls
1882 791 Pls
1888 785 Pls
1892 783 Pls
1898 831 Pls
1903 813 Pls
1908 809 Pls
1914 788 Pls
1919 823 Pls
1924 1528 Pls
1929 783 Pls
1935 783 Pls
1940 769 Pls
1945 807 Pls
1951 814 Pls
1956 801 Pls
1961 814 Pls
1967 1378 Pls
1972 1354 Pls
1977 804 Pls
1982 810 Pls
1988 781 Pls
1993 841 Pls
1998 800 Pls
2004 817 Pls
2008 1548 Pls
2014 786 Pls
2020 1318 Pls
2024 1314 Pls
2030 794 Pls
2035 793 Pls
2040 822 Pls
2046 823 Pls
2051 873 Pls
2057 775 Pls
2061 843 Pls
2067 796 Pls
2073 807 Pls
2077 793 Pls
2083 782 Pls
2088 788 Pls
2093 797 Pls
2099 810 Pls
2104 775 Pls
2109 809 Pls
2114 840 Pls
2120 801 Pls
2125 807 Pls
2130 1362 Pls
2136 1421 Pls
2140 793 Pls
2146 1422 Pls
2152 769 Pls
2157 790 Pls
2162 822 Pls
2167 797 Pls
2173 827 Pls
2178 781 Pls
2183 1287 Pls
2189 786 Pls
2193 792 Pls
2199 791 Pls
2205 789 Pls
2209 775 Pls
2215 785 Pls
2220 804 Pls
2225 779 Pls
2231 785 Pls
2236 1363 Pls
2241 1317 Pls
2246 865 Pls
2252 796 Pls
2257 781 Pls
2262 791 Pls
2268 791 Pls
2273 1312 Pls
2278 795 Pls
2284 791 Pls
2289 813 Pls
2294 782 Pls
2299 789 Pls
2305 787 Pls
2310 804 Pls
2315 1330 Pls
2321 807 Pls
2325 847 Pls
2331 822 Pls
2337 1338 Pls
2341 1527 Pls
2347 793 Pls
2352 808 Pls
2357 837 Pls
2363 768 Pls
2368 810 Pls
2373 1524 Pls
2378 785 Pls
2384 1390 Pls
2390 776 Pls
2394 774 Pls
2400 794 Pls
2405 787 Pls
2410 799 Pls
2416 1321 Pls
2421 1330 Pls
2426 1404 Pls
2431 786 Pls
2437 811 Pls
2442 791 Pls
2447 868 Pls
2453 805 Pls
2457 823 Pls
2463 1408 Pls
2469 818 Pls
2473 782 Pls
2479 801 Pls
2484 788 Pls
2489 813 Pls
2495 1321 Pls
2500 781 Pls
2506 842 Pls
2510 1334 Pls
2516 796 Pls
2522 1492 Pls
2526 848 Pls
2532 1505 Pls
2537 793 Pls
2542 1305 Pls
2548 827 Pls
2553 765 Pls
2558 813 Pls
2563 825 Pls
2569 761 Pls
2574 792 Pls
2579 1495 Pls
2585 1367 Pls
2589 785 Pls
2595 783 Pls
2601 803 Pls
2606 1302 Pls
2611 808 Pls
2616 842 Pls
2622 815 Pls
2627 836 Pls
2632 869 Pls
2638 1353 Pls
2642 1358 Pls
2648 789 Pls
2654 783 Pls
2658 781 Pls
2664 794 Pls
2669 781 Pls
2674 774 Pls
2680 783 Pls
2685 796 Pls
2690 781 Pls
2695 1516 Pls
2701 802 Pls
2706 796 Pls
2711 783 Pls
2717 810 Pls
2722 796 Pls
2727 897 Pls
2733 814 Pls
2738 852 Pls
2743 792 Pls
2748 1345 Pls
2754 798 Pls
2759 832 Pls
2764 789 Pls
2770 803 Pls
2774 794 Pls
2780 807 Pls
2786 781 Pls
2790 1455 Pls
2796 803 Pls
2801 1356 Pls
2806 791 Pls
2812 796 Pls
2817 779 Pls
2822 843 Pls
2827 781 Pls
2833 809 Pls
2839 822 Pls
2843 793 Pls
2849 790 Pls
2854 793 Pls
2859 798 Pls
2865 1379 Pls
2870 820 Pls
2875 769 Pls
2880 815 Pls
2886 797 Pls
2891 818 Pls
2896 780 Pls
2902 800 Pls
2906 798 Pls
2912 766 Pls
2918 1124 Pls
2918 689 Pls
2922 773 Pls
2928 794 Pls
2933 790 Pls
2939 796 Pls
2944 786 Pls
2949 802 Pls
2955 767 Pls
2959 796 Pls
2965 781 Pls
2971 779 Pls
2975 792 Pls
2981 1350 Pls
2986 814 Pls
2991 834 Pls
2997 808 Pls
3002 817 Pls
3007 819 Pls
3012 790 Pls
3012 1359 Pls
3018 795 Pls
3023 855 Pls
3028 813 Pls
3034 867 Pls
3039 816 Pls
3044 851 Pls
3050 804 Pls
3055 805 Pls
3060 794 Pls
3065 836 Pls
3071 779 Pls
3076 1331 Pls
3081 796 Pls
3087 1339 Pls
3091 813 Pls
3097 824 Pls
3103 847 Pls
3106 790 Pls
3107 841 Pls
3113 789 Pls
3118 859 Pls
3123 801 Pls
3129 795 Pls
3134 786 Pls
3139 806 Pls
3144 823 Pls
3150 818 Pls
3155 813 Pls
3160 787 Pls
3166 1312 Pls
3171 799 Pls
3176 1424 Pls
3182 821 Pls
3187 806 Pls
3192 790 Pls
3197 832 Pls
3203 829 Pls
3208 812 Pls
3213 1375 Pls
3219 816 Pls
3223 801 Pls
3229 779 Pls
3235 808 Pls
3239 841 Pls
3245 1299 Pls
3250 794 Pls
3255 838 Pls
3261 793 Pls
3266 819 Pls
3272 795 Pls
3276 783 Pls
3282 1362 Pls
3288 812 Pls
3292 761 Pls
3298 814 Pls
3303 792 Pls
3308 778 Pls
3314 765 Pls
3319 801 Pls
3324 795 Pls
3329 792 Pls
3335 1416 Pls
3340 783 Pls
3345 819 Pls
3351 1320 Pls
3355 1325 Pls
3361 838 Pls
3367 794 Pls
3372 801 Pls
3377 852 Pls
3382 825 Pls
3388 852 Pls
3393 816 Pls
3398 799 Pls
3404 1338 Pls
3408 788 Pls
3414 1362 Pls
3420 780 Pls
3424 811 Pls
3430 801 Pls
3435 1316 Pls
3440 793 Pls
3446 816 Pls
3451 1430 Pls
3456 787 Pls
3461 796 Pls
3467 802 Pls
3472 802 Pls
3477 781 Pls
3483 798 Pls
3488 801 Pls
3493 806 Pls
3499 827 Pls
3504 793 Pls
3509 765 Pls
3514 789 Pls
3520 1403 Pls
3525 846 Pls
3530 777 Pls
3536 1293 Pls
3540 859 Pls
3546 830 Pls
3552 824 Pls
3556 793 Pls
3562 1299 Pls
3567 1358 Pls
3572 1355 Pls
3578 795 Pls
3583 1298 Pls
3588 917 Pls
3593 1304 Pls
3599 771 Pls
3605 798 Pls
3609 906 Pls
3615 811 Pls
3620 796 Pls
3625 788 Pls
3631 1387 Pls
3636 780 Pls
3641 791 Pls
3646 1393 Pls
3652 822 Pls
3657 770 Pls
3662 806 Pls
3668 793 Pls
3672 790 Pls
3678 819 Pls
3684 1260 Pls
3688 813 Pls
3694 780 Pls
3699 745 Pls
3705 792 Pls
3710 792 Pls
3715 1297 Pls
3721 807 Pls
3725 783 Pls
3731 821 Pls
3737 826 Pls
3741 817 Pls
3747 811 Pls
3752 842 Pls
3757 792 Pls
3763 817 Pls
3768 810 Pls
3773 775 Pls
3778 1328 Pls
3784 811 Pls
3789 802 Pls
3794 1334 Pls
3800 802 Pls
3805 790 Pls
3810 775 Pls
3816 755 Pls
3821 1251 Pls
3826 765 Pls
3831 1431 Pls
3837 782 Pls
3842 1327 Pls
3847 792 Pls
3853 827 Pls
3857 1307 Pls
3863 781 Pls
3869 868 Pls
3873 803 Pls
3879 824 Pls
3884 1374 Pls
3889 843 Pls
3895 1583 Pls
3900 764 Pls
3905 768 Pls
3910 750 Pls
3916 1339 Pls
3921 816 Pls
3926 783 Pls
3932 1392 Pls
3937 788 Pls
3942 1319 Pls
3948 776 Pls
3953 798 Pls
3958 776 Pls
3963 803 Pls
3969 804 Pls
3974 783 Pls
3979 1394 Pls
3985 763 Pls
3989 1331 Pls
3995 804 Pls
4001 786 Pls
4005 1320 Pls
4011 806 Pls
4016 789 Pls
4021 807 Pls
4027 757 Pls
4032 827 Pls
4038 1314 Pls
4042 793 Pls
4048 755 Pls
4054 841 Pls
4058 801 Pls
4064 791 Pls
4069 808 Pls
4074 886 Pls
4080 811 Pls
4085 857 Pls
4090 1359 Pls
4095 778 Pls
4101 806 Pls
4106 801 Pls
4111 783 Pls
4117 791 Pls
4121 806 Pls
4127 777 Pls
4133 781 Pls
4138 1527 Pls
4143 790 Pls
4148 792 Pls
4154 771 Pls
4159 779 Pls
4164 822 Pls
4170 775 Pls
4174 1366 Pls
4180 1360 Pls
4186 1424 Pls
4190 824 Pls
4196 778 Pls
4201 774 Pls
4206 788 Pls
4212 787 Pls
4217 812 Pls
4222 785 Pls
4227 939 Pls
4233 798 Pls
4238 774 Pls
4243 835 Pls
4249 786 Pls
4254 811 Pls
4259 791 Pls
4265 819 Pls
4270 1294 Pls
4275 1343 Pls
4280 791 Pls
4286 802 Pls
4291 785 Pls
4296 856 Pls
4302 862 Pls
4306 808 Pls
4312 828 Pls
4318 791 Pls
4322 811 Pls
4328 783 Pls
4333 1379 Pls
4338 1319 Pls
4344 813 Pls
4349 796 Pls
4354 800 Pls
4359 776 Pls
4365 824 Pls
4371 796 Pls
4375 1478 Pls
4381 787 Pls
4386 1315 Pls
4391 821 Pls
4397 787 Pls
4402 792 Pls
4407 811 Pls
4412 840 Pls
4418 790 Pls
4423 786 Pls
4427 821 Pls
4428 799 Pls
4434 780 Pls
4438 788 Pls
4444 791 Pls
4450 786 Pls
4454 1331 Pls
4460 839 Pls
4465 771 Pls
4470 798 Pls
4476 799 Pls
4481 862 Pls
4487 827 Pls
4491 781 Pls
4497 805 Pls
4503 840 Pls
4507 833 Pls
4513 781 Pls
4518 1346 Pls
4521 817 Pls
4523 805 Pls
4529 1375 Pls
4534 1553 Pls
4539 810 Pls
4544 813 Pls
4550 801 Pls
4555 812 Pls
4560 803 Pls
4566 790 Pls
4570 779 Pls
4576 794 Pls
4582 797 Pls
4587 1742 Pls
4592 2884 Pls
4597 778 Pls
4603 1505 Pls
4608 787 Pls
4613 827 Pls
4616 850 Pls
4619 820 Pls
4623 796 Pls
4629 1303 Pls
4635 788 Pls
4639 1404 Pls
4645 862 Pls
4650 781 Pls
4655 772 Pls
4661 845 Pls
4666 764 Pls
4671 853 Pls
4676 793 Pls
4682 796 Pls
4687 801 Pls
4692 822 Pls
4698 1397 Pls
4703 1404 Pls
4708 771 Pls
4714 1324 Pls
4719 792 Pls
4724 770 Pls
4729 1429 Pls
4735 806 Pls
4740 778 Pls
4745 791 Pls
4751 783 Pls
4755 822 Pls
4761 783 Pls
4767 801 Pls
4771 787 Pls
4777 786 Pls
4782 772 Pls
4787 799 Pls
4793 823 Pls
4798 877 Pls
4803 828 Pls
4808 780 Pls
4814 1367 Pls
4820 793 Pls
4824 811 Pls
4830 1327 Pls
4835 807 Pls
4840 789 Pls
4846 776 Pls
4851 785 Pls
4856 775 Pls
4861 1411 Pls
4867 800 Pls
4872 791 Pls
4877 785 Pls
4883 794 Pls
4887 1435 Pls
4893 801 Pls
4899 1515 Pls
4903 786 Pls
4909 813 Pls
4914 812 Pls
4920 812 Pls
4925 807 Pls
4930 1428 Pls
4936 853 Pls
4940 836 Pls
4946 788 Pls
4952 784 Pls
4956 823 Pls
4962 786 Pls
4967 801 Pls
4972 770 Pls
4978 800 Pls
4983 818 Pls
4988 783 Pls
4993 812 Pls
4999 832 Pls
5004 817 Pls
5009 1454 Pls
5015 775 Pls
5020 781 Pls
5025 879 Pls
5031 806 Pls
5036 784 Pls
5041 1321 Pls
5046 791 Pls
5052 1318 Pls
5057 1575 Pls
5062 820 Pls
5068 1414 Pls
5072 808 Pls
5078 1330 Pls
5084 837 Pls
5088 788 Pls
5094 901 Pls
5099 832 Pls
5104 843 Pls
5110 1377 Pls
5115 806 Pls
5120 1430 Pls
5125 1322 Pls
5131 1350 Pls
5136 1308 Pls
5141 791 Pls
5147 806 Pls
5152 797 Pls
5157 779 Pls
5163 814 Pls
5168 799 Pls
5173 1376 Pls
5178 796 Pls
5184 820 Pls
5189 789 Pls
5194 847 Pls
5200 818 Pls
5204 799 Pls
5210 849 Pls
5216 1384 Pls
5220 848 Pls
5226 797 Pls
5231 819 Pls
5236 1295 Pls
5242 792 Pls
5247 1499 Pls
5253 785 Pls
5257 1517 Pls
5263 1390 Pls
5269 778 Pls
5273 779 Pls
5276 795 Pls
5279 839 Pls
5284 802 Pls
5289 812 Pls
5295 802 Pls
5300 1343 Pls
5305 1319 Pls
5310 770 Pls
5316 785 Pls
5321 1306 Pls
5326 813 Pls
5332 804 Pls
5336 787 Pls
5342 788 Pls
5348 807 Pls
5353 798 Pls
5358 1359 Pls
5363 795 Pls
5369 773 Pls
5370 781 Pls
5374 786 Pls
5379 821 Pls
5385 1320 Pls
5389 1349 Pls
5395 776 Pls
5401 818 Pls
5405 781 Pls
5411 762 Pls
5416 788 Pls
5421 786 Pls
5427 1329 Pls
5432 785 Pls
5437 861 Pls
5442 873 Pls
5448 796 Pls
5453 825 Pls
5458 1515 Pls
5464 788 Pls
5465 749 Pls
5469 806 Pls
5474 782 Pls
5480 815 Pls
5485 801 Pls
5490 810 Pls
5495 786 Pls
5501 788 Pls
5506 827 Pls
5511 784 Pls
5517 779 Pls
5521 1328 Pls
5527 1372 Pls
5533 1301 Pls
5537 807 Pls
5543 831 Pls
5548 776 Pls
5553 792 Pls
5559 1367 Pls
5564 827 Pls
5569 1360 Pls
5574 818 Pls
5580 798 Pls
5586 781 Pls
5590 811 Pls
5596 861 Pls
5601 1476 Pls
5606 1302 Pls
5612 1356 Pls
5617 811 Pls
5622 783 Pls
5627 1329 Pls
5633 1323 Pls
5638 879 Pls
5643 1373 Pls
5649 815 Pls
5653 827 Pls
5659 856 Pls
5665 836 Pls
5669 862 Pls
5675 781 Pls
5680 798 Pls
5686 804 Pls
5691 1315 Pls
5696 811 Pls
5702 1367 Pls
5706 800 Pls
5712 807 Pls
5718 823 Pls
5722 790 Pls
5728 766 Pls
5733 806 Pls
5738 775 Pls
5744 798 Pls
5749 802 Pls
5754 781 Pls
5759 791 Pls
5765 796 Pls
5770 787 Pls
5775 794 Pls
5781 871 Pls
5786 776 Pls
5791 1329 Pls
5797 827 Pls
5802 760 Pls
5807 813 Pls
5812 873 Pls
5818 781 Pls
5823 1350 Pls
5828 867 Pls
5834 867 Pls
5838 783 Pls
5844 817 Pls
5850 883 Pls
5854 787 Pls
5860 795 Pls
5865 792 Pls
5870 805 Pls
5875 805 Pls
5880 781 Pls
5885 791 Pls
5889 1317 Pls
5895 1383 Pls
5900 796 Pls
5904 847 Pls
5909 783 Pls
5914 770 Pls
5919 1465 Pls
5924 1454 Pls
5929 793 Pls
5934 785 Pls
5938 791 Pls
5944 808 Pls
5949 788 Pls
5953 793 Pls
5958 776 Pls
5963 1537 Pls
5969 785 Pls
5973 847 Pls
5978 846 Pls
5983 786 Pls
5987 779 Pls
5993 784 Pls
5998 821 Pls
6002 786 Pls
6007 842 Pls
6012 811 Pls
6018 789 Pls
6022 808 Pls
6027 892 Pls
6032 845 Pls
6036 824 Pls
6042 785 Pls
6047 1408 Pls
6052 818 Pls
6056 801 Pls
6061 787 Pls
6067 815 Pls
6071 825 Pls
6076 788 Pls
6081 1317 Pls
6085 844 Pls
6091 831 Pls
6096 798 Pls
6101 813 Pls
6105 793 Pls
6110 1332 Pls
6116 828 Pls
6120 781 Pls
6125 765 Pls
6130 790 Pls
6135 813 Pls
6140 1346 Pls
6145 860 Pls
6150 859 Pls
6154 794 Pls
6159 771 Pls
6165 1333 Pls
6169 1407 Pls
6174 777 Pls
6179 792 Pls
6184 1467 Pls
6189 775 Pls
6194 796 Pls
6199 782 Pls
6203 1334 Pls
6208 795 Pls
6214 1316 Pls
6218 868 Pls
6223 789 Pls
6228 1326 Pls
6233 788 Pls
6238 791 Pls
6243 781 Pls
6248 788 Pls
6252 791 Pls
6257 817 Pls
6263 803 Pls
6268 808 Pls
6272 828 Pls
6277 857 Pls
6282 797 Pls
6287 759 Pls
6292 789 Pls
6297 1321 Pls
6302 808 Pls
6306 764 Pls
6312 806 Pls
6314 805 Pls
6317 1345 Pls
6321 811 Pls
6326 795 Pls
6331 790 Pls
6336 785 Pls
6341 858 Pls
6346 827 Pls
6351 863 Pls
6355 799 Pls
6361 871 Pls
6366 790 Pls
6370 817 Pls
6375 1381 Pls
6380 1304 Pls
6385 799 Pls
6390 786 Pls
6395 813 Pls
6400 1335 Pls
6404 785 Pls
6408 1387 Pls
6410 1328 Pls
6415 779 Pls
6419 1382 Pls
6424 1326 Pls
6429 1375 Pls
6435 864 Pls
6439 802 Pls
6444 1350 Pls
6449 818 Pls
6453 820 Pls
6459 810 Pls
6464 1414 Pls
6468 836 Pls
6473 779 Pls
6478 806 Pls
6484 778 Pls
6488 1352 Pls
6493 798 Pls
6498 821 Pls
6502 779 Pls
6502 775 Pls
6508 804 Pls
6513 790 Pls
6518 780 Pls
6522 797 Pls
6527 806 Pls
6533 800 Pls
6537 822 Pls
6542 1303 Pls
6547 798 Pls
6551 1376 Pls
6557 815 Pls
6562 775 Pls
6567 812 Pls
6571 786 Pls
6576 781 Pls
6582 869 Pls
6586 1325 Pls
6591 1321 Pls
6596 1298 Pls
6601 778 Pls
6606 1316 Pls
6611 786 Pls
6616 799 Pls
6620 834 Pls
6625 1544 Pls
6631 781 Pls
6635 788 Pls
6640 781 Pls
6645 1489 Pls
6650 764 Pls
6655 1301 Pls
6660 780 Pls
6665 1455 Pls
6669 1353 Pls
6674 1345 Pls
6680 781 Pls
6685 880 Pls
6689 1540 Pls
6694 775 Pls
6699 823 Pls
6704 785 Pls
6709 822 Pls
6714 1394 Pls
6718 801 Pls
6723 785 Pls
6729 791 Pls
6734 815 Pls
6738 783 Pls
6743 1328 Pls
6748 788 Pls
6753 1358 Pls
6758 805 Pls
6763 840 Pls
6768 1323 Pls
6772 1364 Pls
6778 781 Pls
6783 1356 Pls
6787 781 Pls
6792 1377 Pls
6797 799 Pls
6802 811 Pls
6807 822 Pls
6812 787 Pls
6817 800 Pls
6821 1309 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
