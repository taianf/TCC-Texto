%!PS-Adobe-2.0 EPSF-2.0
%%Title: ker19Sem.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Thu Apr  3 23:49:20 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ker19Sem.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr  3 23:49:20 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1386 660 M
63 0 V
5377 0 R
-63 0 V
1386 1346 M
63 0 V
5377 0 R
-63 0 V
1386 2032 M
63 0 V
5377 0 R
-63 0 V
1386 2718 M
63 0 V
5377 0 R
-63 0 V
1386 3404 M
63 0 V
5377 0 R
-63 0 V
1386 4090 M
63 0 V
5377 0 R
-63 0 V
1386 4776 M
63 0 V
5377 0 R
-63 0 V
1386 660 M
0 63 V
0 4053 R
0 -63 V
2293 660 M
0 63 V
0 4053 R
0 -63 V
3199 660 M
0 63 V
0 4053 R
0 -63 V
4106 660 M
0 63 V
0 4053 R
0 -63 V
5013 660 M
0 63 V
0 4053 R
0 -63 V
5919 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
-5440 63 R
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
1.000 UP
1386 1244 Pls
1391 1185 Pls
1396 1180 Pls
1401 1177 Pls
1406 1191 Pls
1411 1188 Pls
1417 1187 Pls
1421 1184 Pls
1427 1195 Pls
1431 1177 Pls
1437 1212 Pls
1442 1188 Pls
1447 1179 Pls
1452 1185 Pls
1457 1187 Pls
1462 1183 Pls
1468 1184 Pls
1472 1190 Pls
1478 1191 Pls
1482 1194 Pls
1488 1195 Pls
1493 1181 Pls
1498 1191 Pls
1503 1187 Pls
1507 1196 Pls
1513 1181 Pls
1518 1180 Pls
1523 1180 Pls
1528 1177 Pls
1533 1190 Pls
1538 1177 Pls
1544 1181 Pls
1548 1196 Pls
1554 1190 Pls
1558 1188 Pls
1564 1185 Pls
1569 1185 Pls
1574 1180 Pls
1579 1179 Pls
1584 1179 Pls
1589 1187 Pls
1595 1194 Pls
1599 1183 Pls
1605 1180 Pls
1609 1190 Pls
1614 1181 Pls
1620 1180 Pls
1624 1180 Pls
1630 1181 Pls
1635 1175 Pls
1640 1196 Pls
1645 1180 Pls
1650 1194 Pls
1655 1180 Pls
1660 1191 Pls
1665 1177 Pls
1671 1184 Pls
1675 1190 Pls
1681 1194 Pls
1685 1180 Pls
1691 1184 Pls
1696 1192 Pls
1701 1190 Pls
1706 1194 Pls
1711 1194 Pls
1716 1191 Pls
1721 1190 Pls
1726 1181 Pls
1731 1181 Pls
1736 1190 Pls
1741 1177 Pls
1747 1179 Pls
1751 1175 Pls
1757 1179 Pls
1761 1194 Pls
1767 1185 Pls
1772 1177 Pls
1777 1185 Pls
1782 1187 Pls
1787 1192 Pls
1792 1184 Pls
1798 1176 Pls
1802 1194 Pls
1808 1179 Pls
1812 1190 Pls
1818 1185 Pls
1823 1238 Pls
1828 1196 Pls
1833 1180 Pls
1838 1194 Pls
1843 1214 Pls
1848 1187 Pls
1853 1194 Pls
1858 1181 Pls
1863 1177 Pls
1868 1180 Pls
1874 1179 Pls
1878 1191 Pls
1884 1177 Pls
1889 1199 Pls
1894 1192 Pls
1899 1180 Pls
1904 1202 Pls
1909 1176 Pls
1914 1187 Pls
1919 1191 Pls
1925 1176 Pls
1929 1184 Pls
1935 1177 Pls
1939 1191 Pls
1945 1188 Pls
1950 1181 Pls
1954 1194 Pls
1960 1196 Pls
1964 1195 Pls
1970 1187 Pls
1975 1180 Pls
1980 1185 Pls
1985 1181 Pls
1990 1187 Pls
1995 1177 Pls
2001 1195 Pls
2005 1190 Pls
2011 1194 Pls
2015 1184 Pls
2021 1191 Pls
2026 1187 Pls
2031 1190 Pls
2036 1195 Pls
2041 1190 Pls
2046 1177 Pls
2051 1184 Pls
2056 1181 Pls
2061 1194 Pls
2066 1195 Pls
2071 1180 Pls
2077 1194 Pls
2081 1185 Pls
2087 1194 Pls
2091 1176 Pls
2097 1181 Pls
2102 1195 Pls
2107 1184 Pls
2112 1181 Pls
2117 1190 Pls
2122 1179 Pls
2128 1187 Pls
2132 1231 Pls
2138 1177 Pls
2143 1191 Pls
2148 1181 Pls
2153 1190 Pls
2158 1184 Pls
2163 1185 Pls
2168 1194 Pls
2173 1187 Pls
2178 1181 Pls
2183 1180 Pls
2188 1190 Pls
2193 1194 Pls
2198 1190 Pls
2204 1191 Pls
2208 1191 Pls
2214 1179 Pls
2218 1181 Pls
2224 1190 Pls
2229 1190 Pls
2234 1181 Pls
2239 1191 Pls
2244 1185 Pls
2249 1179 Pls
2255 1180 Pls
2259 1180 Pls
2265 1183 Pls
2269 1177 Pls
2275 1179 Pls
2280 1188 Pls
2285 1188 Pls
2290 1185 Pls
2294 1177 Pls
2300 1184 Pls
2305 1179 Pls
2310 1187 Pls
2315 1190 Pls
2320 1183 Pls
2325 1194 Pls
2331 1191 Pls
2335 1194 Pls
2341 1179 Pls
2345 1191 Pls
2351 1192 Pls
2356 1185 Pls
2361 1188 Pls
2366 1187 Pls
2371 1194 Pls
2376 1196 Pls
2382 1187 Pls
2386 1176 Pls
2391 1191 Pls
2397 1199 Pls
2401 1203 Pls
2407 1177 Pls
2411 1180 Pls
2417 1177 Pls
2421 1180 Pls
2427 1181 Pls
2432 1180 Pls
2437 1187 Pls
2442 1180 Pls
2447 1195 Pls
2452 1190 Pls
2458 1190 Pls
2462 1181 Pls
2468 1180 Pls
2472 1180 Pls
2478 1194 Pls
2483 1179 Pls
2488 1188 Pls
2493 1185 Pls
2498 1195 Pls
2503 1218 Pls
2508 1187 Pls
2513 1177 Pls
2518 1190 Pls
2523 1190 Pls
2528 1191 Pls
2534 1184 Pls
2538 1190 Pls
2544 1180 Pls
2548 1196 Pls
2554 1177 Pls
2559 1194 Pls
2564 1179 Pls
2569 1181 Pls
2574 1180 Pls
2579 1179 Pls
2585 1181 Pls
2589 1191 Pls
2595 1177 Pls
2599 1176 Pls
2605 1190 Pls
2610 1194 Pls
2615 1196 Pls
2620 1181 Pls
2625 1180 Pls
2630 1188 Pls
2635 1180 Pls
2640 1179 Pls
2645 1190 Pls
2651 1175 Pls
2655 1185 Pls
2661 1177 Pls
2665 1181 Pls
2671 1194 Pls
2675 1185 Pls
2681 1177 Pls
2686 1177 Pls
2691 1181 Pls
2696 1191 Pls
2701 1187 Pls
2706 1195 Pls
2712 1187 Pls
2716 1184 Pls
2722 1181 Pls
2726 1179 Pls
2731 1192 Pls
2737 1184 Pls
2741 1180 Pls
2747 1192 Pls
2751 1177 Pls
2757 1176 Pls
2762 1177 Pls
2767 1190 Pls
2772 1184 Pls
2777 1192 Pls
2782 1191 Pls
2788 1194 Pls
2802 1206 Pls
2808 1184 Pls
2813 1179 Pls
2818 1177 Pls
2823 1177 Pls
2828 1266 Pls
2833 1279 Pls
2838 1262 Pls
2843 1180 Pls
2848 1185 Pls
2853 1194 Pls
2858 1191 Pls
2864 1194 Pls
2868 1188 Pls
2874 1233 Pls
2878 1179 Pls
2884 1181 Pls
2889 1180 Pls
2894 1194 Pls
2899 1181 Pls
2905 1175 Pls
2909 1187 Pls
2915 1181 Pls
2919 1246 Pls
2925 1213 Pls
2929 1188 Pls
2935 1190 Pls
2940 1180 Pls
2945 1190 Pls
2950 1213 Pls
2955 1243 Pls
2960 1199 Pls
2965 1175 Pls
2970 1177 Pls
2975 1188 Pls
2980 1184 Pls
2985 1185 Pls
2991 1177 Pls
2995 1181 Pls
3001 1177 Pls
3005 1199 Pls
3011 1190 Pls
3016 1180 Pls
3021 1191 Pls
3026 1179 Pls
3031 1185 Pls
3036 1187 Pls
3042 1187 Pls
3046 1265 Pls
3052 1260 Pls
3056 1180 Pls
3062 1194 Pls
3067 1177 Pls
3071 1181 Pls
3077 1181 Pls
3081 1179 Pls
3087 1187 Pls
3092 1181 Pls
3097 1180 Pls
3102 1187 Pls
3107 1187 Pls
3112 1194 Pls
3118 1187 Pls
3122 1187 Pls
3128 1181 Pls
3132 1179 Pls
3138 1192 Pls
3143 1185 Pls
3148 1192 Pls
3153 1177 Pls
3159 1176 Pls
3163 1185 Pls
3169 1177 Pls
3173 1187 Pls
3178 1187 Pls
3183 1188 Pls
3188 1176 Pls
3194 1179 Pls
3198 1187 Pls
3204 1179 Pls
3208 1187 Pls
3214 1188 Pls
3219 1185 Pls
3224 1194 Pls
3229 1191 Pls
3234 1176 Pls
3239 1185 Pls
3245 1218 Pls
3249 1194 Pls
3255 1179 Pls
3259 1191 Pls
3265 1192 Pls
3270 1173 Pls
3275 1187 Pls
3280 1177 Pls
3285 1195 Pls
3295 1212 Pls
3300 1181 Pls
3305 1187 Pls
3310 1175 Pls
3315 1196 Pls
3321 1185 Pls
3325 1188 Pls
3331 1190 Pls
3335 1177 Pls
3341 1188 Pls
3346 1194 Pls
3351 1185 Pls
3356 1177 Pls
3361 1195 Pls
3366 1177 Pls
3372 1185 Pls
3376 1191 Pls
3382 1187 Pls
3386 1191 Pls
3392 1196 Pls
3397 1191 Pls
3402 1190 Pls
3407 1190 Pls
3412 1188 Pls
3417 1195 Pls
3422 1177 Pls
3427 1181 Pls
3432 1188 Pls
3437 1184 Pls
3442 1177 Pls
3448 1196 Pls
3452 1194 Pls
3458 1180 Pls
3462 1177 Pls
3468 1181 Pls
3473 1184 Pls
3478 1190 Pls
3483 1179 Pls
3488 1177 Pls
3493 1177 Pls
3499 1181 Pls
3503 1185 Pls
3509 1179 Pls
3513 1177 Pls
3518 1194 Pls
3524 1180 Pls
3528 1185 Pls
3534 1177 Pls
3538 1184 Pls
3544 1185 Pls
3549 1183 Pls
3554 1179 Pls
3559 1195 Pls
3564 1180 Pls
3569 1191 Pls
3575 1181 Pls
3579 1194 Pls
3585 1187 Pls
3589 1181 Pls
3595 1194 Pls
3600 1187 Pls
3605 1180 Pls
3610 1194 Pls
3615 1201 Pls
3620 1181 Pls
3625 1184 Pls
3630 1184 Pls
3635 1176 Pls
3640 1185 Pls
3645 1191 Pls
3651 1194 Pls
3655 1177 Pls
3661 1187 Pls
3666 1173 Pls
3671 1191 Pls
3676 1176 Pls
3681 1191 Pls
3686 1179 Pls
3691 1176 Pls
3696 1191 Pls
3702 1195 Pls
3706 1194 Pls
3712 1184 Pls
3716 1187 Pls
3722 1179 Pls
3727 1177 Pls
3732 1179 Pls
3737 1183 Pls
3742 1188 Pls
3748 1194 Pls
3752 1177 Pls
3758 1181 Pls
3763 1184 Pls
3768 1177 Pls
3773 1177 Pls
3778 1187 Pls
3783 1194 Pls
3789 1191 Pls
3793 1184 Pls
3799 1190 Pls
3803 1191 Pls
3809 1194 Pls
3814 1180 Pls
3819 1181 Pls
3824 1180 Pls
3829 1194 Pls
3834 1195 Pls
3839 1177 Pls
3844 1187 Pls
3849 1179 Pls
3854 1184 Pls
3859 1198 Pls
3865 1191 Pls
3869 1191 Pls
3875 1194 Pls
3879 1194 Pls
3885 1194 Pls
3890 1180 Pls
3895 1192 Pls
3900 1184 Pls
3905 1188 Pls
3910 1190 Pls
3916 1196 Pls
3921 1175 Pls
3926 1190 Pls
3930 1181 Pls
3936 1181 Pls
3941 1183 Pls
3946 1184 Pls
3951 1180 Pls
3955 1180 Pls
3961 1187 Pls
3966 1179 Pls
3971 1188 Pls
3976 1179 Pls
3981 1177 Pls
3986 1203 Pls
3992 1179 Pls
3996 1188 Pls
4002 1181 Pls
4006 1173 Pls
4012 1188 Pls
4017 1195 Pls
4022 1183 Pls
4027 1196 Pls
4032 1177 Pls
4037 1185 Pls
4043 1185 Pls
4047 1185 Pls
4053 1179 Pls
4057 1190 Pls
4062 1184 Pls
4068 1190 Pls
4072 1179 Pls
4078 1187 Pls
4082 1179 Pls
4088 1191 Pls
4093 1179 Pls
4098 1188 Pls
4103 1190 Pls
4108 1183 Pls
4113 1191 Pls
4119 1184 Pls
4123 1192 Pls
4129 1181 Pls
4133 1185 Pls
4139 1176 Pls
4144 1184 Pls
4149 1181 Pls
4154 1194 Pls
4159 1185 Pls
4164 1181 Pls
4169 1179 Pls
4175 1187 Pls
4179 1185 Pls
4184 1181 Pls
4189 1179 Pls
4195 1196 Pls
4199 1184 Pls
4205 1190 Pls
4209 1184 Pls
4215 1183 Pls
4220 1191 Pls
4225 1185 Pls
4230 1183 Pls
4235 1190 Pls
4240 1187 Pls
4246 1180 Pls
4250 1188 Pls
4256 1177 Pls
4260 1191 Pls
4266 1196 Pls
4271 1181 Pls
4276 1179 Pls
4281 1183 Pls
4286 1185 Pls
4291 1190 Pls
4296 1187 Pls
4301 1179 Pls
4306 1191 Pls
4311 1196 Pls
4316 1180 Pls
4322 1177 Pls
4326 1187 Pls
4332 1192 Pls
4336 1181 Pls
4342 1187 Pls
4347 1177 Pls
4352 1190 Pls
4357 1194 Pls
4362 1191 Pls
4367 1188 Pls
4373 1184 Pls
4377 1179 Pls
4383 1191 Pls
4387 1181 Pls
4393 1177 Pls
4398 1191 Pls
4402 1187 Pls
4408 1191 Pls
4412 1195 Pls
4418 1183 Pls
4423 1185 Pls
4429 1185 Pls
4433 1187 Pls
4438 1177 Pls
4443 1187 Pls
4449 1179 Pls
4453 1177 Pls
4459 1181 Pls
4463 1191 Pls
4469 1184 Pls
4474 1180 Pls
4479 1181 Pls
4484 1194 Pls
4489 1183 Pls
4490 1177 Pls
4494 1192 Pls
4499 1190 Pls
4504 1187 Pls
4509 1177 Pls
4514 1177 Pls
4519 1190 Pls
4525 1177 Pls
4529 1177 Pls
4535 1180 Pls
4539 1183 Pls
4545 1181 Pls
4550 1187 Pls
4555 1177 Pls
4560 1191 Pls
4565 1187 Pls
4570 1196 Pls
4576 1177 Pls
4580 1191 Pls
4586 1221 Pls
4590 1177 Pls
4596 1188 Pls
4601 1190 Pls
4606 1177 Pls
4611 1180 Pls
4616 1191 Pls
4621 1177 Pls
4626 1177 Pls
4631 1190 Pls
4636 1195 Pls
4641 1213 Pls
4646 1177 Pls
4652 1191 Pls
4656 1177 Pls
4662 1195 Pls
4666 1177 Pls
4672 1187 Pls
4677 1185 Pls
4682 1195 Pls
4687 1177 Pls
4692 1185 Pls
4697 1190 Pls
4703 1191 Pls
4707 1185 Pls
4713 1177 Pls
4717 1187 Pls
4723 1185 Pls
4728 1201 Pls
4733 1176 Pls
4738 1177 Pls
4742 1187 Pls
4748 1184 Pls
4753 1196 Pls
4758 1192 Pls
4763 1191 Pls
4768 1198 Pls
4773 1191 Pls
4779 1190 Pls
4783 1192 Pls
4789 1195 Pls
4793 1187 Pls
4799 1179 Pls
4804 1190 Pls
4809 1187 Pls
4814 1181 Pls
4819 1190 Pls
4824 1195 Pls
4830 1185 Pls
4834 1192 Pls
4839 1188 Pls
4844 1196 Pls
4849 1207 Pls
4855 1177 Pls
4859 1183 Pls
4865 1194 Pls
4869 1179 Pls
4875 1181 Pls
4880 1187 Pls
4885 1180 Pls
4890 1180 Pls
4895 1180 Pls
4900 1191 Pls
4906 1190 Pls
4910 1177 Pls
4916 1192 Pls
4920 1192 Pls
4926 1191 Pls
4931 1187 Pls
4936 1175 Pls
4941 1181 Pls
4946 1202 Pls
4951 1176 Pls
4956 1190 Pls
4961 1191 Pls
4966 1191 Pls
4971 1194 Pls
4976 1185 Pls
4982 1184 Pls
4986 1190 Pls
4992 1185 Pls
4996 1181 Pls
5002 1177 Pls
5007 1179 Pls
5012 1177 Pls
5017 1177 Pls
5022 1183 Pls
5027 1179 Pls
5033 1181 Pls
5037 1191 Pls
5043 1190 Pls
5047 1196 Pls
5053 1187 Pls
5058 1181 Pls
5063 1192 Pls
5068 1177 Pls
5073 1190 Pls
5078 1180 Pls
5083 1188 Pls
5088 1194 Pls
5093 1177 Pls
5098 1190 Pls
5103 1190 Pls
5109 1179 Pls
5113 1179 Pls
5119 1185 Pls
5123 1180 Pls
5129 1185 Pls
5134 1179 Pls
5139 1191 Pls
5144 1177 Pls
5149 1177 Pls
5154 1177 Pls
5160 1177 Pls
5164 1194 Pls
5170 1179 Pls
5174 1185 Pls
5179 1177 Pls
5185 1209 Pls
5189 1181 Pls
5195 1184 Pls
5199 1181 Pls
5205 1196 Pls
5210 1191 Pls
5215 1190 Pls
5220 1184 Pls
5225 1187 Pls
5230 1185 Pls
5236 1190 Pls
5240 1184 Pls
5246 1181 Pls
5250 1188 Pls
5256 1190 Pls
5261 1184 Pls
5266 1181 Pls
5271 1190 Pls
5276 1180 Pls
5281 1180 Pls
5286 1191 Pls
5291 1181 Pls
5296 1196 Pls
5301 1187 Pls
5306 1194 Pls
5312 1179 Pls
5316 1195 Pls
5322 1179 Pls
5326 1181 Pls
5332 1181 Pls
5337 1176 Pls
5342 1184 Pls
5347 1188 Pls
5352 1176 Pls
5357 1187 Pls
5363 1185 Pls
5367 1185 Pls
5373 1176 Pls
5377 1183 Pls
5383 1181 Pls
5388 1196 Pls
5393 1191 Pls
5398 1180 Pls
5403 1181 Pls
5408 1184 Pls
5413 1185 Pls
5418 1187 Pls
5423 1181 Pls
5428 1177 Pls
5433 1187 Pls
5439 1185 Pls
5443 1187 Pls
5449 1188 Pls
5453 1187 Pls
5459 1187 Pls
5464 1187 Pls
5469 1184 Pls
5474 1185 Pls
5479 1179 Pls
5484 1177 Pls
5490 1181 Pls
5494 1177 Pls
5500 1206 Pls
5504 1180 Pls
5510 1181 Pls
5515 1196 Pls
5519 1177 Pls
5524 1181 Pls
5529 1187 Pls
5533 1188 Pls
5539 1190 Pls
5543 1196 Pls
5548 1196 Pls
5552 1176 Pls
5557 1188 Pls
5562 1184 Pls
5567 1177 Pls
5571 1181 Pls
5577 1187 Pls
5581 1177 Pls
5586 1187 Pls
5590 1183 Pls
5595 1187 Pls
5600 1190 Pls
5605 1188 Pls
5609 1180 Pls
5614 1191 Pls
5618 1181 Pls
5624 1183 Pls
5628 1177 Pls
5633 1181 Pls
5637 1191 Pls
5642 1196 Pls
5647 1190 Pls
5652 1177 Pls
5656 1181 Pls
5661 1177 Pls
5665 1184 Pls
5671 1190 Pls
5675 1185 Pls
5680 1175 Pls
5685 1180 Pls
5689 1185 Pls
5694 1192 Pls
5699 1187 Pls
5704 1181 Pls
5708 1180 Pls
5713 1196 Pls
5718 1177 Pls
5723 1180 Pls
5727 1192 Pls
5732 1191 Pls
5736 1185 Pls
5742 1185 Pls
5746 1195 Pls
5751 1183 Pls
5755 1188 Pls
5760 1184 Pls
5765 1188 Pls
5770 1184 Pls
5774 1191 Pls
5779 1187 Pls
5783 1184 Pls
5789 1185 Pls
5793 1187 Pls
5798 1194 Pls
5802 1190 Pls
5807 1179 Pls
5812 1181 Pls
5817 1187 Pls
5821 1185 Pls
5826 1188 Pls
5830 1181 Pls
5836 1236 Pls
5840 1187 Pls
5845 1184 Pls
5850 1187 Pls
5854 1190 Pls
5859 1187 Pls
5864 1177 Pls
5869 1191 Pls
5873 1177 Pls
5878 1195 Pls
5883 1191 Pls
5888 1183 Pls
5897 1201 Pls
5901 1183 Pls
5907 1190 Pls
5911 1183 Pls
5916 1185 Pls
5920 1195 Pls
5925 1187 Pls
5930 1196 Pls
5935 1188 Pls
5939 1190 Pls
5944 1195 Pls
5948 1188 Pls
5954 1179 Pls
5958 1194 Pls
5963 1183 Pls
5967 1229 Pls
5972 1203 Pls
5977 1176 Pls
5982 1188 Pls
5986 1190 Pls
5991 1177 Pls
5995 1177 Pls
6001 1179 Pls
6005 1180 Pls
6010 1195 Pls
6015 1188 Pls
6019 1190 Pls
6025 1183 Pls
6029 1187 Pls
6034 1181 Pls
6038 1181 Pls
6043 1181 Pls
6048 1179 Pls
6053 1177 Pls
6057 1188 Pls
6062 1177 Pls
6066 1190 Pls
6072 1185 Pls
6076 1187 Pls
6081 1180 Pls
6085 1177 Pls
6090 1190 Pls
6095 1191 Pls
6100 1190 Pls
6104 1180 Pls
6109 1185 Pls
6113 1176 Pls
6119 1180 Pls
6123 1188 Pls
6128 1179 Pls
6132 1191 Pls
6137 1179 Pls
6142 1185 Pls
6147 1194 Pls
6151 1170 Pls
6156 1195 Pls
6161 1177 Pls
6166 1187 Pls
6170 1188 Pls
6175 1188 Pls
6180 1183 Pls
6184 1177 Pls
6190 1187 Pls
6194 1188 Pls
6199 1181 Pls
6203 1191 Pls
6208 1183 Pls
6213 1192 Pls
6218 1184 Pls
6222 1180 Pls
6227 1179 Pls
6231 1181 Pls
6237 1195 Pls
6241 1191 Pls
6246 1181 Pls
6250 1179 Pls
6255 1188 Pls
6260 1180 Pls
6265 1190 Pls
6269 1180 Pls
6274 1196 Pls
6278 1183 Pls
6284 1185 Pls
6288 1177 Pls
6293 1180 Pls
6297 1179 Pls
6302 1180 Pls
6307 1181 Pls
6312 1194 Pls
6316 1181 Pls
6321 1184 Pls
6326 1194 Pls
6331 1180 Pls
6335 1191 Pls
6340 1177 Pls
6345 1195 Pls
6349 1191 Pls
6355 1188 Pls
6359 1191 Pls
6364 1195 Pls
6368 1195 Pls
6374 1196 Pls
6378 1184 Pls
6383 1177 Pls
6387 1194 Pls
6392 1183 Pls
6396 1188 Pls
6402 1175 Pls
6406 1191 Pls
6411 1192 Pls
6415 1185 Pls
6420 1205 Pls
6425 1176 Pls
6430 1190 Pls
6434 1190 Pls
6439 1187 Pls
6444 1184 Pls
6449 1188 Pls
6453 1184 Pls
6458 1192 Pls
6462 1191 Pls
6468 1177 Pls
6472 1192 Pls
6477 1180 Pls
6481 1181 Pls
6486 1181 Pls
6491 1183 Pls
6496 1187 Pls
6501 1177 Pls
6505 1177 Pls
6510 1179 Pls
6515 1184 Pls
6520 1185 Pls
6524 1179 Pls
6529 1179 Pls
6533 1187 Pls
6539 1194 Pls
6543 1191 Pls
6548 1188 Pls
6552 1181 Pls
6557 1191 Pls
6562 1181 Pls
6567 1184 Pls
6571 1184 Pls
6576 1213 Pls
6580 1179 Pls
6586 1184 Pls
6590 1184 Pls
6595 1185 Pls
6599 1188 Pls
6604 1185 Pls
6609 1181 Pls
6614 1185 Pls
6618 1194 Pls
6623 1173 Pls
6627 1201 Pls
6633 1188 Pls
6637 1196 Pls
6642 1188 Pls
6646 1194 Pls
6652 1181 Pls
6656 1184 Pls
6662 1181 Pls
6667 1187 Pls
6672 1187 Pls
6677 1196 Pls
6682 1194 Pls
6687 1179 Pls
6693 1180 Pls
6697 1181 Pls
6703 1177 Pls
6707 1180 Pls
6713 1185 Pls
6718 1187 Pls
6723 1183 Pls
6728 1195 Pls
6733 1179 Pls
6738 1194 Pls
6743 1190 Pls
6748 1195 Pls
6753 1187 Pls
6758 1177 Pls
6763 1195 Pls
6769 1176 Pls
6773 1179 Pls
6779 1194 Pls
6783 1185 Pls
6789 1177 Pls
6794 1185 Pls
6799 1183 Pls
6804 1181 Pls
6809 1187 Pls
6814 1177 Pls
6820 1196 Pls
6824 1192 Pls
2.000 UP
1.000 UL
LTb
2792 4364 TriU
2798 4364 TriU
3290 4364 TriU
5892 4364 TriU
1.000 UL
LTb
1386 4776 M
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
