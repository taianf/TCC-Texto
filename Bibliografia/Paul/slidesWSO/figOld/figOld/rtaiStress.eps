%!PS-Adobe-2.0 EPSF-2.0
%%Title: rtaiStress.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Thu Jan  3 22:35:51 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rtaiStress.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan  3 22:35:51 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1386 660 M
63 0 V
5377 0 R
-63 0 V
1386 1346 M
63 0 V
5377 0 R
-63 0 V
1386 2032 M
63 0 V
5377 0 R
-63 0 V
1386 2718 M
63 0 V
5377 0 R
-63 0 V
1386 3404 M
63 0 V
5377 0 R
-63 0 V
1386 4090 M
63 0 V
5377 0 R
-63 0 V
1386 4776 M
63 0 V
5377 0 R
-63 0 V
1386 660 M
0 63 V
0 4053 R
0 -63 V
2746 660 M
0 63 V
0 4053 R
0 -63 V
4106 660 M
0 63 V
0 4053 R
0 -63 V
5466 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
-5440 63 R
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
1.000 UP
stroke
LT0
0.00 0.00 1.00 C LTb
LT0
0.00 0.00 1.00 C 1389 845 TriU
1405 993 TriU
1419 1072 TriU
1435 852 TriU
1449 842 TriU
1465 852 TriU
1481 838 TriU
1495 859 TriU
1511 838 TriU
1525 852 TriU
1541 835 TriU
1557 852 TriU
1571 979 TriU
1587 838 TriU
1601 845 TriU
1617 835 TriU
1634 849 TriU
1647 852 TriU
1663 852 TriU
1677 828 TriU
1693 849 TriU
1710 849 TriU
1723 849 TriU
1740 852 TriU
1753 835 TriU
1770 849 TriU
1786 842 TriU
1799 866 TriU
1816 842 TriU
1829 838 TriU
1846 849 TriU
1862 842 TriU
1876 859 TriU
1892 835 TriU
1906 852 TriU
1922 842 TriU
1938 856 TriU
1952 869 TriU
1968 893 TriU
1982 852 TriU
1998 842 TriU
2014 852 TriU
2028 849 TriU
2044 849 TriU
2058 842 TriU
2074 849 TriU
2090 849 TriU
2104 852 TriU
2120 886 TriU
2134 842 TriU
2150 856 TriU
2167 835 TriU
2180 866 TriU
2197 845 TriU
2210 832 TriU
2226 845 TriU
2243 835 TriU
2256 859 TriU
2273 842 TriU
2286 852 TriU
2303 838 TriU
2319 842 TriU
2333 862 TriU
2349 838 TriU
2362 838 TriU
2379 835 TriU
2395 883 TriU
2409 849 TriU
2425 845 TriU
2439 835 TriU
2455 849 TriU
2471 845 TriU
2485 869 TriU
2501 904 TriU
2515 835 TriU
2531 845 TriU
2547 828 TriU
2561 862 TriU
2577 838 TriU
2591 835 TriU
2607 845 TriU
2624 835 TriU
2637 859 TriU
2654 859 TriU
2667 845 TriU
2683 838 TriU
2700 2101 TriU
2716 2077 TriU
2735 2155 TriU
2749 1909 TriU
2765 2066 TriU
2781 2207 TriU
2795 2166 TriU
2811 2118 TriU
2828 2049 TriU
2844 2083 TriU
2858 2128 TriU
2874 2413 TriU
2890 1953 TriU
2904 2317 TriU
2920 2176 TriU
2934 2200 TriU
2950 2190 TriU
2966 2162 TriU
2980 2053 TriU
2999 2042 TriU
3015 2176 TriU
3029 1998 TriU
3045 1452 TriU
3059 2138 TriU
3075 2077 TriU
3091 1480 TriU
3105 2083 TriU
3121 2207 TriU
3135 1391 TriU
3151 2053 TriU
3168 2118 TriU
3181 1624 TriU
3198 2166 TriU
3211 2022 TriU
3227 1476 TriU
3244 2118 TriU
3257 2107 TriU
3274 2087 TriU
3290 1977 TriU
3306 2258 TriU
3323 1943 TriU
3336 2176 TriU
3353 2001 TriU
3369 2073 TriU
3385 2053 TriU
3402 2152 TriU
3418 2015 TriU
3434 2344 TriU
3448 2409 TriU
3464 1981 TriU
3478 2461 TriU
3494 2313 TriU
3510 2121 TriU
3527 2200 TriU
3543 2152 TriU
3559 2090 TriU
3573 2087 TriU
3589 2210 TriU
3603 1850 TriU
3619 1404 TriU
3635 1981 TriU
3649 2035 TriU
3665 1428 TriU
3679 2186 TriU
3695 2042 TriU
3712 1305 TriU
3725 2131 TriU
3742 2018 TriU
3755 2217 TriU
3771 1998 TriU
3788 1953 TriU
3801 2063 TriU
3818 1974 TriU
3834 2296 TriU
3850 2077 TriU
3864 2183 TriU
3883 2324 TriU
3897 2111 TriU
3913 2447 TriU
3926 2101 TriU
3943 2135 TriU
3956 2159 TriU
3973 2252 TriU
3989 2011 TriU
4003 2080 TriU
4019 2094 TriU
4033 1710 TriU
4049 2056 TriU
4065 2176 TriU
4079 1967 TriU
4098 2035 TriU
4114 1874 TriU
4128 2121 TriU
4144 1984 TriU
4158 2087 TriU
4174 2066 TriU
4190 1874 TriU
4204 2437 TriU
4220 2063 TriU
4234 2046 TriU
4250 1885 TriU
4266 1929 TriU
4283 2279 TriU
4296 2090 TriU
4313 2025 TriU
4329 2149 TriU
4345 2183 TriU
4359 1977 TriU
4381 1792 TriU
4397 2063 TriU
4413 2018 TriU
4427 1339 TriU
4443 2107 TriU
4457 1905 TriU
4473 2104 TriU
4490 2039 TriU
4503 2035 TriU
4519 2138 TriU
4533 2204 TriU
4549 2121 TriU
4566 2094 TriU
4579 1970 TriU
4596 2077 TriU
4609 2015 TriU
4628 2310 TriU
4642 2300 TriU
4658 1974 TriU
4674 3665 TriU
4691 2107 TriU
4704 2169 TriU
4721 2186 TriU
4734 2080 TriU
4751 1439 TriU
4767 1950 TriU
4781 2131 TriU
4797 1243 TriU
4810 2142 TriU
4827 2114 TriU
4843 2077 TriU
4857 2118 TriU
4873 2210 TriU
4887 2200 TriU
4903 2056 TriU
4919 2073 TriU
4933 2029 TriU
4952 2149 TriU
4968 2121 TriU
4985 2087 TriU
4998 2204 TriU
5014 2166 TriU
5028 2056 TriU
5044 2162 TriU
5061 2149 TriU
5074 1902 TriU
5091 2066 TriU
5104 2063 TriU
5121 1682 TriU
5137 2125 TriU
5150 2262 TriU
5167 2269 TriU
5186 2049 TriU
5199 1936 TriU
5216 2066 TriU
5229 2073 TriU
5246 2186 TriU
5262 2217 TriU
5276 2173 TriU
5292 2142 TriU
5306 2025 TriU
5322 1984 TriU
5338 1830 TriU
5352 2101 TriU
5368 2046 TriU
5384 2070 TriU
5398 2107 TriU
5417 1963 TriU
5431 2046 TriU
5447 2300 TriU
5469 1799 TriU
5482 2107 TriU
5499 2083 TriU
5512 1771 TriU
5529 2128 TriU
5545 2183 TriU
5558 883 TriU
5575 934 TriU
5588 862 TriU
5605 849 TriU
5621 842 TriU
5635 845 TriU
5651 835 TriU
5665 849 TriU
5681 845 TriU
5697 849 TriU
5711 862 TriU
5727 849 TriU
5741 842 TriU
5757 842 TriU
5773 1157 TriU
5790 849 TriU
5806 842 TriU
5822 849 TriU
5841 849 TriU
5858 852 TriU
5877 893 TriU
5893 852 TriU
5909 856 TriU
5926 869 TriU
5942 862 TriU
5958 852 TriU
5975 845 TriU
5991 856 TriU
6007 852 TriU
6024 838 TriU
6040 849 TriU
6056 856 TriU
6073 979 TriU
6089 859 TriU
6105 866 TriU
6122 856 TriU
6138 849 TriU
6154 859 TriU
6170 856 TriU
6187 849 TriU
6203 845 TriU
6219 862 TriU
6236 852 TriU
6252 845 TriU
6268 849 TriU
6285 849 TriU
6301 845 TriU
6317 1109 TriU
6334 849 TriU
6350 842 TriU
6366 842 TriU
6383 859 TriU
6399 928 TriU
6415 842 TriU
6432 856 TriU
6448 859 TriU
6464 948 TriU
6481 856 TriU
6497 852 TriU
6513 842 TriU
6530 835 TriU
6546 849 TriU
6562 845 TriU
6578 838 TriU
6595 852 TriU
6611 845 TriU
6627 828 TriU
6644 849 TriU
6660 849 TriU
6676 838 TriU
6693 832 TriU
6709 849 TriU
6725 852 TriU
6742 832 TriU
6758 842 TriU
6774 849 TriU
6791 832 TriU
6807 845 TriU
6823 845 TriU
6670 4323 TriU
1.000 UP
1.000 UL
LT1
1.00 0.00 0.00 C LTb
LT1
1.00 0.00 0.00 C 1389 1291 Pls
1405 1648 Pls
1419 1483 Pls
1435 1301 Pls
1449 1291 Pls
1465 1284 Pls
1481 1284 Pls
1495 1295 Pls
1511 1353 Pls
1525 1301 Pls
1541 1301 Pls
1557 1291 Pls
1571 1394 Pls
1587 1284 Pls
1601 1288 Pls
1617 1432 Pls
1634 1329 Pls
1647 1271 Pls
1663 1301 Pls
1677 1274 Pls
1693 1288 Pls
1710 1295 Pls
1723 1284 Pls
1740 1274 Pls
1753 1277 Pls
1770 1284 Pls
1786 1281 Pls
1799 1281 Pls
1816 1291 Pls
1829 1284 Pls
1846 1284 Pls
1862 1291 Pls
1876 1281 Pls
1892 1277 Pls
1906 1284 Pls
1922 1281 Pls
1938 1456 Pls
1952 1349 Pls
1968 1480 Pls
1982 1291 Pls
1998 1291 Pls
2014 1288 Pls
2028 1295 Pls
2044 1284 Pls
2058 1301 Pls
2074 1284 Pls
2090 1288 Pls
2104 1281 Pls
2120 1336 Pls
2134 1288 Pls
2150 1284 Pls
2167 1267 Pls
2180 1277 Pls
2197 1277 Pls
2210 1274 Pls
2226 1277 Pls
2243 1281 Pls
2256 1274 Pls
2273 1267 Pls
2286 1277 Pls
2303 1281 Pls
2319 1281 Pls
2333 1288 Pls
2349 1274 Pls
2362 1277 Pls
2379 1267 Pls
2395 1274 Pls
2409 1277 Pls
2425 1277 Pls
2439 1281 Pls
2455 1288 Pls
2471 1281 Pls
2485 1487 Pls
2501 1305 Pls
2515 1281 Pls
2531 1312 Pls
2547 1274 Pls
2561 1277 Pls
2577 1284 Pls
2591 1284 Pls
2607 1288 Pls
2624 1308 Pls
2637 1288 Pls
2654 1298 Pls
2667 1291 Pls
2683 1284 Pls
2700 1672 Pls
2716 1740 Pls
2735 2495 Pls
2749 2022 Pls
2765 1826 Pls
2781 2066 Pls
2795 1775 Pls
2811 2238 Pls
2828 2413 Pls
2844 1624 Pls
2858 2262 Pls
2874 2773 Pls
2890 1737 Pls
2904 2962 Pls
2920 2975 Pls
2934 1679 Pls
2950 2865 Pls
2966 2118 Pls
2980 1682 Pls
2999 2471 Pls
3015 2646 Pls
3029 2001 Pls
3045 1771 Pls
3059 1960 Pls
3075 1775 Pls
3091 1665 Pls
3105 1981 Pls
3121 1737 Pls
3135 1569 Pls
3151 1919 Pls
3168 1963 Pls
3181 1607 Pls
3198 1915 Pls
3211 1775 Pls
3227 1631 Pls
3244 2008 Pls
3257 1480 Pls
3274 1631 Pls
3290 2420 Pls
3306 2574 Pls
3323 1758 Pls
3336 1946 Pls
3353 2025 Pls
3369 1795 Pls
3385 2306 Pls
3402 2207 Pls
3418 1703 Pls
3434 2231 Pls
3448 3023 Pls
3464 1590 Pls
3478 2660 Pls
3494 3143 Pls
3510 1682 Pls
3527 2389 Pls
3543 2547 Pls
3559 1950 Pls
3573 2135 Pls
3589 2560 Pls
3603 1946 Pls
3619 1456 Pls
3635 1998 Pls
3649 1929 Pls
3665 1603 Pls
3679 2022 Pls
3695 1809 Pls
3712 1514 Pls
3725 1902 Pls
3742 1861 Pls
3755 1706 Pls
3771 2231 Pls
3788 1812 Pls
3801 1823 Pls
3818 1542 Pls
3834 2800 Pls
3850 1593 Pls
3864 1836 Pls
3883 2927 Pls
3897 1624 Pls
3913 3147 Pls
3926 2797 Pls
3943 1644 Pls
3956 2056 Pls
3973 1476 Pls
3989 1655 Pls
4003 1977 Pls
4019 1912 Pls
4033 1682 Pls
4049 2444 Pls
4065 3102 Pls
4079 1679 Pls
4098 2619 Pls
4114 1946 Pls
4128 2306 Pls
4144 1826 Pls
4158 1977 Pls
4174 1806 Pls
4190 1854 Pls
4204 2029 Pls
4220 1981 Pls
4234 1919 Pls
4250 1987 Pls
4266 1586 Pls
4283 2255 Pls
4296 2046 Pls
4313 1679 Pls
4329 2447 Pls
4345 2101 Pls
4359 1754 Pls
4381 2492 Pls
4397 2032 Pls
4413 1655 Pls
4427 1469 Pls
4443 1957 Pls
4457 1795 Pls
4473 1758 Pls
4490 2056 Pls
4503 2152 Pls
4519 1874 Pls
4533 2015 Pls
4549 1806 Pls
4566 1816 Pls
4579 2011 Pls
4596 1871 Pls
4609 1830 Pls
4628 2454 Pls
4642 1775 Pls
4658 1679 Pls
4674 2303 Pls
4691 1974 Pls
4704 2022 Pls
4721 2042 Pls
4734 1871 Pls
4751 1548 Pls
4767 1963 Pls
4781 1984 Pls
4797 1662 Pls
4810 1970 Pls
4827 1692 Pls
4843 1799 Pls
4857 2025 Pls
4873 1936 Pls
4887 1819 Pls
4903 1778 Pls
4919 2107 Pls
4933 1562 Pls
4952 2228 Pls
4968 2649 Pls
4985 1638 Pls
4998 2790 Pls
5014 2855 Pls
5028 1610 Pls
5044 2008 Pls
5061 1785 Pls
5074 1631 Pls
5091 2029 Pls
5104 1836 Pls
5121 1648 Pls
5137 2389 Pls
5150 2914 Pls
5167 1569 Pls
5186 2485 Pls
5199 2485 Pls
5216 2042 Pls
5229 1854 Pls
5246 2221 Pls
5262 1809 Pls
5276 1806 Pls
5292 1970 Pls
5306 1696 Pls
5322 1854 Pls
5338 2063 Pls
5352 1963 Pls
5368 2135 Pls
5384 2022 Pls
5398 1668 Pls
5417 2701 Pls
5431 2454 Pls
5447 1692 Pls
5469 2300 Pls
5482 2519 Pls
5499 1799 Pls
5512 1651 Pls
5529 1957 Pls
5545 2114 Pls
5558 1332 Pls
5575 1343 Pls
5588 1284 Pls
5605 1339 Pls
5621 1271 Pls
5635 1271 Pls
5651 1253 Pls
5665 1260 Pls
5681 1257 Pls
5697 1253 Pls
5711 1281 Pls
5727 1271 Pls
5741 1260 Pls
5757 1271 Pls
5773 1874 Pls
5790 1281 Pls
5806 1260 Pls
5822 1271 Pls
5841 1274 Pls
5858 1260 Pls
5877 1271 Pls
5893 1277 Pls
5909 1271 Pls
5926 1264 Pls
5942 1260 Pls
5958 1271 Pls
5975 1274 Pls
5991 1271 Pls
6007 1267 Pls
6024 1271 Pls
6040 1267 Pls
6056 1271 Pls
6073 1607 Pls
6089 1315 Pls
6105 1322 Pls
6122 1308 Pls
6138 1295 Pls
6154 1308 Pls
6170 1305 Pls
6187 1295 Pls
6203 1301 Pls
6219 1305 Pls
6236 1291 Pls
6252 1298 Pls
6268 1284 Pls
6285 1291 Pls
6301 1288 Pls
6317 1655 Pls
6334 1301 Pls
6350 1298 Pls
6366 1291 Pls
6383 1284 Pls
6399 1284 Pls
6415 1271 Pls
6432 1267 Pls
6448 1288 Pls
6464 1301 Pls
6481 1308 Pls
6497 1267 Pls
6513 1291 Pls
6530 1291 Pls
6546 1295 Pls
6562 1288 Pls
6578 1284 Pls
6595 1291 Pls
6611 1288 Pls
6627 1274 Pls
6644 1298 Pls
6660 1291 Pls
6676 1298 Pls
6693 1281 Pls
6709 1295 Pls
6725 1295 Pls
6742 1281 Pls
6758 1298 Pls
6774 1288 Pls
6791 1281 Pls
6807 1295 Pls
6823 1295 Pls
6670 4103 Pls
1.000 UL
LTb
1386 4776 M
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
