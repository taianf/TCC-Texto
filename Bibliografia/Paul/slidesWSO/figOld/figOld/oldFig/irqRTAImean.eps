%!PS-Adobe-2.0 EPSF-2.0
%%Title: irqRTAImean.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Mon Dec 17 21:50:13 2007
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (irqRTAImean.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec 17 21:50:13 2007)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1386 660 M
63 0 V
5377 0 R
-63 0 V
1386 1032 M
63 0 V
5377 0 R
-63 0 V
1386 1404 M
63 0 V
5377 0 R
-63 0 V
1386 1776 M
63 0 V
5377 0 R
-63 0 V
1386 2148 M
63 0 V
5377 0 R
-63 0 V
1386 2520 M
63 0 V
5377 0 R
-63 0 V
1386 2892 M
63 0 V
5377 0 R
-63 0 V
1386 3264 M
63 0 V
5377 0 R
-63 0 V
1386 3636 M
63 0 V
5377 0 R
-63 0 V
1386 4008 M
63 0 V
5377 0 R
-63 0 V
1386 4380 M
63 0 V
5377 0 R
-63 0 V
1386 660 M
0 63 V
0 3657 R
0 -63 V
1990 660 M
0 63 V
0 3657 R
0 -63 V
2595 660 M
0 63 V
0 3657 R
0 -63 V
3199 660 M
0 63 V
0 3657 R
0 -63 V
3804 660 M
0 63 V
0 3657 R
0 -63 V
4408 660 M
0 63 V
0 3657 R
0 -63 V
5013 660 M
0 63 V
0 3657 R
0 -63 V
5617 660 M
0 63 V
0 3657 R
0 -63 V
6222 660 M
0 63 V
0 3657 R
0 -63 V
6826 660 M
0 63 V
0 3657 R
0 -63 V
-5440 63 R
0 -3720 V
5440 0 V
0 3720 V
-5440 0 V
1.000 UP
1.000 UP
stroke
LT0
1386 898 Pls
1398 956 Pls
1410 920 Pls
1422 885 Pls
1434 887 Pls
1446 885 Pls
1459 885 Pls
1471 924 Pls
1483 887 Pls
1495 876 Pls
1507 874 Pls
1519 868 Pls
1531 874 Pls
1543 876 Pls
1555 872 Pls
1567 898 Pls
1579 881 Pls
1592 872 Pls
1604 872 Pls
1616 874 Pls
1628 870 Pls
1640 881 Pls
1652 868 Pls
1664 887 Pls
1676 868 Pls
1688 874 Pls
1700 876 Pls
1712 904 Pls
1724 878 Pls
1737 872 Pls
1749 893 Pls
1761 878 Pls
1773 878 Pls
1785 876 Pls
1797 870 Pls
1809 868 Pls
1821 872 Pls
1833 878 Pls
1845 889 Pls
1857 874 Pls
1870 881 Pls
1882 870 Pls
1894 868 Pls
1906 866 Pls
1918 876 Pls
1930 891 Pls
1942 883 Pls
1954 878 Pls
1966 868 Pls
1978 872 Pls
1990 868 Pls
2003 874 Pls
2015 893 Pls
2027 889 Pls
2039 881 Pls
2051 874 Pls
2063 902 Pls
2075 876 Pls
2087 878 Pls
2099 872 Pls
2111 885 Pls
2123 872 Pls
2136 874 Pls
2148 876 Pls
2160 907 Pls
2172 874 Pls
2184 872 Pls
2196 883 Pls
2208 878 Pls
2220 874 Pls
2232 874 Pls
2244 876 Pls
2256 872 Pls
2268 870 Pls
2281 868 Pls
2293 896 Pls
2305 872 Pls
2317 896 Pls
2329 868 Pls
2341 900 Pls
2353 919 Pls
2365 891 Pls
2377 891 Pls
2389 911 Pls
2401 1021 Pls
2414 909 Pls
2426 898 Pls
2438 893 Pls
2450 937 Pls
2462 939 Pls
2474 924 Pls
2486 876 Pls
2498 958 Pls
2510 986 Pls
2522 885 Pls
2534 879 Pls
2547 876 Pls
2559 889 Pls
2571 874 Pls
2583 874 Pls
2595 913 Pls
2607 894 Pls
2619 881 Pls
2631 898 Pls
2643 922 Pls
2655 883 Pls
2667 878 Pls
2680 874 Pls
2692 870 Pls
2704 881 Pls
2716 883 Pls
2728 878 Pls
2740 893 Pls
2752 878 Pls
2764 898 Pls
2776 868 Pls
2788 868 Pls
2800 866 Pls
2812 866 Pls
2825 883 Pls
2837 881 Pls
2849 868 Pls
2861 876 Pls
2873 1082 Pls
2885 1175 Pls
2897 1079 Pls
2909 1134 Pls
2921 1251 Pls
2933 1090 Pls
2945 1000 Pls
2958 1099 Pls
2970 1168 Pls
2982 1153 Pls
2994 1119 Pls
3006 1088 Pls
3018 1227 Pls
3030 1175 Pls
3042 1147 Pls
3054 1175 Pls
3066 1231 Pls
3078 1158 Pls
3091 1196 Pls
3103 1119 Pls
3115 1201 Pls
3127 1175 Pls
3139 1194 Pls
3151 1255 Pls
3163 1147 Pls
3175 1198 Pls
3187 1144 Pls
3199 1186 Pls
3211 1227 Pls
3224 1246 Pls
3236 1203 Pls
3248 1757 Pls
3260 4231 Pls
3272 1233 Pls
3284 1157 Pls
3296 1391 Pls
3308 1140 Pls
3320 1274 Pls
3332 1205 Pls
3344 1220 Pls
3356 1244 Pls
3369 1181 Pls
3381 1162 Pls
3393 1105 Pls
3405 1248 Pls
3417 1155 Pls
3429 1612 Pls
3441 1144 Pls
3453 1789 Pls
3465 1153 Pls
3477 1155 Pls
3489 1138 Pls
3502 1181 Pls
3514 1114 Pls
3526 1164 Pls
3538 1796 Pls
3550 1233 Pls
3562 1214 Pls
3574 1112 Pls
3586 1225 Pls
3598 1084 Pls
3610 1075 Pls
3622 1097 Pls
3635 1225 Pls
3647 1192 Pls
3659 1138 Pls
3671 1205 Pls
3683 1201 Pls
3695 1058 Pls
3707 1185 Pls
3719 1155 Pls
3731 1194 Pls
3743 1103 Pls
3755 1140 Pls
3768 1733 Pls
3780 1090 Pls
3792 1233 Pls
3804 1183 Pls
3816 1147 Pls
3828 1242 Pls
3840 1229 Pls
3852 1780 Pls
3864 1194 Pls
3876 1090 Pls
3888 1183 Pls
3900 1179 Pls
3913 1333 Pls
3925 1333 Pls
3937 1281 Pls
3949 1170 Pls
3961 1285 Pls
3973 1657 Pls
3985 1238 Pls
3997 1320 Pls
4009 1188 Pls
4021 1166 Pls
4033 1160 Pls
4046 1251 Pls
4058 1292 Pls
4070 1132 Pls
4082 1153 Pls
4094 1231 Pls
4106 1186 Pls
4118 1151 Pls
4130 1237 Pls
4142 1287 Pls
4154 1121 Pls
4166 1287 Pls
4179 1101 Pls
4191 1151 Pls
4203 1225 Pls
4215 1778 Pls
4227 1274 Pls
4239 1123 Pls
4251 1129 Pls
4263 1205 Pls
4275 1374 Pls
4287 1190 Pls
4299 1266 Pls
4312 1075 Pls
4324 1198 Pls
4336 1157 Pls
4348 1173 Pls
4360 1175 Pls
4372 3030 Pls
4384 1114 Pls
4396 1170 Pls
4408 1185 Pls
4420 1237 Pls
4432 1145 Pls
4444 1737 Pls
4457 1233 Pls
4469 1172 Pls
4481 1186 Pls
4493 1138 Pls
4505 1815 Pls
4517 1160 Pls
4529 1192 Pls
4541 1151 Pls
4553 1250 Pls
4565 1214 Pls
4577 1209 Pls
4590 1225 Pls
4602 1025 Pls
4614 1212 Pls
4626 1157 Pls
4638 1164 Pls
4650 1179 Pls
4662 1218 Pls
4674 1136 Pls
4686 1251 Pls
4698 1212 Pls
4710 3009 Pls
4723 1227 Pls
4735 1158 Pls
4747 1296 Pls
4759 1350 Pls
4771 1160 Pls
4783 1166 Pls
4795 1185 Pls
4807 1175 Pls
4819 1110 Pls
4831 1125 Pls
4843 1179 Pls
4856 1188 Pls
4868 1253 Pls
4880 1224 Pls
4892 1272 Pls
4904 1086 Pls
4916 1149 Pls
4928 1201 Pls
4940 1211 Pls
4952 1196 Pls
4964 1237 Pls
4976 1093 Pls
4988 1125 Pls
5001 1105 Pls
5013 1237 Pls
5025 1231 Pls
5037 1224 Pls
5049 1065 Pls
5061 1255 Pls
5073 1237 Pls
5085 1358 Pls
5097 1285 Pls
5109 1097 Pls
5121 1194 Pls
5134 1101 Pls
5146 1090 Pls
5158 1344 Pls
5170 1118 Pls
5182 1259 Pls
5194 1118 Pls
5206 1889 Pls
5218 1265 Pls
5230 1198 Pls
5242 1179 Pls
5254 1318 Pls
5267 1175 Pls
5279 1198 Pls
5291 1231 Pls
5303 1283 Pls
5315 1127 Pls
5327 1274 Pls
5339 1121 Pls
5351 1185 Pls
5363 1214 Pls
5375 2208 Pls
5387 1272 Pls
5400 1166 Pls
5412 1065 Pls
5424 1205 Pls
5436 1220 Pls
5448 1077 Pls
5460 972 Pls
5472 898 Pls
5484 887 Pls
5496 894 Pls
5508 883 Pls
5520 879 Pls
5532 878 Pls
5545 879 Pls
5557 879 Pls
5569 879 Pls
5581 883 Pls
5593 893 Pls
5605 878 Pls
5617 891 Pls
5629 883 Pls
5641 889 Pls
5653 883 Pls
5665 881 Pls
5678 900 Pls
5690 879 Pls
5702 881 Pls
5714 887 Pls
5726 883 Pls
5738 885 Pls
5750 879 Pls
5762 885 Pls
5774 894 Pls
5786 885 Pls
5798 887 Pls
5811 881 Pls
5823 881 Pls
5835 881 Pls
5847 878 Pls
5859 906 Pls
5871 889 Pls
5883 891 Pls
5895 883 Pls
5907 881 Pls
5919 883 Pls
5931 891 Pls
5944 883 Pls
5956 907 Pls
5968 878 Pls
5980 904 Pls
5992 872 Pls
6004 870 Pls
6016 872 Pls
6028 887 Pls
6040 881 Pls
6052 896 Pls
6064 881 Pls
6076 874 Pls
6089 883 Pls
6101 876 Pls
6113 870 Pls
6125 870 Pls
6137 889 Pls
6149 868 Pls
6161 870 Pls
6173 881 Pls
6185 870 Pls
6197 868 Pls
6209 870 Pls
6222 889 Pls
6234 891 Pls
6246 874 Pls
6258 868 Pls
6270 866 Pls
6282 874 Pls
6294 868 Pls
6306 870 Pls
6318 896 Pls
6330 878 Pls
6342 874 Pls
6355 872 Pls
6367 874 Pls
6379 872 Pls
6391 876 Pls
6403 889 Pls
6415 870 Pls
6427 872 Pls
6439 881 Pls
6451 870 Pls
6463 868 Pls
6475 878 Pls
6488 876 Pls
6500 887 Pls
6512 872 Pls
6524 870 Pls
6536 889 Pls
6548 874 Pls
6560 868 Pls
6572 868 Pls
6584 902 Pls
1.000 UL
LTb
1386 4380 M
0 -3720 V
5440 0 V
0 3720 V
-5440 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
