%!PS-Adobe-2.0 EPSF-2.0
%%Title: ker23SemSched.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Thu Apr  3 23:49:22 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ker23SemSched.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr  3 23:49:22 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 594 M
63 0 V
5597 0 R
-63 0 V
1166 1640 M
63 0 V
5597 0 R
-63 0 V
1166 2685 M
63 0 V
5597 0 R
-63 0 V
1166 3731 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1170 1550 Pls
1174 1533 Pls
1180 1552 Pls
1186 1573 Pls
1191 1554 Pls
1196 1550 Pls
1201 1531 Pls
1207 1533 Pls
1212 1531 Pls
1217 1547 Pls
1223 1533 Pls
1227 1552 Pls
1233 1535 Pls
1239 1556 Pls
1243 1552 Pls
1249 1552 Pls
1254 1550 Pls
1259 1552 Pls
1265 1529 Pls
1270 1531 Pls
1275 1533 Pls
1280 1556 Pls
1286 1552 Pls
1291 1552 Pls
1296 1550 Pls
1302 1535 Pls
1307 1552 Pls
1312 1531 Pls
1318 1531 Pls
1323 1531 Pls
1328 1533 Pls
1333 1533 Pls
1339 1564 Pls
1344 1533 Pls
1349 1552 Pls
1355 1533 Pls
1359 1533 Pls
1365 1533 Pls
1371 1533 Pls
1375 1533 Pls
1381 1552 Pls
1386 1533 Pls
1391 1531 Pls
1397 1531 Pls
1402 1550 Pls
1407 1552 Pls
1412 1533 Pls
1418 1531 Pls
1424 1552 Pls
1428 1550 Pls
1434 1552 Pls
1439 1533 Pls
1444 1552 Pls
1450 1531 Pls
1455 1533 Pls
1460 1550 Pls
1465 1533 Pls
1471 1535 Pls
1476 1533 Pls
1481 1533 Pls
1487 1550 Pls
1491 1550 Pls
1497 1550 Pls
1503 1533 Pls
1507 1558 Pls
1513 1552 Pls
1518 1558 Pls
1524 1533 Pls
1529 1539 Pls
1534 1533 Pls
1540 1552 Pls
1544 1552 Pls
1550 1550 Pls
1556 1533 Pls
1560 1550 Pls
1566 1531 Pls
1571 1531 Pls
1576 1550 Pls
1582 1531 Pls
1587 1533 Pls
1592 1550 Pls
1597 1533 Pls
1603 1533 Pls
1608 1552 Pls
1613 1533 Pls
1619 1533 Pls
1624 1550 Pls
1629 1552 Pls
1635 1533 Pls
1640 1550 Pls
1645 1552 Pls
1650 1531 Pls
1656 1552 Pls
1661 1556 Pls
1666 1533 Pls
1672 1552 Pls
1676 1531 Pls
1682 1531 Pls
1688 1533 Pls
1692 1533 Pls
1698 1531 Pls
1703 1535 Pls
1708 1552 Pls
1714 1531 Pls
1719 1550 Pls
1724 1531 Pls
1729 1533 Pls
1735 1531 Pls
1740 1550 Pls
1745 1531 Pls
1751 1552 Pls
1756 1535 Pls
1761 1533 Pls
1767 1533 Pls
1772 1531 Pls
1777 1533 Pls
1782 1533 Pls
1788 1527 Pls
1793 1558 Pls
1798 1558 Pls
1804 1533 Pls
1808 1570 Pls
1814 1533 Pls
1820 1552 Pls
1824 1531 Pls
1830 1535 Pls
1835 1531 Pls
1840 1531 Pls
1846 1537 Pls
1851 1533 Pls
1857 1533 Pls
1861 1533 Pls
1867 1554 Pls
1873 1550 Pls
1877 1550 Pls
1883 1533 Pls
1888 1531 Pls
1893 1537 Pls
1899 1552 Pls
1904 1533 Pls
1909 1531 Pls
1914 1550 Pls
1920 1531 Pls
1925 1552 Pls
1930 1533 Pls
1936 1552 Pls
1940 1533 Pls
1946 1552 Pls
1952 1531 Pls
1957 1552 Pls
1962 1550 Pls
1967 1550 Pls
1973 1533 Pls
1978 1552 Pls
1983 1550 Pls
1989 1531 Pls
1993 1531 Pls
1999 1531 Pls
2005 1533 Pls
2009 1552 Pls
2015 1550 Pls
2020 1533 Pls
2025 1550 Pls
2031 1552 Pls
2036 1535 Pls
2041 1533 Pls
2046 1552 Pls
2052 1531 Pls
2057 1552 Pls
2062 1550 Pls
2068 1550 Pls
2073 1550 Pls
2078 1552 Pls
2084 1535 Pls
2089 1531 Pls
2094 1533 Pls
2099 1533 Pls
2105 1533 Pls
2110 1531 Pls
2115 1533 Pls
2121 1533 Pls
2125 1550 Pls
2131 1550 Pls
2137 1533 Pls
2141 1568 Pls
2147 1554 Pls
2152 1533 Pls
2157 1531 Pls
2163 1550 Pls
2168 1531 Pls
2173 1533 Pls
2178 1533 Pls
2184 1552 Pls
2190 1533 Pls
2194 1552 Pls
2200 1533 Pls
2205 1533 Pls
2210 1552 Pls
2216 1552 Pls
2221 1552 Pls
2226 1537 Pls
2231 1552 Pls
2237 1550 Pls
2242 1552 Pls
2247 1531 Pls
2253 1552 Pls
2257 1531 Pls
2263 1552 Pls
2269 1550 Pls
2273 1531 Pls
2279 1533 Pls
2284 1556 Pls
2290 1533 Pls
2295 1550 Pls
2300 1531 Pls
2306 1533 Pls
2310 1533 Pls
2316 1533 Pls
2322 1533 Pls
2326 1533 Pls
2332 1533 Pls
2337 1552 Pls
2342 1556 Pls
2348 1550 Pls
2353 1550 Pls
2358 1554 Pls
2363 1533 Pls
2369 1552 Pls
2374 1550 Pls
2379 1533 Pls
2385 1531 Pls
2390 1533 Pls
2395 1533 Pls
2401 1550 Pls
2406 1552 Pls
2411 1531 Pls
2416 1556 Pls
2422 1533 Pls
2427 1554 Pls
2432 1531 Pls
2438 1533 Pls
2442 1550 Pls
2448 1533 Pls
2454 1552 Pls
2458 1550 Pls
2464 1531 Pls
2469 1550 Pls
2474 1533 Pls
2480 1554 Pls
2485 1552 Pls
2490 1550 Pls
2495 1533 Pls
2501 1552 Pls
2506 1531 Pls
2511 1552 Pls
2517 1550 Pls
2522 1552 Pls
2527 1552 Pls
2533 1533 Pls
2538 1533 Pls
2543 1552 Pls
2548 1550 Pls
2554 1550 Pls
2559 1533 Pls
2564 1552 Pls
2570 1533 Pls
2574 1531 Pls
2580 1552 Pls
2586 1552 Pls
2590 1531 Pls
2596 1550 Pls
2601 1556 Pls
2606 1533 Pls
2612 1531 Pls
2617 1533 Pls
2623 1552 Pls
2627 1550 Pls
2633 1550 Pls
2639 1531 Pls
2643 1550 Pls
2649 1552 Pls
2654 1531 Pls
2659 1533 Pls
2665 1531 Pls
2670 1533 Pls
2675 1552 Pls
2680 1552 Pls
2686 1533 Pls
2691 1552 Pls
2696 1533 Pls
2702 1552 Pls
2706 1552 Pls
2712 1550 Pls
2718 1533 Pls
2723 1533 Pls
2728 1531 Pls
2733 1552 Pls
2739 1550 Pls
2744 1533 Pls
2749 1537 Pls
2755 1545 Pls
2759 1552 Pls
2765 1533 Pls
2771 1531 Pls
2775 1533 Pls
2781 1550 Pls
2786 1533 Pls
2791 1529 Pls
2797 1533 Pls
2802 1529 Pls
2807 1550 Pls
2812 1529 Pls
2818 1550 Pls
2823 1533 Pls
2828 1552 Pls
2834 1552 Pls
2839 1531 Pls
2844 1550 Pls
2850 1531 Pls
2855 1550 Pls
2860 1552 Pls
2865 1554 Pls
2871 1550 Pls
2876 1533 Pls
2881 1533 Pls
2887 1552 Pls
2891 1533 Pls
2897 1531 Pls
2903 1531 Pls
2907 1529 Pls
2913 1552 Pls
2918 1552 Pls
2923 1554 Pls
2929 1535 Pls
2934 1550 Pls
2939 1554 Pls
2944 1550 Pls
2950 1552 Pls
2956 1533 Pls
2960 1533 Pls
2966 1554 Pls
2971 1533 Pls
2976 1533 Pls
2982 1537 Pls
2987 1529 Pls
2992 1552 Pls
2997 1533 Pls
3003 1533 Pls
3008 1531 Pls
3013 1552 Pls
3019 1535 Pls
3023 1552 Pls
3029 1554 Pls
3035 1552 Pls
3039 1550 Pls
3045 1535 Pls
3050 1550 Pls
3055 1531 Pls
3061 1533 Pls
3066 1552 Pls
3072 1533 Pls
3076 1533 Pls
3082 1533 Pls
3088 1533 Pls
3092 1554 Pls
3098 1550 Pls
3103 1570 Pls
3108 1554 Pls
3114 1554 Pls
3119 1533 Pls
3124 1531 Pls
3129 1531 Pls
3135 1552 Pls
3140 1550 Pls
3145 1554 Pls
3151 1554 Pls
3155 1533 Pls
3161 1558 Pls
3167 1529 Pls
3172 1556 Pls
3177 1529 Pls
3182 1533 Pls
3188 1552 Pls
3193 1552 Pls
3198 1552 Pls
3204 1533 Pls
3208 1533 Pls
3214 1533 Pls
3220 1552 Pls
3224 1556 Pls
3230 1533 Pls
3235 1533 Pls
3240 1550 Pls
3246 1533 Pls
3251 1535 Pls
3256 1533 Pls
3261 1531 Pls
3267 1552 Pls
3272 1552 Pls
3277 1531 Pls
3283 1531 Pls
3288 1537 Pls
3293 1531 Pls
3299 1533 Pls
3304 1533 Pls
3309 1550 Pls
3314 1533 Pls
3320 1550 Pls
3325 1533 Pls
3330 1533 Pls
3336 1533 Pls
3340 1550 Pls
3346 1552 Pls
3352 1531 Pls
3356 1556 Pls
3362 1535 Pls
3367 1531 Pls
3372 1533 Pls
3378 1533 Pls
3383 1550 Pls
3388 1552 Pls
3393 1552 Pls
3399 1550 Pls
3405 1531 Pls
3409 1533 Pls
3415 1535 Pls
3420 1533 Pls
3425 1533 Pls
3431 1531 Pls
3436 1552 Pls
3441 1531 Pls
3446 1552 Pls
3452 1531 Pls
3457 1550 Pls
3462 1550 Pls
3468 1531 Pls
3472 1550 Pls
3478 1552 Pls
3484 1552 Pls
3488 1535 Pls
3494 1533 Pls
3499 1531 Pls
3505 1533 Pls
3510 1533 Pls
3515 1552 Pls
3521 1552 Pls
3525 1552 Pls
3531 1533 Pls
3537 1552 Pls
3541 1533 Pls
3547 1552 Pls
3552 1533 Pls
3557 1533 Pls
3563 1531 Pls
3568 1550 Pls
3573 1552 Pls
3578 1531 Pls
3584 1543 Pls
3589 1558 Pls
3594 1529 Pls
3600 1550 Pls
3605 1531 Pls
3610 1550 Pls
3616 1533 Pls
3621 1537 Pls
3626 1554 Pls
3631 1552 Pls
3637 1533 Pls
3642 1550 Pls
3647 1529 Pls
3653 1552 Pls
3657 1533 Pls
3663 1531 Pls
3669 1554 Pls
3673 1554 Pls
3679 1535 Pls
3684 1531 Pls
3689 1537 Pls
3695 1556 Pls
3700 1535 Pls
3705 1550 Pls
3710 1533 Pls
3716 1554 Pls
3721 1550 Pls
3726 1533 Pls
3732 1533 Pls
3737 1556 Pls
3742 1550 Pls
3748 1556 Pls
3753 1533 Pls
3758 1531 Pls
3763 1550 Pls
3769 1554 Pls
3774 1552 Pls
3779 1550 Pls
3785 1533 Pls
3789 1531 Pls
3795 1554 Pls
3801 1550 Pls
3805 1552 Pls
3811 1550 Pls
3816 1552 Pls
3821 1533 Pls
3827 1533 Pls
3832 1529 Pls
3838 1547 Pls
3842 1531 Pls
3848 1533 Pls
3854 1535 Pls
3858 1550 Pls
3864 1533 Pls
3869 1558 Pls
3874 1533 Pls
3880 1550 Pls
3885 1531 Pls
3890 1550 Pls
3895 1533 Pls
3901 1531 Pls
3906 1535 Pls
3911 1554 Pls
3917 1531 Pls
3921 1537 Pls
3927 1550 Pls
3933 1552 Pls
3938 1531 Pls
3943 1522 Pls
3948 1554 Pls
3954 1531 Pls
3959 1533 Pls
3964 1552 Pls
3970 1533 Pls
3974 3523 Pls
3980 3521 Pls
3986 2587 Pls
3990 1537 Pls
3996 1587 Pls
4001 1552 Pls
4006 1552 Pls
4012 1550 Pls
4017 1533 Pls
4022 1552 Pls
4027 1552 Pls
4033 1552 Pls
4038 1535 Pls
4043 1533 Pls
4049 1533 Pls
4054 1535 Pls
4059 1533 Pls
4065 1570 Pls
4070 1558 Pls
4075 1550 Pls
4080 1529 Pls
4086 1533 Pls
4091 1552 Pls
4096 1531 Pls
4102 1550 Pls
4106 1552 Pls
4112 1535 Pls
4118 1554 Pls
4122 1531 Pls
4128 1533 Pls
4133 1529 Pls
4138 1531 Pls
4144 1550 Pls
4149 1552 Pls
4154 1533 Pls
4159 1550 Pls
4165 1556 Pls
4171 1550 Pls
4175 1533 Pls
4181 1552 Pls
4186 1550 Pls
4191 1550 Pls
4197 1552 Pls
4202 1550 Pls
4207 1550 Pls
4212 1533 Pls
4218 1552 Pls
4223 1533 Pls
4228 1554 Pls
4234 1552 Pls
4238 1533 Pls
4244 1535 Pls
4250 1552 Pls
4254 1535 Pls
4260 1552 Pls
4265 1531 Pls
4271 1552 Pls
4276 1531 Pls
4281 1550 Pls
4287 1531 Pls
4291 1554 Pls
4297 1550 Pls
4303 1537 Pls
4307 1550 Pls
4313 1533 Pls
4318 1552 Pls
4323 1550 Pls
4329 1533 Pls
4334 1531 Pls
4339 1529 Pls
4344 1547 Pls
4350 1535 Pls
4355 1552 Pls
4360 1550 Pls
4366 1535 Pls
4371 1552 Pls
4376 1550 Pls
4382 1533 Pls
4387 1533 Pls
4392 1547 Pls
4397 1550 Pls
4403 1552 Pls
4408 1533 Pls
4413 1550 Pls
4419 1529 Pls
4423 1552 Pls
4429 1533 Pls
4435 1552 Pls
4439 1550 Pls
4445 1535 Pls
4450 1552 Pls
4455 1552 Pls
4461 1554 Pls
4466 1554 Pls
4471 1529 Pls
4476 1552 Pls
4482 1533 Pls
4487 1556 Pls
4492 1533 Pls
4498 1533 Pls
4503 1552 Pls
4508 1531 Pls
4514 1550 Pls
4519 1552 Pls
4524 1552 Pls
4529 1531 Pls
4535 1552 Pls
4540 1533 Pls
4545 1541 Pls
4551 1558 Pls
4555 1550 Pls
4561 1550 Pls
4567 1533 Pls
4571 1533 Pls
4577 1531 Pls
4582 1552 Pls
4587 1552 Pls
4593 1552 Pls
4598 1535 Pls
4604 1550 Pls
4608 1529 Pls
4614 1531 Pls
4620 1552 Pls
4624 1531 Pls
4630 1554 Pls
4635 1533 Pls
4640 1558 Pls
4646 1533 Pls
4651 1529 Pls
4656 1554 Pls
4661 1550 Pls
4667 1533 Pls
4672 1547 Pls
4677 1554 Pls
4683 1531 Pls
4687 1552 Pls
4693 1531 Pls
4699 1552 Pls
4704 1533 Pls
4709 1550 Pls
4714 1531 Pls
4720 1531 Pls
4725 1531 Pls
4730 1531 Pls
4736 1554 Pls
4740 1529 Pls
4746 1554 Pls
4752 1533 Pls
4756 1533 Pls
4762 1533 Pls
4767 1531 Pls
4772 1533 Pls
4778 1533 Pls
4783 1531 Pls
4788 1535 Pls
4793 1550 Pls
4799 1531 Pls
4804 1533 Pls
4809 1533 Pls
4815 1533 Pls
4820 1529 Pls
4825 1533 Pls
4831 1529 Pls
4836 1550 Pls
4841 1550 Pls
4846 1552 Pls
4852 1535 Pls
4857 1552 Pls
4862 1552 Pls
4868 1550 Pls
4872 1533 Pls
4878 1547 Pls
4884 1535 Pls
4888 1533 Pls
4894 1531 Pls
4899 1552 Pls
4904 1550 Pls
4910 1529 Pls
4915 1531 Pls
4920 1533 Pls
4925 1552 Pls
4931 1550 Pls
4937 1529 Pls
4941 1552 Pls
4947 1552 Pls
4952 1531 Pls
4957 1535 Pls
4963 1533 Pls
4968 1552 Pls
4973 1552 Pls
4978 1550 Pls
4984 1550 Pls
4989 1531 Pls
4994 1533 Pls
5000 1537 Pls
5004 1552 Pls
5010 1533 Pls
5016 1529 Pls
5020 1554 Pls
5026 1552 Pls
5031 1558 Pls
5036 1531 Pls
5042 1550 Pls
5047 1550 Pls
5053 1535 Pls
5057 1552 Pls
5063 1554 Pls
5069 1531 Pls
5073 1533 Pls
5079 1533 Pls
5084 1554 Pls
5089 1533 Pls
5095 1533 Pls
5100 1554 Pls
5105 1533 Pls
5110 1537 Pls
5116 1556 Pls
5121 1550 Pls
5126 1531 Pls
5132 1552 Pls
5136 1535 Pls
5142 1531 Pls
5148 1529 Pls
5153 1552 Pls
5158 1533 Pls
5163 1531 Pls
5169 1550 Pls
5174 1552 Pls
5179 1535 Pls
5185 1533 Pls
5189 1535 Pls
5195 1552 Pls
5201 1533 Pls
5205 1552 Pls
5211 1552 Pls
5216 1550 Pls
5221 1547 Pls
5227 1554 Pls
5232 1529 Pls
5237 1556 Pls
5242 1537 Pls
5248 1552 Pls
5253 1533 Pls
5258 1533 Pls
5264 1533 Pls
5269 1533 Pls
5274 1552 Pls
5280 1547 Pls
5285 1531 Pls
5290 1535 Pls
5295 1552 Pls
5301 1552 Pls
5306 1554 Pls
5311 1531 Pls
5317 1535 Pls
5321 1554 Pls
5327 1529 Pls
5333 1547 Pls
5337 1552 Pls
5343 1552 Pls
5348 1533 Pls
5353 1552 Pls
5359 1533 Pls
5364 1537 Pls
5369 1550 Pls
5374 1552 Pls
5380 1550 Pls
5386 1529 Pls
5390 1535 Pls
5396 1550 Pls
5401 1550 Pls
5406 1533 Pls
5412 1552 Pls
5417 1554 Pls
5422 1529 Pls
5427 1547 Pls
5433 1537 Pls
5438 1552 Pls
5443 1529 Pls
5449 1550 Pls
5453 1552 Pls
5459 1533 Pls
5465 1552 Pls
5469 1550 Pls
5475 1547 Pls
5480 1531 Pls
5486 1535 Pls
5491 1550 Pls
5496 1554 Pls
5502 1531 Pls
5506 1541 Pls
5512 1539 Pls
5518 1531 Pls
5522 1533 Pls
5528 1556 Pls
5533 1552 Pls
5538 1531 Pls
5544 1531 Pls
5549 1531 Pls
5554 1552 Pls
5559 1552 Pls
5565 1552 Pls
5570 1533 Pls
5575 1533 Pls
5581 1554 Pls
5586 1535 Pls
5591 1552 Pls
5597 1552 Pls
5602 1554 Pls
5607 1533 Pls
5612 1552 Pls
5618 1554 Pls
5623 1535 Pls
5628 1552 Pls
5634 1537 Pls
5638 1533 Pls
5644 1539 Pls
5650 1533 Pls
5654 1533 Pls
5660 1552 Pls
5665 1533 Pls
5670 1533 Pls
5676 1535 Pls
5681 1533 Pls
5686 1533 Pls
5691 1531 Pls
5697 1552 Pls
5702 1531 Pls
5707 1552 Pls
5713 1550 Pls
5718 1531 Pls
5723 1533 Pls
5729 1533 Pls
5734 1552 Pls
5739 1552 Pls
5744 1533 Pls
5750 1535 Pls
5755 1552 Pls
5760 1533 Pls
5766 1533 Pls
5770 1533 Pls
5776 1552 Pls
5782 1531 Pls
5786 1533 Pls
5792 1535 Pls
5797 1552 Pls
5802 1552 Pls
5808 1554 Pls
5813 1554 Pls
5819 1533 Pls
5823 1552 Pls
5829 1552 Pls
5835 1533 Pls
5839 1533 Pls
5845 1552 Pls
5850 1552 Pls
5855 1554 Pls
5861 1552 Pls
5866 1533 Pls
5871 1529 Pls
5876 1531 Pls
5882 1552 Pls
5887 1531 Pls
5892 1552 Pls
5898 1533 Pls
5902 1552 Pls
5908 1554 Pls
5914 1552 Pls
5919 1554 Pls
5924 1552 Pls
5929 1552 Pls
5935 1535 Pls
5940 1554 Pls
5945 1533 Pls
5951 1552 Pls
5955 1533 Pls
5961 1531 Pls
5967 1531 Pls
5971 1552 Pls
5977 1533 Pls
5982 1552 Pls
5987 1558 Pls
5993 1537 Pls
5998 1533 Pls
6003 1552 Pls
6008 1533 Pls
6014 1533 Pls
6019 1552 Pls
6024 1529 Pls
6031 1533 Pls
6035 1552 Pls
6041 1552 Pls
6046 1552 Pls
6052 1556 Pls
6057 1543 Pls
6062 1533 Pls
6068 1554 Pls
6072 1533 Pls
6078 1552 Pls
6084 1533 Pls
6088 1550 Pls
6094 1552 Pls
6099 1550 Pls
6104 1552 Pls
6110 1552 Pls
6115 1533 Pls
6120 1552 Pls
6125 1533 Pls
6131 1552 Pls
6136 1552 Pls
6141 1533 Pls
6147 1552 Pls
6152 1531 Pls
6157 1554 Pls
6163 1552 Pls
6168 1533 Pls
6173 1533 Pls
6178 1558 Pls
6184 1533 Pls
6189 1533 Pls
6194 1552 Pls
6200 1552 Pls
6204 1552 Pls
6210 1533 Pls
6216 1533 Pls
6220 1554 Pls
6226 1552 Pls
6231 1533 Pls
6236 1531 Pls
6242 1533 Pls
6247 1533 Pls
6252 1533 Pls
6257 1533 Pls
6263 1552 Pls
6268 1531 Pls
6273 1531 Pls
6279 1531 Pls
6284 1533 Pls
6289 1529 Pls
6295 1533 Pls
6300 1533 Pls
6305 1550 Pls
6310 1550 Pls
6316 1533 Pls
6321 1556 Pls
6326 1552 Pls
6332 1554 Pls
6336 1552 Pls
6342 1535 Pls
6348 1529 Pls
6352 1533 Pls
6358 1529 Pls
6363 1554 Pls
6368 1533 Pls
6374 1531 Pls
6379 1552 Pls
6385 1533 Pls
6389 1552 Pls
6395 1550 Pls
6401 1552 Pls
6405 1550 Pls
6411 1552 Pls
6416 1533 Pls
6421 1552 Pls
6427 1550 Pls
6432 1533 Pls
6437 1533 Pls
6442 1558 Pls
6448 1533 Pls
6453 1550 Pls
6458 1533 Pls
6464 1533 Pls
6468 1568 Pls
6474 1554 Pls
6480 1552 Pls
6485 1533 Pls
6490 1550 Pls
6495 1533 Pls
6501 1533 Pls
6506 1550 Pls
6511 1531 Pls
6517 1552 Pls
6521 1533 Pls
6527 1535 Pls
6533 1533 Pls
6537 1533 Pls
6543 1535 Pls
6548 1552 Pls
6553 1552 Pls
6559 1533 Pls
6564 1550 Pls
6569 1552 Pls
6574 1550 Pls
6580 1552 Pls
6585 1531 Pls
6590 1531 Pls
6596 1550 Pls
6601 1531 Pls
6606 1552 Pls
6612 1550 Pls
6617 1552 Pls
6622 1552 Pls
6627 1552 Pls
6633 1535 Pls
6638 1533 Pls
6643 1550 Pls
6649 1531 Pls
6653 1533 Pls
6659 1550 Pls
6665 1529 Pls
6669 1533 Pls
6675 1552 Pls
6680 1554 Pls
6685 1554 Pls
6691 1550 Pls
6696 1552 Pls
6701 1552 Pls
6706 1550 Pls
6712 1554 Pls
6718 1535 Pls
6722 1552 Pls
6728 1552 Pls
6733 1552 Pls
6738 1552 Pls
6744 1531 Pls
6749 1552 Pls
6754 1556 Pls
6759 1550 Pls
6765 1533 Pls
6770 1531 Pls
6775 1550 Pls
6781 1533 Pls
6785 1533 Pls
6791 1552 Pls
6797 1535 Pls
6801 1550 Pls
6807 1529 Pls
6812 1552 Pls
6818 1554 Pls
6823 1554 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
