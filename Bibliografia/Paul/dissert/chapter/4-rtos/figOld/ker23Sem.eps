%!PS-Adobe-2.0 EPSF-2.0
%%Title: ker23Sem.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Tue Jan 22 23:54:56 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ker23Sem.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan 22 23:54:56 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1386 660 M
63 0 V
5377 0 R
-63 0 V
1386 1346 M
63 0 V
5377 0 R
-63 0 V
1386 2032 M
63 0 V
5377 0 R
-63 0 V
1386 2718 M
63 0 V
5377 0 R
-63 0 V
1386 3404 M
63 0 V
5377 0 R
-63 0 V
1386 4090 M
63 0 V
5377 0 R
-63 0 V
1386 4776 M
63 0 V
5377 0 R
-63 0 V
1386 660 M
0 63 V
0 4053 R
0 -63 V
2293 660 M
0 63 V
0 4053 R
0 -63 V
3199 660 M
0 63 V
0 4053 R
0 -63 V
4106 660 M
0 63 V
0 4053 R
0 -63 V
5013 660 M
0 63 V
0 4053 R
0 -63 V
5919 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
-5440 63 R
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
1.000 UP
1386 1287 Pls
1391 1212 Pls
1396 1188 Pls
1401 1187 Pls
1406 1191 Pls
1411 1181 Pls
1417 1181 Pls
1421 1185 Pls
1427 1181 Pls
1431 1188 Pls
1437 1183 Pls
1442 1180 Pls
1447 1190 Pls
1452 1195 Pls
1457 1183 Pls
1462 1180 Pls
1468 1190 Pls
1472 1190 Pls
1478 1183 Pls
1482 1190 Pls
1488 1188 Pls
1493 1183 Pls
1498 1188 Pls
1503 1194 Pls
1507 1180 Pls
1513 1190 Pls
1518 1188 Pls
1523 1184 Pls
1528 1184 Pls
1533 1201 Pls
1538 1188 Pls
1544 1195 Pls
1548 1195 Pls
1554 1183 Pls
1558 1183 Pls
1564 1184 Pls
1569 1187 Pls
1574 1190 Pls
1579 1184 Pls
1584 1190 Pls
1589 1188 Pls
1595 1183 Pls
1599 1190 Pls
1605 1192 Pls
1609 1194 Pls
1614 1184 Pls
1620 1184 Pls
1624 1192 Pls
1630 1192 Pls
1634 1183 Pls
1640 1191 Pls
1645 1184 Pls
1650 1185 Pls
1655 1184 Pls
1660 1183 Pls
1665 1190 Pls
1671 1188 Pls
1675 1181 Pls
1681 1181 Pls
1685 1184 Pls
1691 1185 Pls
1696 1183 Pls
1701 1190 Pls
1706 1192 Pls
1711 1190 Pls
1716 1201 Pls
1721 1187 Pls
1726 1190 Pls
1731 1180 Pls
1736 1195 Pls
1741 1194 Pls
1747 1188 Pls
1751 1190 Pls
1757 1190 Pls
1761 1194 Pls
1767 1181 Pls
1772 1183 Pls
1777 1179 Pls
1782 1194 Pls
1787 1180 Pls
1792 1190 Pls
1798 1179 Pls
1802 1184 Pls
1808 1190 Pls
1812 1196 Pls
1818 1191 Pls
1823 1183 Pls
1828 1188 Pls
1833 1184 Pls
1838 1190 Pls
1843 1188 Pls
1848 1183 Pls
1853 1181 Pls
1858 1184 Pls
1863 1194 Pls
1868 1195 Pls
1874 1184 Pls
1878 1188 Pls
1884 1185 Pls
1888 1181 Pls
1894 1201 Pls
1899 1180 Pls
1904 1190 Pls
1909 1188 Pls
1914 1216 Pls
1919 1184 Pls
1925 1188 Pls
1929 1190 Pls
1935 1190 Pls
1939 1185 Pls
1945 1184 Pls
1950 1184 Pls
1954 1179 Pls
1960 1187 Pls
1964 1185 Pls
1970 1194 Pls
1975 1195 Pls
1980 1188 Pls
1985 1190 Pls
1990 1179 Pls
1995 1190 Pls
2001 1184 Pls
2005 1181 Pls
2011 1185 Pls
2015 1194 Pls
2021 1184 Pls
2026 1190 Pls
2031 1184 Pls
2036 1188 Pls
2041 1184 Pls
2046 1194 Pls
2051 1185 Pls
2056 1185 Pls
2061 1191 Pls
2066 1190 Pls
2071 1195 Pls
2077 1206 Pls
2081 1203 Pls
2087 1198 Pls
2091 1203 Pls
2097 1185 Pls
2102 1181 Pls
2107 1192 Pls
2112 1191 Pls
2117 1187 Pls
2122 1194 Pls
2128 1185 Pls
2132 1190 Pls
2138 1180 Pls
2142 1188 Pls
2148 1196 Pls
2153 1185 Pls
2158 1185 Pls
2163 1180 Pls
2168 1191 Pls
2173 1181 Pls
2178 1185 Pls
2183 1194 Pls
2188 1191 Pls
2193 1187 Pls
2198 1181 Pls
2204 1190 Pls
2208 1181 Pls
2214 1191 Pls
2218 1191 Pls
2224 1191 Pls
2229 1185 Pls
2234 1191 Pls
2239 1191 Pls
2244 1194 Pls
2249 1185 Pls
2255 1180 Pls
2259 1210 Pls
2265 1187 Pls
2269 1190 Pls
2275 1190 Pls
2280 1190 Pls
2285 1180 Pls
2290 1194 Pls
2294 1188 Pls
2300 1192 Pls
2305 1190 Pls
2310 1199 Pls
2315 1202 Pls
2320 1184 Pls
2325 1190 Pls
2331 1185 Pls
2335 1184 Pls
2341 1188 Pls
2345 1185 Pls
2351 1194 Pls
2356 1180 Pls
2361 1181 Pls
2366 1194 Pls
2371 1194 Pls
2376 1190 Pls
2382 1185 Pls
2386 1190 Pls
2391 1185 Pls
2396 1198 Pls
2401 1185 Pls
2407 1191 Pls
2411 1188 Pls
2417 1185 Pls
2421 1198 Pls
2427 1180 Pls
2432 1188 Pls
2437 1207 Pls
2442 1205 Pls
2447 1185 Pls
2452 1180 Pls
2458 1199 Pls
2462 1194 Pls
2468 1209 Pls
2472 1187 Pls
2478 1191 Pls
2483 1194 Pls
2488 1185 Pls
2493 1185 Pls
2498 1191 Pls
2503 1187 Pls
2508 1185 Pls
2513 1196 Pls
2518 1187 Pls
2523 1191 Pls
2528 1188 Pls
2534 1185 Pls
2538 1185 Pls
2544 1180 Pls
2548 1188 Pls
2554 1192 Pls
2559 1195 Pls
2564 1180 Pls
2569 1184 Pls
2574 1184 Pls
2579 1185 Pls
2585 1192 Pls
2589 1181 Pls
2595 1183 Pls
2599 1192 Pls
2605 1191 Pls
2610 1183 Pls
2615 1185 Pls
2620 1187 Pls
2625 1181 Pls
2630 1180 Pls
2635 1183 Pls
2640 1191 Pls
2645 1185 Pls
2650 1195 Pls
2655 1183 Pls
2661 1185 Pls
2665 1179 Pls
2671 1179 Pls
2675 1190 Pls
2681 1203 Pls
2686 1183 Pls
2691 1184 Pls
2696 1203 Pls
2701 1177 Pls
2706 1191 Pls
2712 1198 Pls
2716 1188 Pls
2722 1199 Pls
2726 1191 Pls
2731 1195 Pls
2737 1195 Pls
2741 1196 Pls
2747 1179 Pls
2751 1180 Pls
2757 1190 Pls
2762 1188 Pls
2767 1187 Pls
2772 1199 Pls
2777 1198 Pls
2782 1184 Pls
2788 1188 Pls
2792 1179 Pls
2798 1188 Pls
2802 1198 Pls
2808 1188 Pls
2813 1180 Pls
2818 1185 Pls
2823 1183 Pls
2828 1187 Pls
2833 1187 Pls
2838 1179 Pls
2843 1187 Pls
2848 1188 Pls
2853 1188 Pls
2858 1179 Pls
2864 1191 Pls
2868 1188 Pls
2874 1188 Pls
2878 1188 Pls
2884 1195 Pls
2889 1183 Pls
2894 1179 Pls
2899 1191 Pls
2904 1191 Pls
2909 1184 Pls
2915 1185 Pls
2919 1179 Pls
2925 1181 Pls
2929 1179 Pls
2935 1188 Pls
2940 1188 Pls
2945 1179 Pls
2950 1183 Pls
2955 1184 Pls
2960 1187 Pls
2965 1183 Pls
2970 1183 Pls
2975 1192 Pls
2980 1192 Pls
2985 1196 Pls
2991 1185 Pls
2995 1183 Pls
3001 1187 Pls
3005 1183 Pls
3011 1185 Pls
3016 1188 Pls
3021 1188 Pls
3026 1188 Pls
3031 1179 Pls
3036 1185 Pls
3042 1183 Pls
3046 1187 Pls
3052 1179 Pls
3056 1184 Pls
3062 1180 Pls
3067 1188 Pls
3071 1184 Pls
3077 1180 Pls
3081 1190 Pls
3087 1183 Pls
3092 1191 Pls
3097 1190 Pls
3102 1179 Pls
3107 1179 Pls
3112 1183 Pls
3118 1190 Pls
3122 1192 Pls
3128 1184 Pls
3132 1183 Pls
3138 1180 Pls
3143 1187 Pls
3148 1179 Pls
3153 1179 Pls
3158 1187 Pls
3163 1207 Pls
3169 1183 Pls
3173 1190 Pls
3178 1191 Pls
3183 1183 Pls
3188 1188 Pls
3194 1184 Pls
3198 1185 Pls
3204 1188 Pls
3208 1185 Pls
3214 1190 Pls
3219 1191 Pls
3224 1184 Pls
3229 1188 Pls
3234 1212 Pls
3239 1199 Pls
3245 1183 Pls
3249 1185 Pls
3255 1188 Pls
3259 1179 Pls
3265 1185 Pls
3270 1179 Pls
3275 1188 Pls
3280 1183 Pls
3285 1190 Pls
3290 1183 Pls
3295 1179 Pls
3300 1187 Pls
3305 1188 Pls
3310 1191 Pls
3315 1185 Pls
3321 1192 Pls
3325 1181 Pls
3331 1185 Pls
3335 1179 Pls
3341 1179 Pls
3346 1207 Pls
3351 1179 Pls
3356 1183 Pls
3361 1191 Pls
3366 1183 Pls
3372 1192 Pls
3376 1190 Pls
3382 1183 Pls
3386 1188 Pls
3392 1183 Pls
3397 1190 Pls
3402 1180 Pls
3407 1190 Pls
3411 1190 Pls
3417 1190 Pls
3422 1184 Pls
3427 1190 Pls
3432 1190 Pls
3437 1179 Pls
3442 1194 Pls
3448 1179 Pls
3452 1187 Pls
3458 1188 Pls
3462 1184 Pls
3468 1205 Pls
3473 1192 Pls
3478 1194 Pls
3483 1196 Pls
3488 1190 Pls
3493 1181 Pls
3499 1183 Pls
3503 1188 Pls
3509 1195 Pls
3513 1190 Pls
3518 1191 Pls
3524 1190 Pls
3528 1191 Pls
3534 1191 Pls
3538 1180 Pls
3544 1185 Pls
3549 1191 Pls
3554 1181 Pls
3559 1185 Pls
3564 1187 Pls
3569 1183 Pls
3575 1184 Pls
3579 1185 Pls
3585 1179 Pls
3589 1188 Pls
3595 1179 Pls
3600 1192 Pls
3605 1179 Pls
3610 1188 Pls
3615 1187 Pls
3620 1188 Pls
3625 1185 Pls
3630 1179 Pls
3635 1183 Pls
3640 1195 Pls
3645 1185 Pls
3651 1183 Pls
3655 1195 Pls
3661 1179 Pls
3665 1195 Pls
3671 1188 Pls
3676 1179 Pls
3681 1179 Pls
3686 1183 Pls
3691 1191 Pls
3696 1203 Pls
3702 1195 Pls
3706 1203 Pls
3712 1188 Pls
3716 1185 Pls
3722 1184 Pls
3727 1191 Pls
3732 1185 Pls
3737 1179 Pls
3742 1191 Pls
3747 1190 Pls
3752 1188 Pls
3757 1184 Pls
3762 1179 Pls
3767 1179 Pls
3772 1188 Pls
3778 1190 Pls
3782 1191 Pls
3788 1183 Pls
3792 1188 Pls
3798 1185 Pls
3803 1183 Pls
3808 1185 Pls
3813 1183 Pls
3818 1187 Pls
3823 1184 Pls
3829 1184 Pls
3833 1191 Pls
3839 1188 Pls
3843 1190 Pls
3849 1183 Pls
3854 1188 Pls
3858 1185 Pls
3864 1179 Pls
3868 1195 Pls
3874 1192 Pls
3879 1184 Pls
3884 1194 Pls
3889 1194 Pls
3894 1185 Pls
3899 1195 Pls
3905 1188 Pls
3909 1187 Pls
3915 1185 Pls
3919 1190 Pls
3925 1187 Pls
3930 1205 Pls
3935 1201 Pls
3940 1205 Pls
3945 1210 Pls
3950 1179 Pls
3955 1188 Pls
3960 1181 Pls
3965 1184 Pls
3970 1183 Pls
3972 1179 Pls
3975 1184 Pls
3981 1179 Pls
3985 1179 Pls
3991 1190 Pls
3995 1188 Pls
4001 1188 Pls
4006 1179 Pls
4011 1183 Pls
4016 1187 Pls
4021 1179 Pls
4026 1188 Pls
4032 1179 Pls
4036 1179 Pls
4042 1185 Pls
4046 1191 Pls
4052 1184 Pls
4057 1190 Pls
4062 1188 Pls
4067 1188 Pls
4072 1201 Pls
4077 1180 Pls
4082 1179 Pls
4087 1185 Pls
4092 1188 Pls
4097 1183 Pls
4102 1183 Pls
4108 1183 Pls
4112 1179 Pls
4118 1188 Pls
4122 1185 Pls
4128 1185 Pls
4133 1188 Pls
4138 1188 Pls
4143 1191 Pls
4148 1187 Pls
4153 1188 Pls
4159 1213 Pls
4163 1205 Pls
4169 1192 Pls
4173 1181 Pls
4179 1185 Pls
4184 1194 Pls
4189 1179 Pls
4194 1179 Pls
4198 1179 Pls
4204 1188 Pls
4209 1185 Pls
4214 1179 Pls
4219 1183 Pls
4224 1188 Pls
4229 1184 Pls
4235 1179 Pls
4239 1179 Pls
4245 1188 Pls
4249 1183 Pls
4255 1194 Pls
4260 1183 Pls
4265 1188 Pls
4270 1185 Pls
4275 1188 Pls
4280 1188 Pls
4286 1185 Pls
4290 1195 Pls
4295 1190 Pls
4300 1185 Pls
4305 1179 Pls
4311 1183 Pls
4315 1179 Pls
4321 1179 Pls
4325 1188 Pls
4331 1185 Pls
4336 1190 Pls
4341 1179 Pls
4346 1183 Pls
4351 1188 Pls
4356 1188 Pls
4362 1188 Pls
4366 1183 Pls
4372 1183 Pls
4376 1188 Pls
4382 1187 Pls
4387 1179 Pls
4392 1188 Pls
4397 1183 Pls
4402 1185 Pls
4407 1190 Pls
4412 1195 Pls
4417 1188 Pls
4422 1195 Pls
4427 1188 Pls
4432 1207 Pls
4438 1188 Pls
4442 1179 Pls
4448 1183 Pls
4452 1183 Pls
4458 1194 Pls
4463 1184 Pls
4468 1179 Pls
4473 1183 Pls
4478 1179 Pls
4483 1188 Pls
4489 1188 Pls
4493 1198 Pls
4499 1179 Pls
4503 1194 Pls
4509 1188 Pls
4514 1185 Pls
4519 1179 Pls
4524 1183 Pls
4529 1180 Pls
4534 1199 Pls
4539 1195 Pls
4544 1183 Pls
4549 1187 Pls
4554 1181 Pls
4559 1195 Pls
4565 1181 Pls
4569 1185 Pls
4575 1183 Pls
4579 1195 Pls
4585 1185 Pls
4590 1191 Pls
4595 1192 Pls
4600 1187 Pls
4605 1183 Pls
4610 1188 Pls
4616 1288 Pls
4620 1202 Pls
4626 1188 Pls
4630 1191 Pls
4635 1183 Pls
4641 1190 Pls
4645 1203 Pls
4651 1188 Pls
4655 1188 Pls
4661 1183 Pls
4666 1191 Pls
4671 1191 Pls
4676 1196 Pls
4681 1187 Pls
4686 1201 Pls
4692 1190 Pls
4696 1179 Pls
4702 1183 Pls
4706 1188 Pls
4712 1191 Pls
4717 1183 Pls
4722 1190 Pls
4727 1183 Pls
4732 1184 Pls
4737 1199 Pls
4742 1179 Pls
4747 1190 Pls
4752 1183 Pls
4757 1184 Pls
4762 1183 Pls
4768 1183 Pls
4772 1183 Pls
4778 1185 Pls
4782 1195 Pls
4788 1183 Pls
4793 1191 Pls
4798 1207 Pls
4803 1203 Pls
4808 1185 Pls
4813 1206 Pls
4819 1183 Pls
4823 1180 Pls
4829 1195 Pls
4833 1183 Pls
4839 1185 Pls
4844 1183 Pls
4849 1190 Pls
4854 1191 Pls
4859 1187 Pls
4864 1195 Pls
4869 1188 Pls
4874 1187 Pls
4879 1190 Pls
4884 1183 Pls
4889 1190 Pls
4895 1195 Pls
4899 1187 Pls
4905 1185 Pls
4909 1179 Pls
4915 1195 Pls
4920 1187 Pls
4925 1187 Pls
4930 1180 Pls
4935 1188 Pls
4940 1179 Pls
4946 1179 Pls
4950 1191 Pls
4956 1183 Pls
4960 1195 Pls
4966 1185 Pls
4971 1188 Pls
4975 1199 Pls
4981 1188 Pls
4985 1188 Pls
4991 1188 Pls
4996 1188 Pls
5001 1179 Pls
5006 1188 Pls
5011 1188 Pls
5016 1181 Pls
5022 1183 Pls
5026 1179 Pls
5032 1188 Pls
5036 1179 Pls
5042 1188 Pls
5047 1188 Pls
5052 1181 Pls
5057 1179 Pls
5062 1179 Pls
5067 1179 Pls
5073 1185 Pls
5077 1213 Pls
5082 1199 Pls
5087 1195 Pls
5092 1185 Pls
5098 1184 Pls
5102 1188 Pls
5108 1190 Pls
5112 1183 Pls
5118 1183 Pls
5123 1185 Pls
5128 1187 Pls
5133 1188 Pls
5138 1181 Pls
5143 1183 Pls
5149 1187 Pls
5153 1185 Pls
5159 1196 Pls
5163 1195 Pls
5169 1195 Pls
5174 1185 Pls
5179 1179 Pls
5184 1187 Pls
5189 1192 Pls
5194 1191 Pls
5199 1179 Pls
5204 1183 Pls
5209 1179 Pls
5214 1179 Pls
5219 1194 Pls
5225 1188 Pls
5229 1212 Pls
5235 1183 Pls
5239 1190 Pls
5245 1195 Pls
5250 1190 Pls
5255 1179 Pls
5260 1190 Pls
5265 1183 Pls
5270 1185 Pls
5276 1187 Pls
5280 1179 Pls
5286 1188 Pls
5290 1179 Pls
5296 1179 Pls
5301 1185 Pls
5306 1179 Pls
5311 1183 Pls
5315 1185 Pls
5321 1184 Pls
5326 1192 Pls
5331 1183 Pls
5336 1185 Pls
5341 1206 Pls
5346 1183 Pls
5352 1179 Pls
5356 1190 Pls
5362 1183 Pls
5366 1195 Pls
5372 1187 Pls
5377 1179 Pls
5382 1183 Pls
5387 1185 Pls
5392 1188 Pls
5397 1179 Pls
5403 1188 Pls
5407 1188 Pls
5413 1194 Pls
5417 1190 Pls
5422 1195 Pls
5428 1183 Pls
5432 1187 Pls
5438 1233 Pls
5442 1203 Pls
5448 1198 Pls
5453 1179 Pls
5458 1179 Pls
5463 1184 Pls
5468 1188 Pls
5473 1183 Pls
5479 1183 Pls
5483 1188 Pls
5489 1188 Pls
5493 1188 Pls
5499 1179 Pls
5504 1183 Pls
5509 1181 Pls
5514 1191 Pls
5519 1195 Pls
5524 1203 Pls
5529 1179 Pls
5534 1179 Pls
5539 1202 Pls
5544 1207 Pls
5549 1183 Pls
5555 1183 Pls
5559 1191 Pls
5565 1185 Pls
5569 1185 Pls
5575 1181 Pls
5580 1183 Pls
5585 1183 Pls
5590 1187 Pls
5595 1192 Pls
5600 1181 Pls
5606 1195 Pls
5610 1201 Pls
5616 1185 Pls
5620 1185 Pls
5626 1185 Pls
5631 1185 Pls
5636 1183 Pls
5641 1185 Pls
5646 1191 Pls
5651 1195 Pls
5656 1187 Pls
5661 1195 Pls
5666 1184 Pls
5671 1183 Pls
5676 1183 Pls
5682 1187 Pls
5686 1180 Pls
5692 1185 Pls
5696 1188 Pls
5702 1202 Pls
5707 1191 Pls
5712 1190 Pls
5717 1179 Pls
5722 1190 Pls
5727 1188 Pls
5733 1191 Pls
5737 1179 Pls
5743 1191 Pls
5747 1194 Pls
5753 1183 Pls
5758 1190 Pls
5762 1183 Pls
5768 1187 Pls
5772 1181 Pls
5778 1187 Pls
5783 1183 Pls
5788 1183 Pls
5793 1187 Pls
5798 1183 Pls
5803 1188 Pls
5809 1183 Pls
5813 1195 Pls
5819 1183 Pls
5823 1187 Pls
5829 1183 Pls
5834 1192 Pls
5839 1185 Pls
5844 1195 Pls
5849 1192 Pls
5854 1195 Pls
5859 1195 Pls
5864 1190 Pls
5869 1183 Pls
5874 1187 Pls
5879 1188 Pls
5885 1194 Pls
5889 1201 Pls
5895 1194 Pls
5899 1179 Pls
5905 1183 Pls
5910 1185 Pls
5915 1187 Pls
5920 1187 Pls
5925 1195 Pls
5930 1187 Pls
5936 1183 Pls
5940 1185 Pls
5946 1184 Pls
5950 1180 Pls
5956 1188 Pls
5961 1195 Pls
5966 1210 Pls
5971 1185 Pls
5976 1188 Pls
5981 1179 Pls
5986 1188 Pls
5991 1180 Pls
5996 1207 Pls
6001 1195 Pls
6006 1203 Pls
6012 1185 Pls
6016 1190 Pls
6022 1195 Pls
6026 1187 Pls
6032 1183 Pls
6037 1187 Pls
6042 1188 Pls
6047 1181 Pls
6053 1184 Pls
6057 1191 Pls
6063 1187 Pls
6067 1213 Pls
6073 1187 Pls
6078 1185 Pls
6083 1187 Pls
6088 1183 Pls
6093 1191 Pls
6098 1195 Pls
6103 1183 Pls
6108 1188 Pls
6113 1183 Pls
6118 1187 Pls
6123 1183 Pls
6129 1185 Pls
6133 1185 Pls
6139 1190 Pls
6143 1183 Pls
6149 1187 Pls
6154 1203 Pls
6159 1195 Pls
6164 1191 Pls
6169 1187 Pls
6174 1185 Pls
6180 1187 Pls
6184 1192 Pls
6190 1187 Pls
6194 1190 Pls
6199 1184 Pls
6205 1184 Pls
6209 1188 Pls
6215 1185 Pls
6219 1195 Pls
6225 1184 Pls
6230 1196 Pls
6235 1194 Pls
6240 1207 Pls
6245 1212 Pls
6250 1190 Pls
6256 1188 Pls
6260 1188 Pls
6266 1183 Pls
6270 1188 Pls
6276 1179 Pls
6281 1179 Pls
6286 1179 Pls
6291 1183 Pls
6296 1179 Pls
6301 1185 Pls
6306 1179 Pls
6311 1188 Pls
6316 1184 Pls
6321 1181 Pls
6326 1188 Pls
6332 1187 Pls
6336 1184 Pls
6342 1180 Pls
6346 1206 Pls
6352 1191 Pls
6357 1188 Pls
6362 1179 Pls
6367 1188 Pls
6372 1187 Pls
6377 1179 Pls
6383 1184 Pls
6387 1188 Pls
6393 1179 Pls
6397 1188 Pls
6403 1185 Pls
6408 1194 Pls
6413 1188 Pls
6418 1183 Pls
6423 1188 Pls
6428 1194 Pls
6433 1188 Pls
6438 1179 Pls
6443 1183 Pls
6448 1188 Pls
6453 1190 Pls
6459 1203 Pls
6463 1194 Pls
6469 1194 Pls
6473 1181 Pls
6479 1185 Pls
6484 1179 Pls
6489 1187 Pls
6494 1191 Pls
6499 1185 Pls
6504 1181 Pls
6510 1190 Pls
6514 1183 Pls
6520 1179 Pls
6524 1185 Pls
6530 2120 Pls
6535 1183 Pls
6539 1187 Pls
6545 1183 Pls
6549 1194 Pls
6555 1183 Pls
6560 1187 Pls
6565 1192 Pls
6570 1183 Pls
6575 1184 Pls
6580 1183 Pls
6586 1187 Pls
6590 1180 Pls
6596 1180 Pls
6600 1188 Pls
6606 1185 Pls
6611 1198 Pls
6616 1191 Pls
6621 1187 Pls
6626 1190 Pls
6631 1187 Pls
6637 1195 Pls
6641 1195 Pls
6646 1185 Pls
6651 1187 Pls
6656 1184 Pls
6662 1183 Pls
6666 1183 Pls
6672 1185 Pls
6676 1185 Pls
6682 1187 Pls
6687 1195 Pls
6692 1190 Pls
6697 1185 Pls
6702 1210 Pls
6707 1185 Pls
6713 1190 Pls
6717 1191 Pls
6723 1185 Pls
6727 1184 Pls
6733 1188 Pls
6738 1185 Pls
6743 1179 Pls
6748 1184 Pls
6753 1194 Pls
6758 1183 Pls
6763 1188 Pls
6768 1183 Pls
6773 1187 Pls
6778 1183 Pls
6783 1188 Pls
6789 1205 Pls
6793 1185 Pls
6799 1191 Pls
6803 1187 Pls
6809 1183 Pls
6814 1181 Pls
6819 1180 Pls
6824 1179 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1386 4776 M
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
