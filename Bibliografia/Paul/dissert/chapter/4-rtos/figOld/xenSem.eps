%!PS-Adobe-2.0 EPSF-2.0
%%Title: xenSem.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Tue Jan 22 23:54:58 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (xenSem.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan 22 23:54:58 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1386 660 M
63 0 V
5377 0 R
-63 0 V
1386 1346 M
63 0 V
5377 0 R
-63 0 V
1386 2032 M
63 0 V
5377 0 R
-63 0 V
1386 2718 M
63 0 V
5377 0 R
-63 0 V
1386 3404 M
63 0 V
5377 0 R
-63 0 V
1386 4090 M
63 0 V
5377 0 R
-63 0 V
1386 4776 M
63 0 V
5377 0 R
-63 0 V
1386 660 M
0 63 V
0 4053 R
0 -63 V
2293 660 M
0 63 V
0 4053 R
0 -63 V
3199 660 M
0 63 V
0 4053 R
0 -63 V
4106 660 M
0 63 V
0 4053 R
0 -63 V
5013 660 M
0 63 V
0 4053 R
0 -63 V
5919 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
-5440 63 R
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
1.000 UP
1391 1199 Pls
1396 1201 Pls
1401 1205 Pls
1406 1191 Pls
1411 1201 Pls
1417 1191 Pls
1421 1198 Pls
1427 1194 Pls
1431 1194 Pls
1437 1206 Pls
1442 1191 Pls
1447 1194 Pls
1452 1221 Pls
1457 1196 Pls
1462 1191 Pls
1468 1198 Pls
1472 1191 Pls
1478 1190 Pls
1482 1201 Pls
1488 1191 Pls
1493 1196 Pls
1498 1203 Pls
1503 1199 Pls
1507 1190 Pls
1513 1192 Pls
1518 1199 Pls
1523 1202 Pls
1528 1196 Pls
1533 1203 Pls
1538 1203 Pls
1544 1210 Pls
1548 1202 Pls
1554 1199 Pls
1558 1190 Pls
1564 1207 Pls
1569 1202 Pls
1574 1195 Pls
1579 1191 Pls
1584 1199 Pls
1589 1206 Pls
1595 1207 Pls
1599 1192 Pls
1605 1195 Pls
1609 1205 Pls
1614 1202 Pls
1620 1203 Pls
1624 1202 Pls
1630 1195 Pls
1635 1253 Pls
1386 1206 Pls
1391 1190 Pls
1396 1198 Pls
1401 1192 Pls
1406 1191 Pls
1411 1201 Pls
1417 1191 Pls
1421 1228 Pls
1427 1199 Pls
1431 1205 Pls
1437 1206 Pls
1442 1191 Pls
1447 1205 Pls
1452 1205 Pls
1457 1195 Pls
1462 1196 Pls
1468 1192 Pls
1472 1199 Pls
1478 1190 Pls
1482 1206 Pls
1488 1201 Pls
1493 1198 Pls
1498 1191 Pls
1503 1206 Pls
1507 1202 Pls
1513 1194 Pls
1518 1203 Pls
1523 1190 Pls
1528 1212 Pls
1533 1201 Pls
1538 1202 Pls
1544 1196 Pls
1548 1212 Pls
1554 1206 Pls
1558 1192 Pls
1564 1206 Pls
1569 1196 Pls
1574 1187 Pls
1579 1198 Pls
1584 1196 Pls
1589 1206 Pls
1595 1202 Pls
1599 1198 Pls
1605 1191 Pls
1609 1190 Pls
1614 1195 Pls
1620 1206 Pls
1624 1198 Pls
1630 1202 Pls
1635 1210 Pls
1640 1201 Pls
1645 1206 Pls
1650 1191 Pls
1655 1206 Pls
1660 1195 Pls
1665 1190 Pls
1671 1205 Pls
1675 1194 Pls
1681 1203 Pls
1685 1203 Pls
1691 1191 Pls
1696 1201 Pls
1701 1199 Pls
1706 1201 Pls
1711 1191 Pls
1716 1194 Pls
1721 1203 Pls
1726 1199 Pls
1731 1195 Pls
1736 1199 Pls
1741 1198 Pls
1747 1206 Pls
1751 1199 Pls
1757 1199 Pls
1761 1191 Pls
1767 1201 Pls
1772 1199 Pls
1777 1199 Pls
1782 1202 Pls
1787 1198 Pls
1792 1233 Pls
1798 1199 Pls
1802 1201 Pls
1808 1198 Pls
1812 1203 Pls
1818 1210 Pls
1823 1198 Pls
1828 1210 Pls
1833 1203 Pls
1838 1207 Pls
1843 1205 Pls
1848 1198 Pls
1853 1202 Pls
1858 1201 Pls
1863 1198 Pls
1868 1203 Pls
1874 1192 Pls
1878 1207 Pls
1884 1190 Pls
1889 1195 Pls
1894 1205 Pls
1899 1191 Pls
1904 1201 Pls
1909 1194 Pls
1914 1191 Pls
1919 1202 Pls
1925 1240 Pls
1929 1196 Pls
1935 1195 Pls
1939 1199 Pls
1945 1209 Pls
1950 1191 Pls
1954 1194 Pls
1960 1213 Pls
1964 1202 Pls
1970 1207 Pls
1975 1207 Pls
1980 1201 Pls
1985 1205 Pls
1990 1190 Pls
1995 1199 Pls
2001 1201 Pls
2005 1191 Pls
2011 1199 Pls
2015 1194 Pls
2021 1192 Pls
2026 1202 Pls
2031 1205 Pls
2036 1202 Pls
2041 1191 Pls
2046 1216 Pls
2051 1194 Pls
2056 1195 Pls
2061 1202 Pls
2066 1192 Pls
2071 1209 Pls
2077 1202 Pls
2081 1202 Pls
2087 1206 Pls
2091 1202 Pls
2097 1206 Pls
2102 1194 Pls
2107 1198 Pls
2112 1207 Pls
2117 1203 Pls
2122 1201 Pls
2128 1198 Pls
2132 1205 Pls
2138 1207 Pls
2143 1203 Pls
2148 1212 Pls
2153 1191 Pls
2158 1201 Pls
2163 1235 Pls
2168 1205 Pls
2173 1199 Pls
2178 1198 Pls
2183 1195 Pls
2188 1207 Pls
2193 1201 Pls
2198 1210 Pls
2204 1205 Pls
2208 1199 Pls
2214 1202 Pls
2218 1195 Pls
2224 1201 Pls
2229 1205 Pls
2234 1199 Pls
2239 1198 Pls
2244 1207 Pls
2249 1205 Pls
2255 1195 Pls
2259 1195 Pls
2265 1203 Pls
2269 1202 Pls
2275 1210 Pls
2280 1190 Pls
2285 1212 Pls
2290 1199 Pls
2294 1203 Pls
2300 1203 Pls
2305 1205 Pls
2310 1192 Pls
2315 1199 Pls
2320 1195 Pls
2325 1202 Pls
2331 1194 Pls
2335 1199 Pls
2341 1199 Pls
2345 1207 Pls
2351 1206 Pls
2356 1199 Pls
2361 1196 Pls
2366 1203 Pls
2371 1202 Pls
2376 1202 Pls
2382 1207 Pls
2386 1199 Pls
2391 1201 Pls
2397 1201 Pls
2401 1203 Pls
2407 1203 Pls
2411 1198 Pls
2417 1202 Pls
2421 1205 Pls
2427 1194 Pls
2432 1199 Pls
2437 1198 Pls
2442 1190 Pls
2447 1203 Pls
2452 1207 Pls
2458 1191 Pls
2462 1190 Pls
2468 1210 Pls
2472 1206 Pls
2478 1191 Pls
2483 1201 Pls
2488 1191 Pls
2493 1207 Pls
2498 1202 Pls
2503 1202 Pls
2508 1209 Pls
2513 1192 Pls
2518 1206 Pls
2523 1195 Pls
2528 1195 Pls
2534 1214 Pls
2538 1205 Pls
2544 1194 Pls
2548 1205 Pls
2554 1195 Pls
2559 1191 Pls
2564 1194 Pls
2569 1202 Pls
2574 1192 Pls
2579 1202 Pls
2585 1201 Pls
2589 1205 Pls
2595 1206 Pls
2599 1195 Pls
2605 1192 Pls
2610 1202 Pls
2615 1201 Pls
2620 1195 Pls
2625 1205 Pls
2630 1201 Pls
2635 1198 Pls
2640 1206 Pls
2645 1191 Pls
2651 1202 Pls
2655 1223 Pls
2661 1202 Pls
2665 1199 Pls
2671 1207 Pls
2675 1191 Pls
2681 1207 Pls
2686 1202 Pls
2691 1192 Pls
2696 1195 Pls
2701 1217 Pls
2706 1201 Pls
2712 1201 Pls
2716 1206 Pls
2722 1198 Pls
2726 1202 Pls
2731 1190 Pls
2737 1199 Pls
2741 1198 Pls
2747 1194 Pls
2751 1206 Pls
2757 1188 Pls
2762 1206 Pls
2767 1194 Pls
2772 1194 Pls
2777 1194 Pls
2782 1205 Pls
2788 1188 Pls
2792 1199 Pls
2798 1192 Pls
2802 1201 Pls
2808 1188 Pls
2813 1202 Pls
2818 1206 Pls
2823 1198 Pls
2828 1199 Pls
2833 1209 Pls
2838 1202 Pls
2843 1190 Pls
2848 1191 Pls
2853 1202 Pls
2858 1203 Pls
2864 1192 Pls
2868 1202 Pls
2874 1196 Pls
2878 1194 Pls
2884 1203 Pls
2889 1194 Pls
2894 1194 Pls
2899 1198 Pls
2905 1210 Pls
2909 1201 Pls
2915 1199 Pls
2919 1192 Pls
2925 1192 Pls
2929 1205 Pls
2935 1203 Pls
2940 1201 Pls
2945 1194 Pls
2950 1191 Pls
2955 1203 Pls
2960 1220 Pls
2965 1192 Pls
2970 1194 Pls
2975 1198 Pls
2980 1202 Pls
2985 1191 Pls
2991 1199 Pls
2995 1203 Pls
3001 1196 Pls
3005 1205 Pls
3011 1203 Pls
3016 1206 Pls
3021 1195 Pls
3026 1198 Pls
3031 1190 Pls
3036 1194 Pls
3042 1202 Pls
3046 1194 Pls
3052 1206 Pls
3056 1192 Pls
3062 1199 Pls
3067 1191 Pls
3071 1195 Pls
3077 1199 Pls
3081 1192 Pls
3087 1210 Pls
3092 1198 Pls
3097 1209 Pls
3102 1196 Pls
3107 1195 Pls
3112 1202 Pls
3118 1202 Pls
3122 1198 Pls
3128 1195 Pls
3132 1188 Pls
3138 1206 Pls
3143 1201 Pls
3148 1196 Pls
3153 1190 Pls
3159 1194 Pls
3163 1199 Pls
3169 1196 Pls
3173 1192 Pls
3178 1195 Pls
3183 1205 Pls
3188 1206 Pls
3194 1196 Pls
3198 1207 Pls
3204 1190 Pls
3208 1203 Pls
3214 1202 Pls
3219 1191 Pls
3224 1198 Pls
3229 1201 Pls
3234 1192 Pls
3239 1199 Pls
3245 1188 Pls
3249 1191 Pls
3255 1191 Pls
3259 1198 Pls
3265 1196 Pls
3270 1206 Pls
3275 1210 Pls
3280 1195 Pls
3285 1206 Pls
3290 1203 Pls
3295 1199 Pls
3300 1205 Pls
3305 1207 Pls
3310 1191 Pls
3315 1194 Pls
3321 1206 Pls
3325 1191 Pls
3331 1205 Pls
3335 1192 Pls
3341 1202 Pls
3346 1192 Pls
3351 1201 Pls
3356 1205 Pls
3361 1203 Pls
3366 1201 Pls
3372 1201 Pls
3376 1202 Pls
3382 1194 Pls
3386 1191 Pls
3392 1191 Pls
3397 1207 Pls
3402 1203 Pls
3407 1202 Pls
3412 1207 Pls
3417 1224 Pls
3422 1188 Pls
3427 1202 Pls
3432 1203 Pls
3437 1188 Pls
3442 1196 Pls
3448 1202 Pls
3452 1206 Pls
3458 1198 Pls
3462 1192 Pls
3468 1194 Pls
3473 1205 Pls
3478 1207 Pls
3483 1191 Pls
3488 1198 Pls
3493 1203 Pls
3499 1190 Pls
3503 1205 Pls
3509 1202 Pls
3513 1194 Pls
3518 1191 Pls
3524 1196 Pls
3528 1194 Pls
3534 1203 Pls
3538 1199 Pls
3544 1194 Pls
3549 1203 Pls
3554 1207 Pls
3559 1195 Pls
3564 1213 Pls
3569 1191 Pls
3575 1206 Pls
3579 1203 Pls
3585 1190 Pls
3589 1191 Pls
3595 1202 Pls
3600 1195 Pls
3605 1203 Pls
3610 1225 Pls
3615 1195 Pls
3620 1191 Pls
3625 1205 Pls
3630 1198 Pls
3635 1206 Pls
3640 1202 Pls
3645 1217 Pls
3651 1207 Pls
3655 1190 Pls
3661 1195 Pls
3666 1202 Pls
3671 1205 Pls
3676 1190 Pls
3681 1198 Pls
3686 1203 Pls
3691 1191 Pls
3696 1205 Pls
3702 1191 Pls
3706 1194 Pls
3712 1203 Pls
3716 1201 Pls
3722 1203 Pls
3727 1196 Pls
3732 1202 Pls
3737 1212 Pls
3742 1198 Pls
3747 1192 Pls
3752 1206 Pls
3757 1201 Pls
3762 1209 Pls
3767 1206 Pls
3772 1192 Pls
3778 1194 Pls
3782 1196 Pls
3788 1194 Pls
3792 1203 Pls
3798 1198 Pls
3803 1207 Pls
3808 1205 Pls
3813 1196 Pls
3818 1192 Pls
3823 1202 Pls
3829 1191 Pls
3833 1207 Pls
3839 1199 Pls
3843 1201 Pls
3849 1198 Pls
3854 1191 Pls
3858 1201 Pls
3865 1201 Pls
3869 1195 Pls
3875 1202 Pls
3879 1191 Pls
3885 1191 Pls
3890 1205 Pls
3895 1203 Pls
3900 1195 Pls
3905 1194 Pls
3910 1199 Pls
3916 1190 Pls
3921 1203 Pls
3926 1202 Pls
3930 1207 Pls
3936 1206 Pls
3941 1209 Pls
3946 1191 Pls
3951 1191 Pls
3955 1192 Pls
3961 1194 Pls
3966 1191 Pls
3971 1206 Pls
3976 1198 Pls
3981 1192 Pls
3986 1191 Pls
3992 1199 Pls
3996 1195 Pls
4002 1190 Pls
4006 1191 Pls
4012 1202 Pls
4017 1236 Pls
4022 1198 Pls
4027 1202 Pls
4032 1195 Pls
4037 1202 Pls
4043 1201 Pls
4047 1191 Pls
4053 1201 Pls
4057 1202 Pls
4062 1191 Pls
4068 1202 Pls
4072 1195 Pls
4078 1194 Pls
4082 1198 Pls
4088 1206 Pls
4093 1190 Pls
4098 1205 Pls
4103 1194 Pls
4108 1190 Pls
4113 1205 Pls
4119 1205 Pls
4123 1194 Pls
4129 1195 Pls
4133 1205 Pls
4139 1195 Pls
4144 1206 Pls
4149 1191 Pls
4154 1194 Pls
4159 1207 Pls
4164 1191 Pls
4169 1205 Pls
4175 1216 Pls
4179 1206 Pls
4184 1192 Pls
4189 1203 Pls
4195 1202 Pls
4199 1206 Pls
4205 1198 Pls
4209 1192 Pls
4215 1194 Pls
4216 1195 Pls
4220 1202 Pls
4225 1192 Pls
4230 1212 Pls
4235 1201 Pls
4240 1192 Pls
4246 1191 Pls
4250 1202 Pls
4256 1199 Pls
4260 1191 Pls
4266 1196 Pls
4271 1194 Pls
4276 1195 Pls
4281 1202 Pls
4286 1195 Pls
4291 1205 Pls
4296 1205 Pls
4301 1188 Pls
4306 1203 Pls
4311 1191 Pls
4316 1201 Pls
4322 1195 Pls
4326 1194 Pls
4332 1201 Pls
4336 1191 Pls
4342 1203 Pls
4347 1191 Pls
4352 1206 Pls
4357 1201 Pls
4362 1192 Pls
4367 1191 Pls
4373 1191 Pls
4377 1199 Pls
4383 1199 Pls
4387 1201 Pls
4393 1206 Pls
4398 1201 Pls
4402 1190 Pls
4408 1191 Pls
4412 1194 Pls
4418 1201 Pls
4423 1212 Pls
4428 1195 Pls
4433 1198 Pls
4438 1201 Pls
4443 1202 Pls
4449 1198 Pls
4453 1206 Pls
4459 1191 Pls
4463 1198 Pls
4469 1194 Pls
4474 1198 Pls
4479 1199 Pls
4484 1203 Pls
4489 1192 Pls
4494 1194 Pls
4499 1191 Pls
4504 1206 Pls
4509 1192 Pls
4514 1191 Pls
4519 1205 Pls
4525 1192 Pls
4529 1194 Pls
4535 1209 Pls
4539 1213 Pls
4545 1191 Pls
4550 1203 Pls
4555 1190 Pls
4560 1206 Pls
4565 1198 Pls
4570 1205 Pls
4576 1205 Pls
4580 1194 Pls
4586 1195 Pls
4590 1196 Pls
4596 1202 Pls
4601 1205 Pls
4606 1199 Pls
4611 1202 Pls
4616 1201 Pls
4621 1190 Pls
4626 1190 Pls
4631 1207 Pls
4636 1202 Pls
4641 1191 Pls
4646 1199 Pls
4652 1192 Pls
4656 1195 Pls
4662 1191 Pls
4666 1194 Pls
4672 1192 Pls
4677 1207 Pls
4682 1194 Pls
4687 1199 Pls
4692 1192 Pls
4697 1199 Pls
4703 1203 Pls
4707 1191 Pls
4713 1195 Pls
4717 1210 Pls
4723 1198 Pls
4728 1199 Pls
4733 1199 Pls
4738 1194 Pls
4742 1192 Pls
4748 1188 Pls
4753 1213 Pls
4758 1236 Pls
4763 1205 Pls
4768 1205 Pls
4773 1203 Pls
4779 1205 Pls
4783 1192 Pls
4789 1209 Pls
4793 1207 Pls
4799 1198 Pls
4804 1195 Pls
4809 1202 Pls
4814 1203 Pls
4819 1201 Pls
4824 1209 Pls
4830 1192 Pls
4834 1202 Pls
4839 1205 Pls
4844 1202 Pls
4849 1207 Pls
4855 1199 Pls
4859 1202 Pls
4865 1195 Pls
4869 1192 Pls
4875 1201 Pls
4880 1201 Pls
4885 1202 Pls
4890 1192 Pls
4895 1202 Pls
4900 1214 Pls
4906 1192 Pls
4910 1201 Pls
4916 1192 Pls
4920 1207 Pls
4926 1202 Pls
4931 1212 Pls
4936 1203 Pls
4941 1207 Pls
4946 1199 Pls
4951 1205 Pls
4956 1203 Pls
4961 1196 Pls
4966 1205 Pls
4971 1205 Pls
4976 1203 Pls
4982 1196 Pls
4986 1188 Pls
4992 1195 Pls
4996 1192 Pls
5002 1192 Pls
5007 1216 Pls
5012 1209 Pls
5017 1195 Pls
5022 1202 Pls
5027 1192 Pls
5033 1192 Pls
5037 1192 Pls
5043 1188 Pls
5047 1194 Pls
5053 1190 Pls
5058 1195 Pls
5063 1196 Pls
5068 1207 Pls
5073 1191 Pls
5078 1205 Pls
5083 1205 Pls
5088 1202 Pls
5093 1199 Pls
5098 1191 Pls
5103 1195 Pls
5109 1203 Pls
5113 1201 Pls
5119 1202 Pls
5123 1196 Pls
5129 1213 Pls
5134 1190 Pls
5139 1205 Pls
5144 1199 Pls
5149 1191 Pls
5154 1205 Pls
5160 1199 Pls
5164 1201 Pls
5170 1206 Pls
5174 1203 Pls
5179 1192 Pls
5185 1213 Pls
5189 1199 Pls
5195 1194 Pls
5199 1203 Pls
5205 1198 Pls
5210 1195 Pls
5215 1192 Pls
5220 1201 Pls
5225 1201 Pls
5230 1198 Pls
5236 1195 Pls
5240 1192 Pls
5246 1202 Pls
5250 1192 Pls
5256 1202 Pls
5261 1205 Pls
5266 1209 Pls
5271 1199 Pls
5276 1192 Pls
5281 1198 Pls
5286 1191 Pls
5291 1198 Pls
5296 1188 Pls
5301 1201 Pls
5306 1199 Pls
5312 1198 Pls
5316 1190 Pls
5322 1206 Pls
5326 1199 Pls
5332 1201 Pls
5337 1194 Pls
5342 1199 Pls
5347 1190 Pls
5352 1195 Pls
5357 1190 Pls
5363 1212 Pls
5367 1196 Pls
5373 1194 Pls
5377 1194 Pls
5383 1192 Pls
5388 1194 Pls
5393 1203 Pls
5398 1195 Pls
5403 1199 Pls
5408 1205 Pls
5413 1199 Pls
5418 1199 Pls
5423 1199 Pls
5428 1192 Pls
5433 1201 Pls
5439 1198 Pls
5443 1225 Pls
5449 1192 Pls
5453 1195 Pls
5459 1192 Pls
5464 1194 Pls
5469 1201 Pls
5474 1190 Pls
5479 1196 Pls
5484 1194 Pls
5490 1203 Pls
5494 1195 Pls
5500 1243 Pls
5504 1192 Pls
5510 1188 Pls
5515 1190 Pls
5519 1203 Pls
5525 1199 Pls
5529 1190 Pls
5535 1202 Pls
5540 1195 Pls
5545 1190 Pls
5550 1205 Pls
5555 1198 Pls
5560 1194 Pls
5566 1191 Pls
5570 1201 Pls
5576 1213 Pls
5580 1201 Pls
5586 1199 Pls
5591 1191 Pls
5596 1199 Pls
5601 1207 Pls
5606 1199 Pls
5611 1191 Pls
5617 1192 Pls
5621 1192 Pls
5626 1206 Pls
5631 1199 Pls
5636 1206 Pls
5642 1191 Pls
5646 1206 Pls
5652 1199 Pls
5656 1191 Pls
5662 1207 Pls
5667 1205 Pls
5672 1205 Pls
5677 1202 Pls
5682 1202 Pls
5687 1192 Pls
5693 1210 Pls
5697 1203 Pls
5703 1195 Pls
5707 1192 Pls
5713 1199 Pls
5718 1203 Pls
5723 1191 Pls
5728 1201 Pls
5733 1196 Pls
5738 1207 Pls
5743 1192 Pls
5748 1192 Pls
5753 1194 Pls
5758 1205 Pls
5763 1191 Pls
5769 1196 Pls
5773 1194 Pls
5779 1191 Pls
5783 1201 Pls
5789 1202 Pls
5794 1202 Pls
5799 1195 Pls
5804 1196 Pls
5809 1203 Pls
5814 1201 Pls
5820 1192 Pls
5824 1191 Pls
5830 1203 Pls
5834 1194 Pls
5840 1198 Pls
5845 1194 Pls
5850 1191 Pls
5855 1199 Pls
5859 1203 Pls
5865 1209 Pls
5870 1221 Pls
5875 1202 Pls
5880 1202 Pls
5885 1195 Pls
5890 1195 Pls
5896 1209 Pls
5900 1209 Pls
5906 1202 Pls
5910 1192 Pls
5916 1213 Pls
5921 1191 Pls
5926 1199 Pls
5931 1190 Pls
5936 1194 Pls
5941 1202 Pls
5947 1195 Pls
5951 1203 Pls
5957 1194 Pls
5961 1195 Pls
5966 1209 Pls
5972 1195 Pls
5976 1196 Pls
5982 1196 Pls
5986 1198 Pls
5992 1196 Pls
5997 1201 Pls
6002 1195 Pls
6007 1199 Pls
6012 1201 Pls
6017 1205 Pls
6023 1192 Pls
6027 1207 Pls
6033 1190 Pls
6037 1201 Pls
6043 1191 Pls
6048 1196 Pls
6053 1191 Pls
6058 1191 Pls
6063 1207 Pls
6068 1202 Pls
6073 1190 Pls
6078 1194 Pls
6083 1202 Pls
6088 1201 Pls
6093 1210 Pls
6099 1203 Pls
6103 1196 Pls
6109 1199 Pls
6113 1192 Pls
6119 1195 Pls
6124 1191 Pls
6129 1196 Pls
6134 1194 Pls
6139 1205 Pls
6144 1196 Pls
6150 1199 Pls
6154 1194 Pls
6160 1212 Pls
6164 1202 Pls
6170 1210 Pls
6175 1199 Pls
6180 1196 Pls
6185 1191 Pls
6190 1191 Pls
6195 1203 Pls
6200 1205 Pls
6205 1205 Pls
6210 1203 Pls
6215 1192 Pls
6220 1199 Pls
6226 1199 Pls
6230 1195 Pls
6236 1191 Pls
6240 1240 Pls
6246 1207 Pls
6251 1192 Pls
6256 1205 Pls
6261 1195 Pls
6266 1201 Pls
6271 1192 Pls
6277 1206 Pls
6281 1214 Pls
6287 1192 Pls
6291 1205 Pls
6297 1192 Pls
6302 1202 Pls
6306 1191 Pls
6312 1190 Pls
6316 1203 Pls
6322 1202 Pls
6327 1207 Pls
6332 1192 Pls
6337 1205 Pls
6342 1205 Pls
6347 1202 Pls
6353 1195 Pls
6357 1190 Pls
6363 1194 Pls
6367 1201 Pls
6373 1194 Pls
6378 1191 Pls
6383 1191 Pls
6388 1206 Pls
6393 1202 Pls
6398 1195 Pls
6403 1202 Pls
6408 1203 Pls
6413 1203 Pls
6419 1205 Pls
6423 1207 Pls
6429 1196 Pls
6433 1191 Pls
6439 1194 Pls
6443 1202 Pls
6449 1196 Pls
6454 1199 Pls
6459 1254 Pls
6464 1195 Pls
6469 1192 Pls
6474 1199 Pls
6480 1203 Pls
6484 1198 Pls
6490 1205 Pls
6494 1198 Pls
6500 1201 Pls
6505 1191 Pls
6510 1196 Pls
6515 1194 Pls
6520 1202 Pls
6525 1201 Pls
6530 1199 Pls
6535 1212 Pls
6540 1199 Pls
6546 1203 Pls
6550 1198 Pls
6556 1202 Pls
6560 1199 Pls
6566 1206 Pls
6571 1207 Pls
6576 1196 Pls
6581 1194 Pls
6586 1195 Pls
6591 1207 Pls
6597 1194 Pls
6601 1191 Pls
6607 1202 Pls
6611 1251 Pls
6617 1218 Pls
6622 1198 Pls
6627 1191 Pls
6632 1205 Pls
6637 1194 Pls
6642 1194 Pls
6647 1199 Pls
6652 1205 Pls
6657 1203 Pls
6662 1195 Pls
6667 1192 Pls
6673 1191 Pls
6677 1199 Pls
6683 1206 Pls
6687 1201 Pls
6693 1192 Pls
6698 1195 Pls
6703 1203 Pls
6708 1199 Pls
6713 1229 Pls
6718 1206 Pls
6724 1199 Pls
6728 1191 Pls
6734 1205 Pls
6738 1195 Pls
6743 1190 Pls
6749 1198 Pls
6753 1201 Pls
6759 1194 Pls
6763 1201 Pls
6769 1194 Pls
6774 1202 Pls
6779 1194 Pls
6784 1190 Pls
6789 1199 Pls
6793 1201 Pls
6798 1190 Pls
6803 1190 Pls
6808 1203 Pls
6812 1203 Pls
6817 1191 Pls
6821 1195 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1386 4776 M
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
