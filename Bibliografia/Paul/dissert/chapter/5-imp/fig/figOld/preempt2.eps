%!PS-Adobe-2.0 EPSF-2.0
%%Title: preempt2.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Sun Dec 30 21:39:26 2007
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (preempt2.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Dec 30 21:39:26 2007)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1386 660 M
63 0 V
5377 0 R
-63 0 V
1386 1175 M
63 0 V
5377 0 R
-63 0 V
1386 1689 M
63 0 V
5377 0 R
-63 0 V
1386 2204 M
63 0 V
5377 0 R
-63 0 V
1386 2718 M
63 0 V
5377 0 R
-63 0 V
1386 3233 M
63 0 V
5377 0 R
-63 0 V
1386 3747 M
63 0 V
5377 0 R
-63 0 V
1386 4262 M
63 0 V
5377 0 R
-63 0 V
1386 4776 M
63 0 V
5377 0 R
-63 0 V
1386 660 M
0 63 V
0 4053 R
0 -63 V
2163 660 M
0 63 V
0 4053 R
0 -63 V
2940 660 M
0 63 V
0 4053 R
0 -63 V
3717 660 M
0 63 V
0 4053 R
0 -63 V
4495 660 M
0 63 V
0 4053 R
0 -63 V
5272 660 M
0 63 V
0 4053 R
0 -63 V
6049 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
-5440 63 R
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
1.000 UP
1395 1180 Pls
1399 1211 Pls
1403 1180 Pls
1408 1195 Pls
1412 1175 Pls
1416 1175 Pls
1421 1169 Pls
1425 1180 Pls
1430 1169 Pls
1433 1190 Pls
1438 1195 Pls
1443 1190 Pls
1447 1190 Pls
1451 1190 Pls
1455 1185 Pls
1460 1195 Pls
1464 1185 Pls
1468 1190 Pls
1473 1200 Pls
1477 1175 Pls
1482 1185 Pls
1486 1185 Pls
1490 1277 Pls
1495 1195 Pls
1499 1175 Pls
1503 1180 Pls
1508 1185 Pls
1512 1175 Pls
1517 1190 Pls
1520 1180 Pls
1525 1175 Pls
1530 1205 Pls
1534 1180 Pls
1538 1185 Pls
1542 1175 Pls
1547 1175 Pls
1552 1169 Pls
1555 1211 Pls
1560 1185 Pls
1564 1180 Pls
1569 1185 Pls
1573 1164 Pls
1577 1180 Pls
1582 1169 Pls
1586 1205 Pls
1590 1185 Pls
1595 1190 Pls
1599 1149 Pls
1604 1211 Pls
1607 1195 Pls
1612 1169 Pls
1617 1211 Pls
1621 1200 Pls
1625 1185 Pls
1629 1205 Pls
1634 1185 Pls
1639 1180 Pls
1642 1185 Pls
1647 1211 Pls
1651 1169 Pls
1656 1190 Pls
1660 1175 Pls
1664 1195 Pls
1669 1185 Pls
1673 1195 Pls
1677 1216 Pls
1682 1180 Pls
1686 1185 Pls
1691 1190 Pls
1695 1190 Pls
1699 1175 Pls
1704 1185 Pls
1708 1334 Pls
1712 1190 Pls
1716 1195 Pls
1721 1180 Pls
1726 1185 Pls
1729 1185 Pls
1734 1180 Pls
1739 1190 Pls
1743 1205 Pls
1747 1185 Pls
1751 1195 Pls
1756 1169 Pls
1761 1190 Pls
1764 1180 Pls
1769 1190 Pls
1775 1272 Pls
1779 1211 Pls
1784 1205 Pls
1789 1211 Pls
1792 1180 Pls
1797 1175 Pls
1801 1257 Pls
1806 1169 Pls
1810 1185 Pls
1814 1169 Pls
1819 1185 Pls
1823 1190 Pls
1827 1190 Pls
1832 1175 Pls
1836 1180 Pls
1841 1175 Pls
1845 1169 Pls
1849 1169 Pls
1854 1175 Pls
1858 1175 Pls
1862 1180 Pls
1866 1175 Pls
1871 1190 Pls
1876 1180 Pls
1879 1190 Pls
1884 1185 Pls
1888 1195 Pls
1893 1185 Pls
1897 1180 Pls
1901 1190 Pls
1906 1216 Pls
1910 1138 Pls
1914 1175 Pls
1919 1195 Pls
1923 1190 Pls
1928 1185 Pls
1932 1190 Pls
1936 1195 Pls
1941 1190 Pls
1945 1175 Pls
1949 1175 Pls
1953 1175 Pls
1958 1195 Pls
1963 1180 Pls
1967 1180 Pls
1971 1180 Pls
1975 1180 Pls
1980 1195 Pls
1984 1185 Pls
1988 1180 Pls
1993 1175 Pls
1997 1175 Pls
2001 1169 Pls
2006 1175 Pls
2010 1190 Pls
2015 1180 Pls
2019 1211 Pls
2023 1319 Pls
2028 1175 Pls
2032 1180 Pls
2036 1190 Pls
2040 1190 Pls
2045 1180 Pls
2050 1169 Pls
2054 1195 Pls
2058 1169 Pls
2062 1195 Pls
2067 1195 Pls
2071 1169 Pls
2075 1185 Pls
2080 1169 Pls
2084 1175 Pls
2089 1175 Pls
2093 1175 Pls
2097 1169 Pls
2102 1169 Pls
2106 1195 Pls
2110 1180 Pls
2115 1185 Pls
2119 1169 Pls
2124 1190 Pls
2127 1169 Pls
2132 1180 Pls
2137 1195 Pls
2141 1169 Pls
2145 1175 Pls
2149 1185 Pls
2154 1524 Pls
2162 1555 Pls
2167 1416 Pls
2171 1447 Pls
2180 1704 Pls
2184 1535 Pls
2189 1452 Pls
2193 1493 Pls
2197 1591 Pls
2207 1535 Pls
2211 1375 Pls
2216 1524 Pls
2221 1499 Pls
2225 1391 Pls
2229 1622 Pls
2233 1478 Pls
2238 1411 Pls
2246 1463 Pls
2251 1540 Pls
2255 1385 Pls
2260 1519 Pls
2264 1576 Pls
2269 1566 Pls
2273 1452 Pls
2278 1504 Pls
2288 1550 Pls
2292 1447 Pls
2297 1632 Pls
2301 1504 Pls
2305 1385 Pls
2310 1499 Pls
2315 1504 Pls
2319 1566 Pls
2323 1483 Pls
2328 1452 Pls
2333 1530 Pls
2336 1463 Pls
2341 1890 Pls
2345 1550 Pls
2350 1427 Pls
2354 1421 Pls
2359 1493 Pls
2368 1478 Pls
2372 1406 Pls
2377 1360 Pls
2381 1488 Pls
2385 1421 Pls
2390 3160 Pls
2394 1504 Pls
2399 1632 Pls
2403 1535 Pls
2407 1499 Pls
2412 1478 Pls
2416 1396 Pls
2420 1643 Pls
2424 1499 Pls
2434 1535 Pls
2439 1421 Pls
2443 2857 Pls
2448 1581 Pls
2452 1504 Pls
2456 1262 Pls
2461 1530 Pls
2465 1411 Pls
2469 2785 Pls
2474 1478 Pls
2478 1499 Pls
2483 1535 Pls
2486 1504 Pls
2491 1380 Pls
2496 1493 Pls
2500 1391 Pls
2504 1540 Pls
2514 1519 Pls
2519 1643 Pls
2524 1473 Pls
2528 1524 Pls
2532 1411 Pls
2536 2970 Pls
2541 1555 Pls
2545 1421 Pls
2549 1473 Pls
2554 1560 Pls
2558 1391 Pls
2563 1468 Pls
2567 1504 Pls
2571 1514 Pls
2576 1797 Pls
2580 1617 Pls
2584 1566 Pls
2595 1468 Pls
2600 1457 Pls
2605 2764 Pls
2608 1463 Pls
2613 1370 Pls
2617 1586 Pls
2622 1488 Pls
2626 1411 Pls
2630 1560 Pls
2635 1478 Pls
2639 1483 Pls
2643 1504 Pls
2648 1921 Pls
2652 1550 Pls
2657 1432 Pls
2661 1555 Pls
2665 1514 Pls
2675 1483 Pls
2679 1560 Pls
2684 2497 Pls
2688 1504 Pls
2692 1535 Pls
2696 1488 Pls
2701 1514 Pls
2706 1375 Pls
2709 1437 Pls
2714 1488 Pls
2718 1550 Pls
2723 1540 Pls
2727 2198 Pls
2731 1519 Pls
2736 1668 Pls
2740 1478 Pls
2744 1493 Pls
2755 1555 Pls
2758 1447 Pls
2763 2816 Pls
2768 1504 Pls
2772 1576 Pls
2776 1493 Pls
2780 1576 Pls
2785 1437 Pls
2790 1514 Pls
2793 1504 Pls
2798 1514 Pls
2802 1442 Pls
2807 1432 Pls
2811 1519 Pls
2815 2121 Pls
2820 1530 Pls
2824 1596 Pls
2834 1530 Pls
2838 1401 Pls
2842 1344 Pls
2847 1540 Pls
2851 1514 Pls
2856 1627 Pls
2859 1514 Pls
2864 1391 Pls
2869 1406 Pls
2873 1499 Pls
2878 1483 Pls
2884 1540 Pls
2888 1401 Pls
2894 1530 Pls
2898 1499 Pls
2903 1421 Pls
2908 1514 Pls
2913 1535 Pls
2918 1432 Pls
2922 1427 Pls
2927 1509 Pls
2932 1550 Pls
2936 1519 Pls
2941 1473 Pls
2946 1483 Pls
2950 1535 Pls
2955 1560 Pls
2960 1185 Pls
2964 1195 Pls
2969 1195 Pls
2974 1190 Pls
2978 1185 Pls
2983 1200 Pls
2988 1190 Pls
2992 1205 Pls
2997 1185 Pls
3002 1190 Pls
3006 1185 Pls
3011 1185 Pls
3016 1175 Pls
3020 1211 Pls
3025 1190 Pls
3030 1190 Pls
3034 1211 Pls
3039 1190 Pls
3044 1195 Pls
3048 1190 Pls
3053 1190 Pls
3058 1169 Pls
3062 1355 Pls
3067 1169 Pls
3072 1175 Pls
3076 1180 Pls
3081 1195 Pls
3086 1169 Pls
3090 1190 Pls
3095 1185 Pls
3100 1175 Pls
3104 1180 Pls
3109 1195 Pls
3114 1180 Pls
3118 1185 Pls
3123 1169 Pls
3128 1190 Pls
3132 1190 Pls
3137 1180 Pls
3142 1175 Pls
3146 1180 Pls
3151 1190 Pls
3156 1190 Pls
3160 1205 Pls
3165 1180 Pls
3170 1175 Pls
3174 1185 Pls
3179 1205 Pls
3184 1180 Pls
3188 1200 Pls
3193 1205 Pls
3198 1190 Pls
3202 1180 Pls
3207 1190 Pls
3212 1180 Pls
3216 1169 Pls
3221 1180 Pls
3225 1180 Pls
3230 1169 Pls
3235 1190 Pls
3239 1169 Pls
3244 1169 Pls
3249 1190 Pls
3253 1190 Pls
3258 1195 Pls
3263 1190 Pls
3267 1175 Pls
3272 1169 Pls
3277 1175 Pls
3281 1190 Pls
3286 1200 Pls
3291 1185 Pls
3295 1180 Pls
3300 1169 Pls
3305 1180 Pls
3309 1195 Pls
3314 1180 Pls
3319 1175 Pls
3323 1175 Pls
3328 1169 Pls
3333 1169 Pls
3337 1180 Pls
3342 1169 Pls
3347 1169 Pls
3351 1262 Pls
3356 1185 Pls
3361 1180 Pls
3365 1185 Pls
3370 1169 Pls
3375 1175 Pls
3379 1175 Pls
3384 1195 Pls
3389 1180 Pls
3393 1180 Pls
3398 1164 Pls
3403 1180 Pls
3407 1195 Pls
3412 1180 Pls
3417 1185 Pls
3421 1164 Pls
3426 1190 Pls
3431 1195 Pls
3435 1175 Pls
3440 1190 Pls
3445 1169 Pls
3449 1195 Pls
3454 1175 Pls
3459 1175 Pls
3463 1190 Pls
3468 1175 Pls
3473 1180 Pls
3477 1185 Pls
3482 1190 Pls
3487 1175 Pls
3491 1175 Pls
3496 1169 Pls
3501 1180 Pls
3505 1195 Pls
3510 1169 Pls
3515 1169 Pls
3519 1180 Pls
3524 1180 Pls
3529 1195 Pls
3533 1175 Pls
3538 1169 Pls
3543 1185 Pls
3547 1175 Pls
3552 1190 Pls
3557 1190 Pls
3561 1200 Pls
3566 1175 Pls
3571 1180 Pls
3575 1190 Pls
3580 1185 Pls
3585 1180 Pls
3589 1175 Pls
3594 1175 Pls
3599 1195 Pls
3603 1175 Pls
3608 1190 Pls
3613 1185 Pls
3617 1185 Pls
3622 1169 Pls
3627 1175 Pls
3631 1180 Pls
3636 1175 Pls
3640 1185 Pls
3645 1169 Pls
3650 1175 Pls
3654 1180 Pls
3659 1175 Pls
3664 1185 Pls
3668 1190 Pls
3673 1169 Pls
3678 1185 Pls
3682 1175 Pls
3687 1175 Pls
3692 1180 Pls
3696 1180 Pls
3701 1175 Pls
3706 1190 Pls
3710 1180 Pls
3715 1175 Pls
3720 1169 Pls
3724 1175 Pls
3729 1175 Pls
3734 1195 Pls
3738 1185 Pls
3743 1175 Pls
3748 1190 Pls
3752 1190 Pls
3757 1211 Pls
3762 1175 Pls
3766 1175 Pls
3771 1175 Pls
3776 1169 Pls
3780 1180 Pls
3785 1180 Pls
3790 1185 Pls
3794 1175 Pls
3799 1195 Pls
3804 1169 Pls
3808 1195 Pls
3813 1195 Pls
3818 1185 Pls
3822 1180 Pls
3827 1190 Pls
3832 1190 Pls
3836 1175 Pls
3841 1185 Pls
3846 1200 Pls
3850 1190 Pls
3855 1180 Pls
3860 1175 Pls
3864 1185 Pls
3869 1175 Pls
3874 1180 Pls
3878 1169 Pls
3883 1175 Pls
3888 1169 Pls
3892 1185 Pls
3897 1164 Pls
3902 1195 Pls
3906 1175 Pls
3911 1190 Pls
3916 1200 Pls
3920 1169 Pls
3925 1180 Pls
3930 1185 Pls
3934 1169 Pls
3939 1185 Pls
3944 1195 Pls
3948 1195 Pls
3953 1190 Pls
3958 1169 Pls
3962 1185 Pls
3967 1164 Pls
3972 1200 Pls
3976 1195 Pls
3981 1190 Pls
3986 1180 Pls
3990 1185 Pls
3995 1175 Pls
4000 1200 Pls
4004 1180 Pls
4009 1175 Pls
4014 1195 Pls
4018 1190 Pls
4023 1180 Pls
4028 1180 Pls
4032 1185 Pls
4037 1185 Pls
4041 1185 Pls
4046 1185 Pls
4051 1169 Pls
4055 1169 Pls
4060 1190 Pls
4065 1190 Pls
4069 1185 Pls
4074 1190 Pls
4079 1169 Pls
4083 1185 Pls
4088 1185 Pls
4093 1195 Pls
4097 1180 Pls
4102 1298 Pls
4107 1175 Pls
4111 1175 Pls
4116 1180 Pls
4121 1180 Pls
4125 1169 Pls
4130 1195 Pls
4135 1180 Pls
4139 1185 Pls
4144 1195 Pls
4149 1180 Pls
4153 1175 Pls
4158 1180 Pls
4163 1169 Pls
4167 1185 Pls
4172 1185 Pls
4177 1175 Pls
4181 1180 Pls
4186 1190 Pls
4191 1175 Pls
4195 1180 Pls
4200 1175 Pls
4205 1195 Pls
4209 1180 Pls
4214 1175 Pls
4219 1185 Pls
4223 1190 Pls
4228 1195 Pls
4233 1180 Pls
4237 1175 Pls
4242 1175 Pls
4247 1180 Pls
4251 1180 Pls
4256 1175 Pls
4261 1175 Pls
4265 1175 Pls
4270 1180 Pls
4275 1190 Pls
4279 1211 Pls
4284 1169 Pls
4289 1169 Pls
4293 1190 Pls
4298 1169 Pls
4303 1169 Pls
4307 1169 Pls
4312 1190 Pls
4317 1180 Pls
4321 1185 Pls
4326 1175 Pls
4331 1169 Pls
4335 1169 Pls
4340 1185 Pls
4345 1329 Pls
4350 1169 Pls
4355 1169 Pls
4359 1185 Pls
4364 1195 Pls
4369 1190 Pls
4373 1190 Pls
4378 1185 Pls
4383 1190 Pls
4387 1185 Pls
4392 1180 Pls
4397 1180 Pls
4401 1180 Pls
4406 1195 Pls
4411 1180 Pls
4415 1190 Pls
4420 1195 Pls
4425 1169 Pls
4429 1180 Pls
4434 1180 Pls
4439 1216 Pls
4443 1180 Pls
4448 1221 Pls
4453 1200 Pls
4457 1169 Pls
4462 1175 Pls
4467 1195 Pls
4471 1185 Pls
4476 1190 Pls
4481 1200 Pls
4485 1175 Pls
4490 1195 Pls
4495 1195 Pls
4499 1190 Pls
4504 1180 Pls
4509 1185 Pls
4513 1535 Pls
4523 1545 Pls
4527 1355 Pls
4532 2816 Pls
4541 1694 Pls
4546 1509 Pls
4551 1602 Pls
4555 2044 Pls
4561 1514 Pls
4565 1596 Pls
4570 1514 Pls
4575 2749 Pls
4579 1535 Pls
4584 1396 Pls
4589 1473 Pls
4593 1658 Pls
4598 1540 Pls
4603 1751 Pls
4607 1463 Pls
4612 1468 Pls
4621 1493 Pls
4626 1596 Pls
4631 1391 Pls
4635 1535 Pls
4640 1524 Pls
4645 1416 Pls
4649 1926 Pls
4655 1571 Pls
4659 1550 Pls
4664 1473 Pls
4669 1396 Pls
4673 1586 Pls
4678 1421 Pls
4683 1555 Pls
4687 1483 Pls
4692 2044 Pls
4697 1792 Pls
4701 1581 Pls
4706 1427 Pls
4711 1596 Pls
4715 1514 Pls
4720 1380 Pls
4725 1473 Pls
4729 1483 Pls
4734 1375 Pls
4739 1473 Pls
4743 1715 Pls
4748 1519 Pls
4753 1586 Pls
4758 1499 Pls
4763 1545 Pls
4772 1499 Pls
4777 1427 Pls
4781 2692 Pls
4786 1540 Pls
4791 1432 Pls
4795 1519 Pls
4800 1447 Pls
4805 1493 Pls
4809 1560 Pls
4814 1447 Pls
4819 1370 Pls
4823 1493 Pls
4828 1555 Pls
4833 1555 Pls
4837 1473 Pls
4842 1463 Pls
4847 1416 Pls
4853 1509 Pls
4857 1468 Pls
4862 3094 Pls
4867 1550 Pls
4871 1370 Pls
4876 1674 Pls
4881 1468 Pls
4885 1535 Pls
4890 1478 Pls
4895 1483 Pls
4899 1493 Pls
4904 1499 Pls
4909 1421 Pls
4913 1483 Pls
4918 1535 Pls
4923 1483 Pls
4927 1540 Pls
4932 1663 Pls
4937 1463 Pls
4941 1555 Pls
4946 1617 Pls
4951 1447 Pls
4955 3042 Pls
4960 1447 Pls
4965 1632 Pls
4969 1509 Pls
4974 1468 Pls
4979 1566 Pls
4983 1581 Pls
4988 1463 Pls
4993 1478 Pls
5003 1674 Pls
5007 1555 Pls
5012 1514 Pls
5018 1463 Pls
5022 1555 Pls
5027 1493 Pls
5032 1622 Pls
5036 1421 Pls
5041 1530 Pls
5046 1437 Pls
5050 1540 Pls
5055 1483 Pls
5060 1483 Pls
5070 1530 Pls
5074 1540 Pls
5084 1540 Pls
5089 1411 Pls
5094 1488 Pls
5098 1519 Pls
5103 1509 Pls
5108 1468 Pls
5112 1982 Pls
5117 1596 Pls
5122 1519 Pls
5126 1437 Pls
5131 1468 Pls
5136 1540 Pls
5140 1473 Pls
5146 1483 Pls
5150 2157 Pls
5155 1473 Pls
5164 1468 Pls
5169 1488 Pls
5174 1447 Pls
5179 1596 Pls
5184 1488 Pls
5189 1530 Pls
5193 1602 Pls
5198 1493 Pls
5203 1473 Pls
5207 1406 Pls
5212 1519 Pls
5217 1632 Pls
5221 1514 Pls
5231 1519 Pls
5236 1427 Pls
5247 1545 Pls
5252 1540 Pls
5256 1540 Pls
5261 2152 Pls
5265 1416 Pls
5270 1555 Pls
5275 1365 Pls
5279 3238 Pls
5284 1530 Pls
5289 1493 Pls
5293 1622 Pls
5298 1848 Pls
5303 1514 Pls
5312 1463 Pls
5317 1406 Pls
5323 1530 Pls
5328 1530 Pls
5332 1175 Pls
5337 1185 Pls
5342 1175 Pls
5346 1175 Pls
5351 1190 Pls
5356 1190 Pls
5360 1195 Pls
5365 1195 Pls
5370 1195 Pls
5374 1226 Pls
5379 1185 Pls
5384 1190 Pls
5388 1185 Pls
5393 1169 Pls
5398 1190 Pls
5402 1169 Pls
5407 1175 Pls
5412 1180 Pls
5416 1175 Pls
5421 1175 Pls
5426 1195 Pls
5430 1190 Pls
5435 1185 Pls
5440 1195 Pls
5444 1195 Pls
5449 1169 Pls
5454 1180 Pls
5458 1164 Pls
5463 1185 Pls
5468 1175 Pls
5472 1190 Pls
5477 1169 Pls
5482 1190 Pls
5486 1190 Pls
5491 1190 Pls
5496 1205 Pls
5500 1190 Pls
5505 1190 Pls
5510 1211 Pls
5514 1175 Pls
5519 1180 Pls
5524 1185 Pls
5528 1226 Pls
5533 1180 Pls
5537 1185 Pls
5542 1190 Pls
5547 1190 Pls
5551 1185 Pls
5555 1175 Pls
5560 1200 Pls
5564 1175 Pls
5569 1175 Pls
5572 1185 Pls
5577 1190 Pls
5582 1175 Pls
5586 1180 Pls
5590 1175 Pls
5594 1169 Pls
5599 1169 Pls
5604 1169 Pls
5607 1175 Pls
5612 1175 Pls
5616 1180 Pls
5621 1195 Pls
5625 1175 Pls
5629 1185 Pls
5634 1175 Pls
5638 1175 Pls
5642 1190 Pls
5647 1144 Pls
5651 1180 Pls
5656 1195 Pls
5660 1175 Pls
5664 1180 Pls
5669 1175 Pls
5673 1190 Pls
5677 1185 Pls
5681 1252 Pls
5686 1175 Pls
5691 1185 Pls
5694 1185 Pls
5699 1195 Pls
5703 1169 Pls
5708 1169 Pls
5712 1169 Pls
5717 1231 Pls
5721 1169 Pls
5726 1180 Pls
5729 1195 Pls
5734 1200 Pls
5739 1169 Pls
5743 1185 Pls
5747 1175 Pls
5751 1175 Pls
5756 1185 Pls
5761 1190 Pls
5764 1169 Pls
5769 1190 Pls
5773 1169 Pls
5778 1175 Pls
5782 1175 Pls
5786 1169 Pls
5791 1175 Pls
5795 1190 Pls
5799 1190 Pls
5804 1195 Pls
5808 1180 Pls
5813 1175 Pls
5816 1175 Pls
5821 1175 Pls
5826 1185 Pls
5830 1175 Pls
5834 1272 Pls
5838 1200 Pls
5843 1190 Pls
5848 1169 Pls
5851 1195 Pls
5856 1180 Pls
5860 1169 Pls
5865 1185 Pls
5869 1195 Pls
5873 1175 Pls
5878 1180 Pls
5882 1190 Pls
5886 1190 Pls
5891 1180 Pls
5895 1195 Pls
5900 1180 Pls
5904 1175 Pls
5908 1185 Pls
5913 1200 Pls
5917 1180 Pls
5921 1185 Pls
5925 1175 Pls
5930 1180 Pls
5935 1180 Pls
5939 1180 Pls
5943 1169 Pls
5947 1195 Pls
5952 1200 Pls
5956 1175 Pls
5960 1175 Pls
5965 1190 Pls
5969 1195 Pls
5973 1180 Pls
5978 1195 Pls
5982 1175 Pls
5987 1169 Pls
5991 1185 Pls
5995 1164 Pls
6000 1190 Pls
6004 1180 Pls
6008 1195 Pls
6012 1190 Pls
6017 1175 Pls
6022 1180 Pls
6026 1180 Pls
6030 1169 Pls
6034 1175 Pls
6039 1180 Pls
6043 1169 Pls
6047 1185 Pls
6052 1169 Pls
6056 1180 Pls
6061 1175 Pls
6065 1185 Pls
6069 1169 Pls
6074 1175 Pls
6078 1175 Pls
6082 1190 Pls
6087 1190 Pls
6091 1190 Pls
6095 1175 Pls
6099 1180 Pls
6104 1180 Pls
6109 1185 Pls
6113 1190 Pls
6117 1175 Pls
6121 1180 Pls
6126 1175 Pls
6130 1190 Pls
6134 1175 Pls
6139 1175 Pls
6143 1169 Pls
6148 1169 Pls
6152 1169 Pls
6156 1185 Pls
6161 1169 Pls
6165 1180 Pls
6169 1169 Pls
6174 1169 Pls
6178 1180 Pls
6183 1221 Pls
6186 1169 Pls
6191 1195 Pls
6196 1169 Pls
6200 1190 Pls
6204 1200 Pls
6208 1195 Pls
6213 1169 Pls
6217 1185 Pls
6221 1175 Pls
6226 1190 Pls
6230 1190 Pls
6235 1169 Pls
6239 1190 Pls
6243 1180 Pls
6248 1169 Pls
6252 1180 Pls
6256 1180 Pls
6261 1195 Pls
6265 1190 Pls
6270 1185 Pls
6273 1180 Pls
6278 1190 Pls
6283 1175 Pls
6287 1169 Pls
6291 1175 Pls
6295 1185 Pls
6300 1185 Pls
6305 1200 Pls
6308 1190 Pls
6313 1190 Pls
6317 1195 Pls
6322 1169 Pls
6326 1190 Pls
6330 1175 Pls
6335 1185 Pls
6339 1180 Pls
6343 1169 Pls
6348 1175 Pls
6352 1190 Pls
6357 1190 Pls
6360 1169 Pls
6365 1195 Pls
6370 1190 Pls
6374 1185 Pls
6378 1185 Pls
6382 1185 Pls
6387 1175 Pls
6392 1185 Pls
6395 1185 Pls
6400 1175 Pls
6404 1175 Pls
6409 1169 Pls
6413 1185 Pls
6417 1180 Pls
6422 1169 Pls
6426 1195 Pls
6430 1175 Pls
6435 1175 Pls
6439 1195 Pls
6444 1185 Pls
6448 1169 Pls
6452 1190 Pls
6457 1180 Pls
6461 1195 Pls
6465 1195 Pls
6469 1175 Pls
6474 1190 Pls
6479 1185 Pls
6483 1185 Pls
6487 1195 Pls
6491 1169 Pls
6496 1180 Pls
6500 1195 Pls
6504 1180 Pls
6509 1175 Pls
6513 1175 Pls
6517 1175 Pls
6522 1180 Pls
6526 1169 Pls
6531 1205 Pls
6535 1180 Pls
6539 1195 Pls
6544 1190 Pls
6548 1190 Pls
6552 1175 Pls
6556 1175 Pls
6561 1180 Pls
6566 1175 Pls
6570 1185 Pls
6574 1195 Pls
6578 1190 Pls
6583 1195 Pls
6587 1180 Pls
6591 1195 Pls
6596 1169 Pls
6600 1180 Pls
6605 1180 Pls
6609 1175 Pls
6613 1195 Pls
6618 1169 Pls
6622 1169 Pls
6626 1175 Pls
6631 1169 Pls
6635 1190 Pls
6639 1195 Pls
6643 1195 Pls
6648 1180 Pls
6653 1180 Pls
6657 1169 Pls
6661 1180 Pls
6665 1190 Pls
6670 1175 Pls
6674 1195 Pls
6678 1164 Pls
6683 1190 Pls
6687 1175 Pls
6692 1200 Pls
6696 1190 Pls
6700 1169 Pls
6705 1175 Pls
6709 1185 Pls
6713 1169 Pls
6718 1185 Pls
6722 1195 Pls
6727 1169 Pls
6730 1180 Pls
6735 1185 Pls
6740 1180 Pls
6744 1169 Pls
6748 1190 Pls
6752 1195 Pls
6757 1195 Pls
6761 1175 Pls
6765 1175 Pls
6770 1169 Pls
6774 1211 Pls
6779 1169 Pls
6783 1175 Pls
6787 1180 Pls
6792 1169 Pls
6796 1195 Pls
6800 1185 Pls
6805 1169 Pls
6809 1185 Pls
6814 1190 Pls
6817 1185 Pls
6822 1195 Pls
2.000 UP
1.000 UL
LT1
1.00 0.00 0.00 C 2203 4262 TriU
2284 4262 TriU
2430 4262 TriU
2509 4262 TriU
2590 4262 TriU
2671 4262 TriU
2750 4262 TriU
4518 4262 TriU
5065 4262 TriU
5226 4262 TriU
5241 4262 TriU
1.000 UL
LTb
1386 4776 M
0 -4116 V
5440 0 V
0 4116 V
-5440 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
