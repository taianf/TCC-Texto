%!PS-Adobe-2.0 EPSF-2.0
%%Title: ker19TotSched.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Tue Jan 22 23:54:56 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ker19TotSched.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan 22 23:54:56 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1518 660 M
63 0 V
5245 0 R
-63 0 V
1518 1175 M
63 0 V
5245 0 R
-63 0 V
1518 1689 M
63 0 V
5245 0 R
-63 0 V
1518 2204 M
63 0 V
5245 0 R
-63 0 V
1518 2718 M
63 0 V
5245 0 R
-63 0 V
1518 3233 M
63 0 V
5245 0 R
-63 0 V
1518 3747 M
63 0 V
5245 0 R
-63 0 V
1518 4262 M
63 0 V
5245 0 R
-63 0 V
1518 4776 M
63 0 V
5245 0 R
-63 0 V
1518 660 M
0 63 V
0 4053 R
0 -63 V
2403 660 M
0 63 V
0 4053 R
0 -63 V
3287 660 M
0 63 V
0 4053 R
0 -63 V
4172 660 M
0 63 V
0 4053 R
0 -63 V
5057 660 M
0 63 V
0 4053 R
0 -63 V
5941 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
-5308 63 R
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
1.000 UP
1.000 UP
1523 1180 Pls
1528 1157 Pls
1533 1498 Pls
1537 1296 Pls
1543 1602 Pls
1548 2230 Pls
1553 1531 Pls
1558 1103 Pls
1562 1474 Pls
1568 1318 Pls
1573 1324 Pls
1577 1620 Pls
1583 1916 Pls
1587 2092 Pls
1592 2241 Pls
1598 1086 Pls
1602 1266 Pls
1607 1209 Pls
1612 1421 Pls
1617 1445 Pls
1622 1956 Pls
1627 1873 Pls
1632 2062 Pls
1637 1555 Pls
1642 810 Pls
1647 2661 Pls
1652 1202 Pls
1657 1525 Pls
1661 1804 Pls
1667 1953 Pls
1672 2299 Pls
1676 1204 Pls
1682 1227 Pls
1686 1583 Pls
1691 1420 Pls
1697 1789 Pls
1706 1764 Pls
1711 1418 Pls
1716 1279 Pls
1721 1412 Pls
1726 1234 Pls
1731 1628 Pls
1736 1634 Pls
1741 1847 Pls
1746 1828 Pls
1751 2268 Pls
1756 1421 Pls
1761 1339 Pls
1766 2042 Pls
1781 1666 Pls
1785 2475 Pls
1790 2192 Pls
1796 2157 Pls
1800 1073 Pls
1806 2619 Pls
1810 1275 Pls
1815 1530 Pls
1821 1996 Pls
1825 2448 Pls
1830 1718 Pls
1835 1765 Pls
1840 2478 Pls
1850 2348 Pls
1855 1741 Pls
1859 1764 Pls
1865 3040 Pls
1870 2198 Pls
1875 1945 Pls
1880 865 Pls
1884 1571 Pls
1890 1177 Pls
1895 1618 Pls
1905 1623 Pls
1909 1466 Pls
1914 1841 Pls
1920 1921 Pls
1924 2081 Pls
1929 1748 Pls
1934 1435 Pls
1939 2357 Pls
1944 1828 Pls
1949 1520 Pls
1954 2011 Pls
1959 1985 Pls
2008 1711 Pls
2013 1332 Pls
2019 1525 Pls
2023 1805 Pls
2028 1938 Pls
2033 2083 Pls
2038 1868 Pls
2043 1842 Pls
2053 1728 Pls
2058 1422 Pls
2063 2474 Pls
2068 1643 Pls
2073 3472 Pls
2078 2887 Pls
2082 1787 Pls
2088 825 Pls
2093 1610 Pls
2103 1336 Pls
2112 1811 Pls
2118 1858 Pls
2122 2293 Pls
2128 1736 Pls
2132 1210 Pls
2137 3481 Pls
2143 3466 Pls
2147 3119 Pls
2152 1765 Pls
2157 2065 Pls
2162 1390 Pls
2167 1082 Pls
2172 1901 Pls
2177 1340 Pls
2182 1483 Pls
2187 1694 Pls
2192 1457 Pls
2197 2046 Pls
2202 2030 Pls
2206 1351 Pls
2212 1241 Pls
2217 1809 Pls
2221 1548 Pls
2227 2064 Pls
2231 1946 Pls
2236 2023 Pls
2242 1354 Pls
2246 844 Pls
2251 2107 Pls
2257 1988 Pls
2261 1868 Pls
2266 1835 Pls
2276 2279 Pls
2281 2316 Pls
2286 1228 Pls
2291 1712 Pls
2296 2282 Pls
2301 1869 Pls
2305 2048 Pls
2311 1080 Pls
2316 1148 Pls
2320 1178 Pls
2326 1189 Pls
2330 1225 Pls
2335 2292 Pls
2341 1912 Pls
2345 1871 Pls
2350 2112 Pls
2355 2059 Pls
2360 2116 Pls
2366 2306 Pls
2370 1302 Pls
2375 1479 Pls
2404 2514 Pls
2410 1730 Pls
2415 1750 Pls
2419 1695 Pls
2425 1076 Pls
2429 1288 Pls
2435 2440 Pls
2440 1215 Pls
2444 1440 Pls
2450 1731 Pls
2454 1568 Pls
2459 2087 Pls
2465 1914 Pls
2469 1605 Pls
2474 2064 Pls
2479 1347 Pls
2484 1297 Pls
2489 1699 Pls
2494 1749 Pls
2499 3269 Pls
2504 1347 Pls
2509 1926 Pls
2514 1233 Pls
2519 1306 Pls
2524 1329 Pls
2528 1695 Pls
2534 1670 Pls
2539 1737 Pls
2543 2042 Pls
2549 2523 Pls
2553 1203 Pls
2558 1917 Pls
2564 1207 Pls
2568 1621 Pls
2573 1752 Pls
2578 1971 Pls
2588 2552 Pls
2593 1503 Pls
2598 2734 Pls
2603 1725 Pls
2608 1625 Pls
2613 2048 Pls
2618 2031 Pls
2623 2030 Pls
2627 1422 Pls
2633 1218 Pls
2638 1944 Pls
2642 1620 Pls
2648 1637 Pls
2652 2464 Pls
2657 2002 Pls
2663 2072 Pls
2667 1135 Pls
2672 2122 Pls
2677 1445 Pls
2682 1468 Pls
2688 1270 Pls
2692 1204 Pls
2697 1655 Pls
2702 2043 Pls
2707 1541 Pls
2712 1746 Pls
2717 2101 Pls
2722 1217 Pls
2726 1631 Pls
2732 1854 Pls
2741 1882 Pls
2747 1879 Pls
2752 1326 Pls
2757 1403 Pls
2762 817 Pls
2766 1667 Pls
2772 1751 Pls
2776 1622 Pls
2781 1930 Pls
2787 882 Pls
2791 2444 Pls
2801 1342 Pls
2806 2772 Pls
2811 1916 Pls
2816 1788 Pls
2821 1884 Pls
2826 1738 Pls
2831 1112 Pls
2836 957 Pls
2841 874 Pls
2846 892 Pls
2850 1273 Pls
2856 1666 Pls
2861 2895 Pls
2865 2450 Pls
2890 2152 Pls
2895 1546 Pls
2900 1546 Pls
2905 2016 Pls
2910 2357 Pls
2915 2288 Pls
2920 1486 Pls
2925 1463 Pls
2930 2116 Pls
2935 1375 Pls
2940 2300 Pls
2945 2061 Pls
2949 2255 Pls
2955 1713 Pls
2960 1305 Pls
2964 2671 Pls
2970 1524 Pls
2974 2016 Pls
2979 2219 Pls
2985 2203 Pls
2989 1088 Pls
2995 1170 Pls
3000 1756 Pls
3004 1538 Pls
3010 1620 Pls
3014 1754 Pls
3019 1767 Pls
3024 2364 Pls
3034 1191 Pls
3039 1413 Pls
3044 1808 Pls
3048 1571 Pls
3054 2409 Pls
3059 1897 Pls
3064 2255 Pls
3069 1448 Pls
3073 1837 Pls
3079 1200 Pls
3084 1123 Pls
3088 1236 Pls
3094 1766 Pls
3098 1113 Pls
3103 2308 Pls
3109 1087 Pls
3113 1066 Pls
3118 1106 Pls
3123 1456 Pls
3128 2276 Pls
3133 1765 Pls
3138 2131 Pls
3143 1335 Pls
3148 2142 Pls
3153 1403 Pls
3158 3631 Pls
3163 1713 Pls
3168 1838 Pls
3172 1850 Pls
3183 1073 Pls
3187 1069 Pls
3193 1164 Pls
3197 1129 Pls
3202 1394 Pls
3208 1918 Pls
3212 1649 Pls
3217 1552 Pls
3222 2174 Pls
3227 1079 Pls
3232 2523 Pls
3237 2186 Pls
3242 808 Pls
3248 1808 Pls
3252 1873 Pls
3257 2251 Pls
3262 1746 Pls
3267 2120 Pls
3271 1900 Pls
3277 1303 Pls
3282 1635 Pls
3286 807 Pls
3292 1873 Pls
3296 2062 Pls
3301 1210 Pls
3307 1310 Pls
3311 1751 Pls
3317 1837 Pls
3321 1890 Pls
3326 1119 Pls
3332 1405 Pls
3336 1291 Pls
3346 1766 Pls
3370 1212 Pls
3376 1084 Pls
3381 1173 Pls
3386 1515 Pls
3391 1523 Pls
3395 1927 Pls
3401 1304 Pls
3406 1261 Pls
3410 2080 Pls
3416 2309 Pls
3420 2270 Pls
3425 3824 Pls
3435 1320 Pls
3440 1540 Pls
3445 1461 Pls
3460 1358 Pls
3465 1717 Pls
3470 2108 Pls
3475 1966 Pls
3480 2726 Pls
3485 1813 Pls
3490 1319 Pls
3494 2403 Pls
3500 2454 Pls
3505 1120 Pls
3509 1357 Pls
3515 2019 Pls
3519 1876 Pls
3524 2224 Pls
3530 1179 Pls
3534 1120 Pls
3539 2365 Pls
3549 1778 Pls
3555 2411 Pls
3559 2277 Pls
3564 1690 Pls
3569 2289 Pls
3574 1520 Pls
3579 1720 Pls
3584 1359 Pls
3593 2416 Pls
3604 1305 Pls
3608 1215 Pls
3614 1314 Pls
3624 1859 Pls
3629 1829 Pls
3633 1819 Pls
3639 1724 Pls
3643 2289 Pls
3648 1061 Pls
3654 2650 Pls
3658 1310 Pls
3663 1338 Pls
3668 1833 Pls
3673 1742 Pls
3678 1829 Pls
3683 1530 Pls
3688 964 Pls
3693 1110 Pls
3698 1218 Pls
3703 1141 Pls
3708 1777 Pls
3713 1914 Pls
3717 1839 Pls
3723 1989 Pls
3728 1851 Pls
3732 2334 Pls
3738 1308 Pls
3743 1912 Pls
3747 1336 Pls
3753 1508 Pls
3757 1848 Pls
3762 1767 Pls
3767 2056 Pls
3772 951 Pls
3777 1169 Pls
3782 1272 Pls
3787 1493 Pls
3792 1599 Pls
3797 1659 Pls
3802 1856 Pls
3807 2034 Pls
3812 2039 Pls
3816 1076 Pls
3822 1609 Pls
3827 1603 Pls
3831 1613 Pls
3837 1492 Pls
3841 1652 Pls
3846 1502 Pls
3852 1727 Pls
3881 1100 Pls
3886 1415 Pls
3891 2527 Pls
3896 1754 Pls
3901 3466 Pls
3906 1316 Pls
3911 1550 Pls
3915 1303 Pls
3921 1130 Pls
3926 1225 Pls
3930 1717 Pls
3936 2218 Pls
3946 1737 Pls
3951 3492 Pls
3955 914 Pls
3961 1479 Pls
3965 1840 Pls
3970 1645 Pls
3976 2222 Pls
3980 1652 Pls
3985 1714 Pls
3990 1107 Pls
3995 1269 Pls
4000 1308 Pls
4005 1883 Pls
4010 1757 Pls
4015 1642 Pls
4020 2232 Pls
4025 1446 Pls
4030 2465 Pls
4035 1741 Pls
4039 1715 Pls
4050 1682 Pls
4054 1841 Pls
4060 2208 Pls
4064 1779 Pls
4069 1690 Pls
4075 1255 Pls
4079 1077 Pls
4084 2518 Pls
4089 1412 Pls
4094 1643 Pls
4099 1861 Pls
4104 2043 Pls
4109 2457 Pls
4114 1115 Pls
4119 1224 Pls
4124 1853 Pls
4129 1835 Pls
4134 2002 Pls
4138 1927 Pls
4144 1805 Pls
4149 2270 Pls
4153 1140 Pls
4159 1277 Pls
4163 1766 Pls
4168 1227 Pls
4174 1803 Pls
4178 1319 Pls
4184 1709 Pls
4188 1559 Pls
4193 1852 Pls
4199 2034 Pls
4203 1097 Pls
4208 1224 Pls
4213 1180 Pls
4218 1580 Pls
4223 1374 Pls
4228 1536 Pls
4233 1650 Pls
4238 1843 Pls
4243 1555 Pls
4248 1907 Pls
4258 1645 Pls
4262 1422 Pls
4268 1079 Pls
4273 1432 Pls
4277 1421 Pls
4283 1839 Pls
4287 1738 Pls
4292 1621 Pls
4298 2075 Pls
4302 1622 Pls
4307 1082 Pls
4312 1425 Pls
4322 3500 Pls
4327 2107 Pls
4332 1860 Pls
4337 2856 Pls
4367 1667 Pls
4372 2038 Pls
4376 2143 Pls
4382 912 Pls
4391 1418 Pls
4397 2906 Pls
4401 1854 Pls
4406 1686 Pls
4411 1874 Pls
4416 2428 Pls
4421 1397 Pls
4426 1111 Pls
4431 1335 Pls
4436 1828 Pls
4441 2430 Pls
4446 1269 Pls
4451 1291 Pls
4456 1570 Pls
4460 1621 Pls
4466 2020 Pls
4471 1967 Pls
4475 1447 Pls
4481 1356 Pls
4486 1823 Pls
4490 1524 Pls
4496 1849 Pls
4500 1790 Pls
4506 1846 Pls
4510 2216 Pls
4515 1559 Pls
4521 1729 Pls
4525 1881 Pls
4530 1686 Pls
4535 1766 Pls
4545 2364 Pls
4550 1639 Pls
4565 1408 Pls
4575 1830 Pls
4580 1941 Pls
4584 1792 Pls
4590 2016 Pls
4595 2018 Pls
4599 2109 Pls
4605 1260 Pls
4609 1574 Pls
4614 1431 Pls
4624 2976 Pls
4629 810 Pls
4634 3465 Pls
4639 2461 Pls
4644 2239 Pls
4649 1274 Pls
4654 1466 Pls
4664 1881 Pls
4669 1773 Pls
4674 1856 Pls
4679 1947 Pls
4683 2099 Pls
4689 1109 Pls
4694 1306 Pls
4704 1873 Pls
4708 1956 Pls
4713 1143 Pls
4719 2248 Pls
4723 1073 Pls
4728 2430 Pls
4733 1377 Pls
4738 1336 Pls
4743 1807 Pls
4748 1858 Pls
4753 803 Pls
4758 2213 Pls
4763 811 Pls
4768 1189 Pls
4773 1569 Pls
4797 1334 Pls
4803 1639 Pls
4807 1517 Pls
4812 3664 Pls
4818 1838 Pls
4822 2245 Pls
4828 1922 Pls
4832 2347 Pls
4837 2281 Pls
4843 1191 Pls
4847 1668 Pls
4857 1742 Pls
4862 1747 Pls
4867 2060 Pls
4872 2178 Pls
4877 1071 Pls
4882 1872 Pls
4887 1265 Pls
4892 1591 Pls
4897 2004 Pls
4902 1328 Pls
4906 2218 Pls
4912 1197 Pls
4917 1506 Pls
4921 1798 Pls
4927 1841 Pls
4931 1671 Pls
4936 2282 Pls
4942 2116 Pls
4946 1930 Pls
4951 2296 Pls
4956 2505 Pls
4961 1543 Pls
4966 1866 Pls
4971 1942 Pls
4976 1864 Pls
4981 1032 Pls
4982 1501 Pls
4986 1457 Pls
4991 1416 Pls
4996 2603 Pls
5005 1790 Pls
5011 2047 Pls
5016 1926 Pls
5020 1906 Pls
5026 2010 Pls
5030 959 Pls
5035 1179 Pls
5041 1099 Pls
5045 1197 Pls
5050 2216 Pls
5055 2032 Pls
5075 1776 Pls
5080 1102 Pls
5085 1856 Pls
5090 1602 Pls
5095 1906 Pls
5100 1935 Pls
5104 2303 Pls
5110 1920 Pls
5115 1861 Pls
5119 1741 Pls
5125 1224 Pls
5129 3592 Pls
5135 1836 Pls
5144 1938 Pls
5154 1698 Pls
5159 1554 Pls
5165 1608 Pls
5169 1622 Pls
5174 2057 Pls
5179 1819 Pls
5184 1175 Pls
5189 2147 Pls
5194 2439 Pls
5199 2347 Pls
5204 1747 Pls
5209 1692 Pls
5214 2100 Pls
5219 2016 Pls
5224 2043 Pls
5228 2485 Pls
5234 1102 Pls
5239 1122 Pls
5273 1149 Pls
5278 1339 Pls
5283 1395 Pls
5288 1854 Pls
5293 1551 Pls
5298 1908 Pls
5303 2150 Pls
5308 1803 Pls
5313 1631 Pls
5318 2405 Pls
5323 2512 Pls
5327 1118 Pls
5333 1138 Pls
5338 1334 Pls
5342 1743 Pls
5348 1817 Pls
5352 2122 Pls
5357 2117 Pls
5363 800 Pls
5367 1729 Pls
5372 1121 Pls
5377 1350 Pls
5388 2066 Pls
5392 1884 Pls
5397 1416 Pls
5407 1427 Pls
5412 1742 Pls
5417 1984 Pls
5422 3186 Pls
5426 1711 Pls
5432 1314 Pls
5437 1612 Pls
5441 1444 Pls
5447 1319 Pls
5451 2715 Pls
5457 1702 Pls
5462 1611 Pls
5466 1752 Pls
5472 1939 Pls
5476 2014 Pls
5481 1154 Pls
5487 1412 Pls
5491 1098 Pls
5496 1601 Pls
5575 1208 Pls
5580 3106 Pls
5586 1346 Pls
5590 1640 Pls
5595 1755 Pls
5600 1531 Pls
5605 1408 Pls
5610 2238 Pls
5615 1106 Pls
5620 1412 Pls
5625 1715 Pls
5630 1617 Pls
5635 1001 Pls
5640 1850 Pls
5645 2054 Pls
5649 1106 Pls
5655 1196 Pls
5660 1184 Pls
5664 1316 Pls
5670 1478 Pls
5674 1832 Pls
5679 1828 Pls
5685 2215 Pls
5689 2378 Pls
5695 1073 Pls
5699 1328 Pls
5704 1702 Pls
5710 1922 Pls
5714 2043 Pls
5719 1175 Pls
5759 2034 Pls
5764 2507 Pls
5769 1745 Pls
5773 1348 Pls
5779 1821 Pls
5784 2052 Pls
5788 1791 Pls
5794 2208 Pls
5798 2491 Pls
5803 1339 Pls
5809 817 Pls
5813 1528 Pls
5818 1700 Pls
5823 2011 Pls
5828 2226 Pls
5833 1337 Pls
5838 1149 Pls
5843 1301 Pls
5848 1292 Pls
5853 1181 Pls
5858 1609 Pls
5863 2675 Pls
5868 2285 Pls
5872 1433 Pls
5878 1094 Pls
5883 1346 Pls
5887 1650 Pls
5893 1689 Pls
5897 1814 Pls
5902 2282 Pls
5908 1320 Pls
5912 1222 Pls
5917 1621 Pls
5922 2109 Pls
5927 1738 Pls
5932 2022 Pls
5937 1963 Pls
5942 1683 Pls
5947 1773 Pls
5952 2454 Pls
5957 1103 Pls
5962 2522 Pls
5967 1504 Pls
5971 1858 Pls
5977 2030 Pls
5982 1913 Pls
5986 2043 Pls
5992 1870 Pls
5996 2288 Pls
6001 1229 Pls
6007 808 Pls
6011 2326 Pls
6017 1645 Pls
6021 1737 Pls
6026 2474 Pls
6032 1936 Pls
6036 2302 Pls
6041 2478 Pls
6046 1071 Pls
6051 1276 Pls
6056 1429 Pls
6061 3170 Pls
6066 1750 Pls
6070 1835 Pls
6076 1545 Pls
6081 2307 Pls
6086 1428 Pls
6091 1800 Pls
6095 1454 Pls
6101 1681 Pls
6106 1593 Pls
6110 2046 Pls
6116 2024 Pls
6120 954 Pls
6125 1441 Pls
6131 1122 Pls
6135 1509 Pls
6140 1304 Pls
6145 1549 Pls
6150 1891 Pls
6155 1676 Pls
6160 1842 Pls
6165 2046 Pls
6170 2487 Pls
6175 1403 Pls
6180 1425 Pls
6185 1820 Pls
6190 2835 Pls
6194 1938 Pls
6234 1298 Pls
6239 1078 Pls
6245 1894 Pls
6249 2273 Pls
6255 1218 Pls
6259 1191 Pls
6264 1154 Pls
6269 1418 Pls
6274 1988 Pls
6279 2160 Pls
6284 1066 Pls
6289 1211 Pls
6293 1378 Pls
6299 1995 Pls
6304 1667 Pls
6308 822 Pls
6314 1496 Pls
6318 1208 Pls
6324 1329 Pls
6329 1543 Pls
6333 1630 Pls
6339 1800 Pls
6343 1433 Pls
6354 1162 Pls
6358 2506 Pls
6363 1517 Pls
6368 1650 Pls
6373 1652 Pls
6378 2221 Pls
6383 1445 Pls
6388 1347 Pls
6393 1125 Pls
6398 1740 Pls
6403 1833 Pls
6408 3164 Pls
6413 1775 Pls
6417 1207 Pls
6423 1097 Pls
6432 1861 Pls
6438 2037 Pls
6442 2526 Pls
6447 1767 Pls
6453 1088 Pls
6457 1300 Pls
6462 1293 Pls
6467 1542 Pls
6472 1854 Pls
6477 2036 Pls
6482 2088 Pls
6487 1381 Pls
6492 1505 Pls
6497 1618 Pls
6502 1920 Pls
6507 1379 Pls
6512 1630 Pls
6516 1406 Pls
6522 1525 Pls
6527 1607 Pls
6531 2011 Pls
6537 2257 Pls
6542 1873 Pls
6546 1615 Pls
6552 1621 Pls
6556 1942 Pls
6561 2038 Pls
6566 1257 Pls
6571 1374 Pls
6577 1757 Pls
6581 1709 Pls
6586 2042 Pls
6591 2066 Pls
6596 2057 Pls
6601 1328 Pls
6606 1736 Pls
6611 1986 Pls
6615 1763 Pls
6621 2162 Pls
6626 1167 Pls
6630 1183 Pls
6636 1423 Pls
6640 1629 Pls
6646 1940 Pls
6651 1051 Pls
6655 1297 Pls
6661 1623 Pls
6665 1836 Pls
6670 1984 Pls
6676 1871 Pls
6705 1903 Pls
6710 1080 Pls
6715 1104 Pls
6720 1126 Pls
6725 810 Pls
6730 1452 Pls
6735 2697 Pls
6739 2181 Pls
6745 1557 Pls
6750 1085 Pls
6754 1911 Pls
6760 1596 Pls
6775 1953 Pls
6779 2193 Pls
6784 814 Pls
6790 3888 Pls
6794 1214 Pls
6799 1821 Pls
6804 3112 Pls
6809 1748 Pls
6814 1843 Pls
6819 2150 Pls
2.000 UP
1.000 UL
LTb
1518 4570 TriU
1701 4570 TriU
1771 4570 TriU
1775 4570 TriU
1845 4570 TriU
1899 4570 TriU
1994 4570 TriU
2004 4570 TriU
2048 4570 TriU
2097 4570 TriU
2107 4570 TriU
2271 4570 TriU
2380 4570 TriU
2400 4570 TriU
2583 4570 TriU
2737 4570 TriU
2796 4570 TriU
2871 4570 TriU
2880 4570 TriU
2886 4570 TriU
3029 4570 TriU
3178 4570 TriU
3341 4570 TriU
3356 4570 TriU
3366 4570 TriU
3431 4570 TriU
3450 4570 TriU
3455 4570 TriU
3544 4570 TriU
3589 4570 TriU
3599 4570 TriU
3618 4570 TriU
3856 4570 TriU
3871 4570 TriU
3877 4570 TriU
3940 4570 TriU
4045 4570 TriU
4253 4570 TriU
4317 4570 TriU
4347 4570 TriU
4361 4570 TriU
4386 4570 TriU
4540 4570 TriU
4555 4570 TriU
4559 4570 TriU
4570 4570 TriU
4620 4570 TriU
4659 4570 TriU
4698 4570 TriU
4788 4570 TriU
4793 4570 TriU
4852 4570 TriU
5001 4570 TriU
5070 4570 TriU
5140 4570 TriU
5150 4570 TriU
5249 4570 TriU
5258 4570 TriU
5264 4570 TriU
5382 4570 TriU
5403 4570 TriU
5501 4570 TriU
5506 4570 TriU
5511 4570 TriU
5536 4570 TriU
5541 4570 TriU
5546 4570 TriU
5550 4570 TriU
5556 4570 TriU
5561 4570 TriU
5565 4570 TriU
5571 4570 TriU
5725 4570 TriU
5729 4570 TriU
5740 4570 TriU
5754 4570 TriU
6200 4570 TriU
6219 4570 TriU
6230 4570 TriU
6348 4570 TriU
6428 4570 TriU
6680 4570 TriU
6700 4570 TriU
6765 4570 TriU
6769 4570 TriU
6824 4570 TriU
1.000 UL
LTb
1518 4776 M
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
