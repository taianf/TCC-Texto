%!PS-Adobe-2.0 EPSF-2.0
%%Title: ker23Tot.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Thu Apr  3 23:49:22 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ker23Tot.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr  3 23:49:22 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 594 M
63 0 V
5597 0 R
-63 0 V
1166 1117 M
63 0 V
5597 0 R
-63 0 V
1166 1640 M
63 0 V
5597 0 R
-63 0 V
1166 2162 M
63 0 V
5597 0 R
-63 0 V
1166 2685 M
63 0 V
5597 0 R
-63 0 V
1166 3208 M
63 0 V
5597 0 R
-63 0 V
1166 3731 M
63 0 V
5597 0 R
-63 0 V
1166 4253 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1169 1602 Pls
1174 1586 Pls
1178 1676 Pls
1183 1578 Pls
1188 2305 Pls
1193 1682 Pls
1198 1615 Pls
1203 1962 Pls
1208 1773 Pls
1212 1570 Pls
1218 1670 Pls
1223 1659 Pls
1227 1877 Pls
1232 1678 Pls
1237 1568 Pls
1242 1570 Pls
1247 1624 Pls
1252 1604 Pls
1257 1725 Pls
1261 1573 Pls
1267 1622 Pls
1272 1596 Pls
1276 1631 Pls
1281 1628 Pls
1286 1569 Pls
1291 1565 Pls
1296 1640 Pls
1301 1624 Pls
1306 1764 Pls
1310 1638 Pls
1316 1568 Pls
1321 1845 Pls
1325 1577 Pls
1330 1637 Pls
1335 1597 Pls
1341 1588 Pls
1345 1575 Pls
1350 1616 Pls
1355 1605 Pls
1359 1576 Pls
1365 1584 Pls
1370 1619 Pls
1374 1630 Pls
1379 1643 Pls
1384 2090 Pls
1390 1636 Pls
1394 1677 Pls
1399 1653 Pls
1404 1566 Pls
1408 1624 Pls
1414 1606 Pls
1419 1608 Pls
1424 1703 Pls
1428 1623 Pls
1433 2055 Pls
1439 1704 Pls
1443 1608 Pls
1448 1649 Pls
1453 1631 Pls
1457 1735 Pls
1463 1709 Pls
1468 1820 Pls
1473 1671 Pls
1477 1558 Pls
1482 1611 Pls
1488 1746 Pls
1492 1770 Pls
1497 1674 Pls
1502 1644 Pls
1507 1661 Pls
1512 1702 Pls
1517 1573 Pls
1522 1568 Pls
1526 1614 Pls
1531 1630 Pls
1537 4499 Pls
1541 1577 Pls
1546 1671 Pls
1551 1772 Pls
1556 1670 Pls
1561 1626 Pls
1566 1582 Pls
1571 1696 Pls
1575 1775 Pls
1580 1605 Pls
1586 1684 Pls
1591 1569 Pls
1595 1779 Pls
1600 1618 Pls
1605 1626 Pls
1610 1645 Pls
1615 1614 Pls
1620 1631 Pls
1624 1727 Pls
1629 1636 Pls
1635 2115 Pls
1640 1583 Pls
1644 1602 Pls
1649 1595 Pls
1654 1633 Pls
1659 1552 Pls
1664 1655 Pls
1669 1556 Pls
1674 1597 Pls
1678 1611 Pls
1684 1626 Pls
1689 1574 Pls
1693 1575 Pls
1698 1998 Pls
1703 1637 Pls
1708 1581 Pls
1713 1626 Pls
1718 1597 Pls
1723 1792 Pls
1727 1655 Pls
1733 1792 Pls
1738 1684 Pls
1742 1600 Pls
1747 1560 Pls
1752 1606 Pls
1757 1633 Pls
1762 1618 Pls
1767 1713 Pls
1772 1632 Pls
1776 2117 Pls
1782 1598 Pls
1787 1766 Pls
1791 1658 Pls
1796 1671 Pls
1801 1584 Pls
1807 1710 Pls
1811 1626 Pls
1816 1668 Pls
1821 1896 Pls
1825 1585 Pls
1831 1816 Pls
1836 1743 Pls
1840 1612 Pls
1845 1649 Pls
1850 1609 Pls
1856 1621 Pls
1860 1719 Pls
1865 2134 Pls
1870 1780 Pls
1874 1597 Pls
1880 1634 Pls
1885 1602 Pls
1890 1647 Pls
1894 1678 Pls
1899 1972 Pls
1905 1579 Pls
1909 1625 Pls
1914 1671 Pls
1919 1746 Pls
1923 1700 Pls
1929 1583 Pls
1934 1646 Pls
1939 1690 Pls
1943 1670 Pls
1948 1583 Pls
1954 1559 Pls
1958 1655 Pls
1963 1614 Pls
1968 1646 Pls
1973 2116 Pls
1978 1640 Pls
1983 1576 Pls
1988 1635 Pls
1992 1640 Pls
1997 1658 Pls
2003 1576 Pls
2007 1665 Pls
2012 1607 Pls
2017 1940 Pls
2022 1603 Pls
2027 1517 Pls
2032 1852 Pls
2037 1679 Pls
2041 1610 Pls
2046 1568 Pls
2052 1773 Pls
2057 1784 Pls
2061 1627 Pls
2066 1566 Pls
2071 1615 Pls
2076 1893 Pls
2081 1560 Pls
2086 1672 Pls
2090 1719 Pls
2095 1840 Pls
2101 1630 Pls
2106 1654 Pls
2110 1593 Pls
2115 1631 Pls
2120 1650 Pls
2125 1669 Pls
2130 1578 Pls
2135 1706 Pls
2140 1620 Pls
2144 1630 Pls
2150 1733 Pls
2155 1564 Pls
2159 1627 Pls
2164 1615 Pls
2169 1688 Pls
2174 1643 Pls
2179 1775 Pls
2184 1615 Pls
2189 1595 Pls
2193 1626 Pls
2199 1643 Pls
2204 1722 Pls
2208 1781 Pls
2213 1660 Pls
2218 1584 Pls
2223 1727 Pls
2228 1649 Pls
2233 1592 Pls
2238 1678 Pls
2242 1570 Pls
2248 1631 Pls
2253 1579 Pls
2257 1765 Pls
2262 1660 Pls
2267 1582 Pls
2273 1569 Pls
2277 1603 Pls
2282 1607 Pls
2287 1563 Pls
2291 1694 Pls
2297 1568 Pls
2302 1676 Pls
2306 1610 Pls
2311 1621 Pls
2316 1658 Pls
2322 1597 Pls
2326 1612 Pls
2331 1738 Pls
2336 1568 Pls
2340 1719 Pls
2346 1764 Pls
2351 1766 Pls
2356 1637 Pls
2360 1632 Pls
2365 1760 Pls
2371 1620 Pls
2375 1618 Pls
2380 1697 Pls
2385 1691 Pls
2390 1622 Pls
2395 1781 Pls
2400 1656 Pls
2405 2077 Pls
2409 1988 Pls
2414 1646 Pls
2420 1718 Pls
2424 1620 Pls
2429 1755 Pls
2434 1696 Pls
2439 1691 Pls
2444 1645 Pls
2449 1611 Pls
2454 1655 Pls
2459 1880 Pls
2464 1666 Pls
2470 1726 Pls
2474 1559 Pls
2480 1583 Pls
2486 1640 Pls
2490 1614 Pls
2496 1575 Pls
2501 1680 Pls
2506 1609 Pls
2512 1573 Pls
2517 1664 Pls
2523 1586 Pls
2527 1682 Pls
2533 1583 Pls
2539 1687 Pls
2543 1606 Pls
2549 1674 Pls
2554 1590 Pls
2559 2096 Pls
2565 1677 Pls
2570 1593 Pls
2575 1614 Pls
2580 2092 Pls
2586 1554 Pls
2591 1971 Pls
2596 1610 Pls
2602 1624 Pls
2606 1566 Pls
2612 1563 Pls
2618 1603 Pls
2623 1638 Pls
2628 1649 Pls
2633 2116 Pls
2639 1960 Pls
2644 1562 Pls
2649 1719 Pls
2655 1672 Pls
2659 1608 Pls
2665 1576 Pls
2671 1661 Pls
2675 1631 Pls
2681 2039 Pls
2686 1615 Pls
2691 1697 Pls
2697 1629 Pls
2702 1663 Pls
2707 1596 Pls
2712 1998 Pls
2718 1599 Pls
2723 1631 Pls
2728 1716 Pls
2734 1738 Pls
2739 1570 Pls
2744 1909 Pls
2750 1609 Pls
2755 1703 Pls
2760 2110 Pls
2765 1610 Pls
2771 1633 Pls
2776 1767 Pls
2781 1627 Pls
2787 1566 Pls
2791 1677 Pls
2797 1621 Pls
2803 1663 Pls
2807 1576 Pls
2813 1702 Pls
2818 1736 Pls
2823 1611 Pls
2829 1572 Pls
2834 1611 Pls
2839 1660 Pls
2844 1585 Pls
2850 1613 Pls
2856 1926 Pls
2860 1565 Pls
2866 1648 Pls
2871 1692 Pls
2876 1681 Pls
2882 1652 Pls
2887 1703 Pls
2892 1566 Pls
2897 1612 Pls
2903 1581 Pls
2908 1756 Pls
2913 1624 Pls
2919 2065 Pls
2923 1715 Pls
2929 1580 Pls
2935 1789 Pls
2939 1672 Pls
2945 1740 Pls
2950 1623 Pls
2956 1588 Pls
2961 1905 Pls
2966 1906 Pls
2972 1618 Pls
2976 1693 Pls
2982 1653 Pls
2988 1588 Pls
2992 1607 Pls
2998 1584 Pls
3003 1618 Pls
3008 1629 Pls
3014 1570 Pls
3019 1605 Pls
3024 1691 Pls
3029 1589 Pls
3035 1647 Pls
3040 1629 Pls
3045 1593 Pls
3051 1724 Pls
3055 1616 Pls
3061 1605 Pls
3067 1665 Pls
3072 1718 Pls
3077 1705 Pls
3082 2045 Pls
3088 1626 Pls
3093 1577 Pls
3098 1678 Pls
3104 1583 Pls
3108 1739 Pls
3114 1666 Pls
3120 1625 Pls
3124 1610 Pls
3130 1631 Pls
3135 1569 Pls
3140 1575 Pls
3146 1589 Pls
3151 1842 Pls
3156 1671 Pls
3161 1703 Pls
3167 1648 Pls
3172 1572 Pls
3177 1643 Pls
3183 1623 Pls
3188 1560 Pls
3193 2100 Pls
3199 1684 Pls
3204 1577 Pls
3209 1991 Pls
3214 1672 Pls
3220 1624 Pls
3225 1608 Pls
3230 1626 Pls
3236 1719 Pls
3240 1737 Pls
3246 1611 Pls
3252 1576 Pls
3256 1588 Pls
3262 1618 Pls
3267 1580 Pls
3272 1608 Pls
3278 1663 Pls
3283 1629 Pls
3289 1590 Pls
3293 1668 Pls
3299 1702 Pls
3305 1563 Pls
3309 1705 Pls
3315 1663 Pls
3320 1573 Pls
3325 1691 Pls
3331 2020 Pls
3336 1698 Pls
3341 1694 Pls
3346 1592 Pls
3352 1637 Pls
3357 1560 Pls
3362 1655 Pls
3368 1575 Pls
3372 1589 Pls
3378 1640 Pls
3384 1622 Pls
3388 1612 Pls
3394 1596 Pls
3399 1575 Pls
3405 1575 Pls
3410 1622 Pls
3415 1610 Pls
3421 1726 Pls
3425 1569 Pls
3431 1584 Pls
3437 1596 Pls
3441 1981 Pls
3447 1595 Pls
3457 1579 Pls
3463 1622 Pls
3468 1564 Pls
3473 1580 Pls
3478 1932 Pls
3484 1691 Pls
3489 1576 Pls
3494 1622 Pls
3500 1618 Pls
3505 1635 Pls
3510 1743 Pls
3516 1661 Pls
3521 1703 Pls
3526 1600 Pls
3531 1644 Pls
3537 1599 Pls
3542 1559 Pls
3547 1619 Pls
3553 1935 Pls
3557 1671 Pls
3563 1566 Pls
3569 1575 Pls
3573 1855 Pls
3579 1699 Pls
3584 1649 Pls
3589 1604 Pls
3595 1591 Pls
3600 1657 Pls
3605 1579 Pls
3610 1560 Pls
3616 2093 Pls
3621 1633 Pls
3626 1772 Pls
3632 1581 Pls
3637 1759 Pls
3642 1694 Pls
3648 1666 Pls
3653 1719 Pls
3658 1641 Pls
3663 1712 Pls
3669 1575 Pls
3674 1605 Pls
3679 1749 Pls
3685 1856 Pls
3689 1563 Pls
3695 1590 Pls
3701 1610 Pls
3705 1647 Pls
3711 1568 Pls
3716 1636 Pls
3721 1654 Pls
3727 1562 Pls
3732 1722 Pls
3738 1678 Pls
3742 1563 Pls
3748 1559 Pls
3754 1633 Pls
3758 1644 Pls
3764 1680 Pls
3769 1671 Pls
3774 1614 Pls
3780 1572 Pls
3785 1608 Pls
3790 1960 Pls
3795 1718 Pls
3801 1568 Pls
3806 1628 Pls
3811 1658 Pls
3817 1589 Pls
3821 1822 Pls
3827 1928 Pls
3833 1674 Pls
3838 1564 Pls
3843 1575 Pls
3848 1591 Pls
3854 1724 Pls
3859 1595 Pls
3864 1615 Pls
3870 1680 Pls
3874 2056 Pls
3880 1602 Pls
3886 3058 Pls
3890 1627 Pls
3896 1700 Pls
3901 1640 Pls
3906 1633 Pls
3912 1791 Pls
3917 1599 Pls
3922 1759 Pls
3927 1619 Pls
3933 1633 Pls
3938 1586 Pls
3943 2013 Pls
3949 1691 Pls
3954 1659 Pls
3959 1658 Pls
3965 1637 Pls
3970 1576 Pls
3975 1577 Pls
3980 1948 Pls
3986 1649 Pls
3991 1748 Pls
3996 2087 Pls
4002 1636 Pls
4006 1587 Pls
4012 1627 Pls
4018 1568 Pls
4022 1607 Pls
4028 1883 Pls
4033 1599 Pls
4038 1857 Pls
4044 1666 Pls
4049 1652 Pls
4054 2083 Pls
4059 1886 Pls
4065 1622 Pls
4071 1691 Pls
4075 1715 Pls
4081 1574 Pls
4086 1735 Pls
4091 1615 Pls
4097 1624 Pls
4102 1578 Pls
4107 1603 Pls
4112 1996 Pls
4118 1614 Pls
4123 1577 Pls
4128 1633 Pls
4134 1663 Pls
4138 1566 Pls
4144 1624 Pls
4150 1924 Pls
4154 2113 Pls
4160 1572 Pls
4165 1577 Pls
4171 1811 Pls
4176 1679 Pls
4181 1682 Pls
4187 1643 Pls
4191 1614 Pls
4197 1605 Pls
4203 1572 Pls
4207 1629 Pls
4213 2111 Pls
4218 1716 Pls
4223 1619 Pls
4229 1628 Pls
4234 1608 Pls
4239 1593 Pls
4244 1597 Pls
4250 1649 Pls
4255 1946 Pls
4260 1728 Pls
4266 1751 Pls
4271 1655 Pls
4276 1633 Pls
4282 1578 Pls
4287 1562 Pls
4292 3334 Pls
4297 1622 Pls
4303 1632 Pls
4308 1609 Pls
4313 1616 Pls
4319 1733 Pls
4323 1713 Pls
4329 1628 Pls
4335 1629 Pls
4339 1608 Pls
4345 1853 Pls
4350 1566 Pls
4355 1654 Pls
4361 1605 Pls
4366 1909 Pls
4371 1664 Pls
4376 1738 Pls
4382 1713 Pls
4387 1666 Pls
4392 1725 Pls
4398 2131 Pls
4403 1725 Pls
4408 1656 Pls
4414 1631 Pls
4419 1706 Pls
4424 1936 Pls
4429 1624 Pls
4435 1640 Pls
4440 1579 Pls
4445 1599 Pls
4451 1671 Pls
4455 1568 Pls
4461 1608 Pls
4467 1667 Pls
4471 1622 Pls
4477 1596 Pls
4482 1576 Pls
4487 1567 Pls
4493 1614 Pls
4498 1608 Pls
4504 1632 Pls
4508 1596 Pls
4514 1670 Pls
4520 1656 Pls
4524 1677 Pls
4530 1770 Pls
4535 1634 Pls
4540 1616 Pls
4546 1658 Pls
4551 1645 Pls
4556 1633 Pls
4561 1567 Pls
4567 1660 Pls
4572 1916 Pls
4577 1618 Pls
4583 1633 Pls
4587 1870 Pls
4593 1636 Pls
4599 1587 Pls
4604 1591 Pls
4609 1612 Pls
4614 1735 Pls
4620 1703 Pls
4625 1611 Pls
4630 1643 Pls
4636 1626 Pls
4640 1596 Pls
4646 1607 Pls
4652 1790 Pls
4656 1616 Pls
4662 1640 Pls
4667 1700 Pls
4672 1642 Pls
4678 1647 Pls
4683 1627 Pls
4688 1686 Pls
4693 1652 Pls
4699 1590 Pls
4704 1678 Pls
4709 1694 Pls
4715 1640 Pls
4720 1602 Pls
4725 1559 Pls
4731 1653 Pls
4736 1575 Pls
4741 1674 Pls
4746 1904 Pls
4752 1733 Pls
4757 1596 Pls
4762 1564 Pls
4768 1574 Pls
4772 1554 Pls
4778 1664 Pls
4784 1542 Pls
4788 1523 Pls
4794 1682 Pls
4799 1659 Pls
4804 1580 Pls
4810 1580 Pls
4815 1682 Pls
4820 1634 Pls
4825 1732 Pls
4831 1564 Pls
4837 1657 Pls
4841 1744 Pls
4847 1588 Pls
4852 1630 Pls
4857 1791 Pls
4863 1621 Pls
4868 2159 Pls
4873 1627 Pls
4878 1615 Pls
4884 1759 Pls
4889 1764 Pls
4894 1634 Pls
4900 1593 Pls
4904 1564 Pls
4910 1599 Pls
4916 1565 Pls
4920 1574 Pls
4926 1581 Pls
4931 1651 Pls
4937 1602 Pls
4942 1972 Pls
4947 1616 Pls
4953 1646 Pls
4957 2092 Pls
4963 1606 Pls
4969 1658 Pls
4973 1637 Pls
4979 1674 Pls
4984 1753 Pls
4989 1627 Pls
4995 1590 Pls
5000 2058 Pls
5005 1677 Pls
5010 1596 Pls
5016 1661 Pls
5021 1703 Pls
5026 1715 Pls
5032 1569 Pls
5036 1783 Pls
5042 1761 Pls
5048 1592 Pls
5053 1650 Pls
5058 1627 Pls
5063 1630 Pls
5069 1603 Pls
5074 1778 Pls
5079 1680 Pls
5085 1614 Pls
5089 1565 Pls
5095 1558 Pls
5101 1642 Pls
5105 1674 Pls
5111 1570 Pls
5116 1586 Pls
5121 1747 Pls
5127 2142 Pls
5132 1576 Pls
5137 1564 Pls
5142 1678 Pls
5148 1665 Pls
5153 1687 Pls
5158 1667 Pls
5164 1702 Pls
5169 1641 Pls
5174 1586 Pls
5180 1687 Pls
5185 1677 Pls
5190 1675 Pls
5195 1621 Pls
5201 1916 Pls
5206 1635 Pls
5211 1677 Pls
5217 1624 Pls
5221 1579 Pls
5227 1976 Pls
5233 1597 Pls
5237 1592 Pls
5243 1665 Pls
5248 1616 Pls
5253 1696 Pls
5259 1599 Pls
5264 1574 Pls
5270 1678 Pls
5274 1637 Pls
5280 1746 Pls
5286 1596 Pls
5290 1668 Pls
5296 1698 Pls
5301 1627 Pls
5306 1575 Pls
5312 1635 Pls
5317 1699 Pls
5322 1766 Pls
5327 1932 Pls
5333 1659 Pls
5338 1651 Pls
5343 1620 Pls
5349 1605 Pls
5353 1670 Pls
5359 2124 Pls
5365 1764 Pls
5369 1964 Pls
5375 1618 Pls
5380 2023 Pls
5386 1576 Pls
5391 1609 Pls
5396 1667 Pls
5402 1559 Pls
5406 1611 Pls
5412 1562 Pls
5418 1614 Pls
5422 1664 Pls
5428 1589 Pls
5433 1637 Pls
5438 1593 Pls
5444 1631 Pls
5449 1632 Pls
5454 1627 Pls
5459 1646 Pls
5465 1580 Pls
5470 1570 Pls
5475 1596 Pls
5481 1586 Pls
5486 1736 Pls
5491 1656 Pls
5497 1720 Pls
5502 1631 Pls
5507 1605 Pls
5512 1656 Pls
5518 1675 Pls
5523 1697 Pls
5528 1658 Pls
5534 1624 Pls
5538 1887 Pls
5544 1585 Pls
5550 1621 Pls
5554 1559 Pls
5560 1676 Pls
5565 1633 Pls
5570 1878 Pls
5576 1619 Pls
5581 1700 Pls
5586 1598 Pls
5591 1602 Pls
5597 1567 Pls
5602 1655 Pls
5607 1665 Pls
5613 1586 Pls
5618 1614 Pls
5623 1595 Pls
5629 1670 Pls
5634 1625 Pls
5639 1572 Pls
5644 1588 Pls
5650 1678 Pls
5655 1628 Pls
5660 1604 Pls
5666 1682 Pls
5670 1616 Pls
5676 1646 Pls
5682 1567 Pls
5686 1612 Pls
5692 1572 Pls
5697 1680 Pls
5702 1638 Pls
5708 1588 Pls
5713 1599 Pls
5719 1789 Pls
5723 1752 Pls
5729 1593 Pls
5735 1610 Pls
5739 1716 Pls
5745 1579 Pls
5750 2203 Pls
5755 1630 Pls
5761 1579 Pls
5766 1619 Pls
5771 1720 Pls
5776 1643 Pls
5782 1732 Pls
5787 1683 Pls
5792 1607 Pls
5798 1751 Pls
5802 1585 Pls
5808 1725 Pls
5814 1658 Pls
5819 1941 Pls
5824 1570 Pls
5829 1625 Pls
5835 3393 Pls
5840 1667 Pls
5845 1597 Pls
5851 1934 Pls
5855 1610 Pls
5861 1576 Pls
5867 1671 Pls
5871 1619 Pls
5877 1693 Pls
5882 1635 Pls
5887 1665 Pls
5893 1614 Pls
5898 1620 Pls
5903 1608 Pls
5908 1693 Pls
5914 1714 Pls
5919 1654 Pls
5924 1586 Pls
5930 1633 Pls
5935 1653 Pls
5940 1655 Pls
5946 1791 Pls
5951 1635 Pls
5956 1678 Pls
5961 1635 Pls
5967 1582 Pls
5972 1604 Pls
5977 1663 Pls
5983 1648 Pls
5987 1618 Pls
5993 1602 Pls
5999 1637 Pls
6003 1646 Pls
6009 1582 Pls
6014 1615 Pls
6019 1775 Pls
6025 1618 Pls
6030 1579 Pls
6035 1575 Pls
6040 1605 Pls
6046 1790 Pls
6052 1588 Pls
6056 1818 Pls
6062 1714 Pls
6067 1681 Pls
6072 1672 Pls
6078 1914 Pls
6083 1768 Pls
6088 2135 Pls
6093 1607 Pls
6099 1622 Pls
6104 1742 Pls
6109 1680 Pls
6115 1580 Pls
6119 1967 Pls
6125 1621 Pls
6131 1691 Pls
6135 1579 Pls
6141 1595 Pls
6146 1611 Pls
6152 1555 Pls
6157 2140 Pls
6162 1918 Pls
6168 1620 Pls
6172 1701 Pls
6178 1573 Pls
6184 1716 Pls
6188 1717 Pls
6194 1587 Pls
6199 1632 Pls
6204 1665 Pls
6210 1628 Pls
6215 1529 Pls
6220 1517 Pls
6225 1746 Pls
6231 1665 Pls
6236 1633 Pls
6241 1641 Pls
6247 1562 Pls
6252 1701 Pls
6257 1573 Pls
6263 1516 Pls
6268 1673 Pls
6273 1582 Pls
6278 1624 Pls
6284 1601 Pls
6289 1596 Pls
6294 1568 Pls
6300 1575 Pls
6304 1625 Pls
6310 1701 Pls
6316 1688 Pls
6320 1831 Pls
6326 2121 Pls
6331 1611 Pls
6336 1566 Pls
6342 1593 Pls
6347 1592 Pls
6352 1609 Pls
6357 1712 Pls
6363 1742 Pls
6368 1580 Pls
6373 1717 Pls
6379 1614 Pls
6384 1583 Pls
6389 1751 Pls
6395 1569 Pls
6400 1561 Pls
6405 1606 Pls
6410 1693 Pls
6416 2086 Pls
6421 1583 Pls
6426 1576 Pls
6432 1774 Pls
6436 1637 Pls
6442 1680 Pls
6448 1605 Pls
6452 1776 Pls
6458 1623 Pls
6463 1588 Pls
6468 1679 Pls
6474 1619 Pls
6479 1646 Pls
6485 1586 Pls
6489 1730 Pls
6495 1608 Pls
6501 1667 Pls
6505 1577 Pls
6511 1634 Pls
6516 1916 Pls
6521 1713 Pls
6527 1619 Pls
6532 1575 Pls
6537 1599 Pls
6542 1613 Pls
6548 1583 Pls
6553 1692 Pls
6558 1634 Pls
6564 1605 Pls
6568 1579 Pls
6574 1783 Pls
6580 1584 Pls
6585 1602 Pls
6590 1714 Pls
6595 1667 Pls
6601 1565 Pls
6606 1616 Pls
6611 1638 Pls
6617 1678 Pls
6621 1680 Pls
6627 1558 Pls
6633 1597 Pls
6637 1649 Pls
6643 2109 Pls
6648 1593 Pls
6653 1633 Pls
6659 1671 Pls
6664 1650 Pls
6669 1704 Pls
6674 1612 Pls
6680 1693 Pls
6685 1668 Pls
6690 1675 Pls
6696 1629 Pls
6701 1621 Pls
6706 2055 Pls
6712 1586 Pls
6717 1706 Pls
6722 1577 Pls
6727 1640 Pls
6733 2147 Pls
6738 1819 Pls
6743 2158 Pls
6749 1655 Pls
6753 1681 Pls
6759 1641 Pls
6765 1616 Pls
6769 1628 Pls
6775 1640 Pls
6780 1646 Pls
6785 1636 Pls
6791 1986 Pls
6796 1599 Pls
6801 1744 Pls
6806 1593 Pls
6812 1609 Pls
6818 1606 Pls
6822 1770 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
