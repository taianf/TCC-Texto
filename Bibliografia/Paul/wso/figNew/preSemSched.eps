%!PS-Adobe-2.0 EPSF-2.0
%%Title: preSemSched.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Tue May 13 11:22:53 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (preSemSched.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 13 11:22:53 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 594 M
63 0 V
5597 0 R
-63 0 V
1166 1640 M
63 0 V
5597 0 R
-63 0 V
1166 2685 M
63 0 V
5597 0 R
-63 0 V
1166 3731 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1167 841 Pls
1172 860 Pls
1177 845 Pls
1182 874 Pls
1188 849 Pls
1193 849 Pls
1198 849 Pls
1204 851 Pls
1208 847 Pls
1214 843 Pls
1220 847 Pls
1224 845 Pls
1230 843 Pls
1235 845 Pls
1241 849 Pls
1246 853 Pls
1251 845 Pls
1257 841 Pls
1261 849 Pls
1267 845 Pls
1273 855 Pls
1277 868 Pls
1283 841 Pls
1288 853 Pls
1293 841 Pls
1299 845 Pls
1304 843 Pls
1309 847 Pls
1314 839 Pls
1320 847 Pls
1325 841 Pls
1330 849 Pls
1336 849 Pls
1341 843 Pls
1346 845 Pls
1352 855 Pls
1357 847 Pls
1362 841 Pls
1367 847 Pls
1373 878 Pls
1378 845 Pls
1383 843 Pls
1389 841 Pls
1393 845 Pls
1399 847 Pls
1405 845 Pls
1409 843 Pls
1415 845 Pls
1420 847 Pls
1425 847 Pls
1431 851 Pls
1436 847 Pls
1441 847 Pls
1446 845 Pls
1452 847 Pls
1457 855 Pls
1462 843 Pls
1468 872 Pls
1473 845 Pls
1478 845 Pls
1484 853 Pls
1489 845 Pls
1494 839 Pls
1499 851 Pls
1505 845 Pls
1510 857 Pls
1515 847 Pls
1521 845 Pls
1525 847 Pls
1531 845 Pls
1537 849 Pls
1541 847 Pls
1547 845 Pls
1552 845 Pls
1557 845 Pls
1563 864 Pls
1568 841 Pls
1574 843 Pls
1578 847 Pls
1584 851 Pls
1590 851 Pls
1594 845 Pls
1600 841 Pls
1605 847 Pls
1610 845 Pls
1616 847 Pls
1621 845 Pls
1626 851 Pls
1631 845 Pls
1637 841 Pls
1642 845 Pls
1647 845 Pls
1653 878 Pls
1657 880 Pls
1663 851 Pls
1669 849 Pls
1674 857 Pls
1679 851 Pls
1684 847 Pls
1690 847 Pls
1695 841 Pls
1700 843 Pls
1706 849 Pls
1710 851 Pls
1716 845 Pls
1722 843 Pls
1726 847 Pls
1732 841 Pls
1737 841 Pls
1742 851 Pls
1748 851 Pls
1753 853 Pls
1753 870 Pls
1758 847 Pls
1763 843 Pls
1769 849 Pls
1774 847 Pls
1779 843 Pls
1785 845 Pls
1790 853 Pls
1795 843 Pls
1801 843 Pls
1806 845 Pls
1811 847 Pls
1816 853 Pls
1822 849 Pls
1827 847 Pls
1832 853 Pls
1838 841 Pls
1842 864 Pls
1847 847 Pls
1848 843 Pls
1854 849 Pls
1858 841 Pls
1864 851 Pls
1869 853 Pls
1874 839 Pls
1880 839 Pls
1885 847 Pls
1890 853 Pls
1895 853 Pls
1901 843 Pls
1907 845 Pls
1911 851 Pls
1917 845 Pls
1922 847 Pls
1927 847 Pls
1933 847 Pls
1938 868 Pls
1941 843 Pls
1943 843 Pls
1948 847 Pls
1954 857 Pls
1959 845 Pls
1964 845 Pls
1970 849 Pls
1974 843 Pls
1980 843 Pls
1986 843 Pls
1990 851 Pls
1996 843 Pls
2001 845 Pls
2007 843 Pls
2012 845 Pls
2017 847 Pls
2023 843 Pls
2027 841 Pls
2033 874 Pls
2039 841 Pls
2043 839 Pls
2049 855 Pls
2054 843 Pls
2059 849 Pls
2065 843 Pls
2070 845 Pls
2075 853 Pls
2080 847 Pls
2086 845 Pls
2091 845 Pls
2096 845 Pls
2102 845 Pls
2107 843 Pls
2112 847 Pls
2118 853 Pls
2123 853 Pls
2128 857 Pls
2133 862 Pls
2139 845 Pls
2144 845 Pls
2149 847 Pls
2155 847 Pls
2159 849 Pls
2165 841 Pls
2171 841 Pls
2175 849 Pls
2181 845 Pls
2186 843 Pls
2191 845 Pls
2197 843 Pls
2202 853 Pls
2207 851 Pls
2212 849 Pls
2218 845 Pls
2223 868 Pls
2228 845 Pls
2234 847 Pls
2239 847 Pls
2244 849 Pls
2250 843 Pls
2255 845 Pls
2260 862 Pls
2265 845 Pls
2271 843 Pls
2276 847 Pls
2281 845 Pls
2287 847 Pls
2291 839 Pls
2297 843 Pls
2303 845 Pls
2307 841 Pls
2313 853 Pls
2318 878 Pls
2323 843 Pls
2329 847 Pls
2334 851 Pls
2340 843 Pls
2344 845 Pls
2350 843 Pls
2356 843 Pls
2360 845 Pls
2366 851 Pls
2371 857 Pls
2376 845 Pls
2382 847 Pls
2387 845 Pls
2392 845 Pls
2397 841 Pls
2403 845 Pls
2408 843 Pls
2413 872 Pls
2419 847 Pls
2423 853 Pls
2429 853 Pls
2435 847 Pls
2440 845 Pls
2445 851 Pls
2450 843 Pls
2456 862 Pls
2461 849 Pls
2466 843 Pls
2472 847 Pls
2476 847 Pls
2482 847 Pls
2488 847 Pls
2492 849 Pls
2498 851 Pls
2503 880 Pls
2505 847 Pls
2508 843 Pls
2514 849 Pls
2519 851 Pls
2524 843 Pls
2529 849 Pls
2535 849 Pls
2540 841 Pls
2545 843 Pls
2551 839 Pls
2556 845 Pls
2561 847 Pls
2567 847 Pls
2572 845 Pls
2577 851 Pls
2582 839 Pls
2588 845 Pls
2593 847 Pls
2598 883 Pls
2604 851 Pls
2608 849 Pls
2614 864 Pls
2620 849 Pls
2624 845 Pls
2630 841 Pls
2635 849 Pls
2640 843 Pls
2646 843 Pls
2651 843 Pls
2656 845 Pls
2661 847 Pls
2667 849 Pls
2673 845 Pls
2677 853 Pls
2683 855 Pls
2688 845 Pls
2693 868 Pls
2696 870 Pls
2699 853 Pls
2704 839 Pls
2709 845 Pls
2714 843 Pls
2720 849 Pls
2725 847 Pls
2730 847 Pls
2736 845 Pls
2740 855 Pls
2746 843 Pls
2752 847 Pls
2756 845 Pls
2762 845 Pls
2767 843 Pls
2772 845 Pls
2778 847 Pls
2783 849 Pls
2789 878 Pls
2790 843 Pls
2793 853 Pls
2799 847 Pls
2805 849 Pls
2809 843 Pls
2815 847 Pls
2820 864 Pls
2825 860 Pls
2831 843 Pls
2836 847 Pls
2841 847 Pls
2846 847 Pls
2852 841 Pls
2857 841 Pls
2862 855 Pls
2868 845 Pls
2872 843 Pls
2878 845 Pls
2884 864 Pls
2885 849 Pls
2889 845 Pls
2894 855 Pls
2899 862 Pls
2905 845 Pls
2910 845 Pls
2915 843 Pls
2921 841 Pls
2925 841 Pls
2931 845 Pls
2937 849 Pls
2941 851 Pls
2947 845 Pls
2952 845 Pls
2957 843 Pls
2963 845 Pls
2968 839 Pls
2973 841 Pls
2978 880 Pls
2984 851 Pls
2989 845 Pls
2994 841 Pls
3000 843 Pls
3005 849 Pls
3010 845 Pls
3016 843 Pls
3021 847 Pls
3026 853 Pls
3031 851 Pls
3037 843 Pls
3042 847 Pls
3047 847 Pls
3053 849 Pls
3057 851 Pls
3063 845 Pls
3069 847 Pls
3073 880 Pls
3079 839 Pls
3084 849 Pls
3089 845 Pls
3095 866 Pls
3100 843 Pls
3105 843 Pls
3110 853 Pls
3116 847 Pls
3122 847 Pls
3126 845 Pls
3132 843 Pls
3137 851 Pls
3142 843 Pls
3148 839 Pls
3153 855 Pls
3158 841 Pls
3163 866 Pls
3169 845 Pls
3174 853 Pls
3179 849 Pls
3185 841 Pls
3189 841 Pls
3195 849 Pls
3201 843 Pls
3205 851 Pls
3211 847 Pls
3216 857 Pls
3222 845 Pls
3227 845 Pls
3232 849 Pls
3238 860 Pls
3242 849 Pls
3248 841 Pls
3254 851 Pls
3258 878 Pls
3264 847 Pls
3270 847 Pls
3274 843 Pls
3280 862 Pls
3286 845 Pls
3290 847 Pls
3296 855 Pls
3301 843 Pls
3306 845 Pls
3312 847 Pls
3317 847 Pls
3322 853 Pls
3327 847 Pls
3333 843 Pls
3338 847 Pls
3343 845 Pls
3349 849 Pls
3354 878 Pls
3359 845 Pls
3365 853 Pls
3370 855 Pls
3375 851 Pls
3380 847 Pls
3386 847 Pls
3391 847 Pls
3396 841 Pls
3402 847 Pls
3406 855 Pls
3412 849 Pls
3417 845 Pls
3422 849 Pls
3426 849 Pls
3431 841 Pls
3437 847 Pls
3441 849 Pls
3446 872 Pls
3451 851 Pls
3455 843 Pls
3461 845 Pls
3466 847 Pls
3471 841 Pls
3475 839 Pls
3480 841 Pls
3486 847 Pls
3490 845 Pls
3495 843 Pls
3500 847 Pls
3505 843 Pls
3510 839 Pls
3515 841 Pls
3520 841 Pls
3524 853 Pls
3529 849 Pls
3535 843 Pls
3539 849 Pls
3544 872 Pls
3549 853 Pls
3554 845 Pls
3559 849 Pls
3564 851 Pls
3569 845 Pls
3573 862 Pls
3578 841 Pls
3584 845 Pls
3588 849 Pls
3593 841 Pls
3598 851 Pls
3603 855 Pls
3608 841 Pls
3613 841 Pls
3618 845 Pls
3622 845 Pls
3627 847 Pls
3633 845 Pls
3638 874 Pls
3642 847 Pls
3647 847 Pls
3652 841 Pls
3657 847 Pls
3662 847 Pls
3667 845 Pls
3671 851 Pls
3676 849 Pls
3682 851 Pls
3687 843 Pls
3691 841 Pls
3696 847 Pls
3701 847 Pls
3706 843 Pls
3711 843 Pls
3716 845 Pls
3721 851 Pls
3725 845 Pls
3731 878 Pls
3734 851 Pls
3736 843 Pls
3740 851 Pls
3745 847 Pls
3750 849 Pls
3755 853 Pls
3760 841 Pls
3765 847 Pls
3770 845 Pls
3774 847 Pls
3780 845 Pls
3785 843 Pls
3789 845 Pls
3794 851 Pls
3799 845 Pls
3805 843 Pls
3809 843 Pls
3814 853 Pls
3819 841 Pls
3823 876 Pls
3828 847 Pls
3829 855 Pls
3834 845 Pls
3838 853 Pls
3843 845 Pls
3848 847 Pls
3854 843 Pls
3858 847 Pls
3863 845 Pls
3868 853 Pls
3872 849 Pls
3878 845 Pls
3883 847 Pls
3888 845 Pls
3892 845 Pls
3897 841 Pls
3903 845 Pls
3907 849 Pls
3912 841 Pls
3917 845 Pls
3921 866 Pls
3922 849 Pls
3927 849 Pls
3932 847 Pls
3937 849 Pls
3941 849 Pls
3946 843 Pls
3952 849 Pls
3956 845 Pls
3961 843 Pls
3966 845 Pls
3971 847 Pls
3976 847 Pls
3981 855 Pls
3986 847 Pls
3990 837 Pls
3995 841 Pls
4001 845 Pls
4005 849 Pls
4010 845 Pls
4015 878 Pls
4020 845 Pls
4025 853 Pls
4030 843 Pls
4035 845 Pls
4039 849 Pls
4044 845 Pls
4050 843 Pls
4054 864 Pls
4059 855 Pls
4064 847 Pls
4069 843 Pls
4074 847 Pls
4079 841 Pls
4084 845 Pls
4088 849 Pls
4093 841 Pls
4099 849 Pls
4104 847 Pls
4108 868 Pls
4113 855 Pls
4118 845 Pls
4123 849 Pls
4128 845 Pls
4133 847 Pls
4138 851 Pls
4142 841 Pls
4148 843 Pls
4153 843 Pls
4157 847 Pls
4162 841 Pls
4167 845 Pls
4172 849 Pls
4177 853 Pls
4182 847 Pls
4187 845 Pls
4191 845 Pls
4197 847 Pls
4202 878 Pls
4206 847 Pls
4211 841 Pls
4216 851 Pls
4221 847 Pls
4226 845 Pls
4231 847 Pls
4236 843 Pls
4240 849 Pls
4246 857 Pls
4251 851 Pls
4255 851 Pls
4260 847 Pls
4265 845 Pls
4271 847 Pls
4275 845 Pls
4280 847 Pls
4285 845 Pls
4289 845 Pls
4295 851 Pls
4300 868 Pls
4304 847 Pls
4309 849 Pls
4314 849 Pls
4320 851 Pls
4324 843 Pls
4329 841 Pls
4334 853 Pls
4338 847 Pls
4344 841 Pls
4349 849 Pls
4354 843 Pls
4358 849 Pls
4363 843 Pls
4369 845 Pls
4373 849 Pls
4378 849 Pls
4383 845 Pls
4387 845 Pls
4393 866 Pls
4393 847 Pls
4398 841 Pls
4403 847 Pls
4407 851 Pls
4412 845 Pls
4418 847 Pls
4422 845 Pls
4427 849 Pls
4432 847 Pls
4437 841 Pls
4442 845 Pls
4447 847 Pls
4452 847 Pls
4456 845 Pls
4461 857 Pls
4467 843 Pls
4471 839 Pls
4476 845 Pls
4481 845 Pls
4486 876 Pls
4487 843 Pls
4491 845 Pls
4496 845 Pls
4501 843 Pls
4505 849 Pls
4510 843 Pls
4516 841 Pls
4520 847 Pls
4525 849 Pls
4530 870 Pls
4535 845 Pls
4540 845 Pls
4545 845 Pls
4550 845 Pls
4554 845 Pls
4559 853 Pls
4565 841 Pls
4570 843 Pls
4574 845 Pls
4579 870 Pls
4582 849 Pls
4584 843 Pls
4589 847 Pls
4594 849 Pls
4599 845 Pls
4604 845 Pls
4608 843 Pls
4614 847 Pls
4620 843 Pls
4624 845 Pls
4630 843 Pls
4635 849 Pls
4640 845 Pls
4646 845 Pls
4651 849 Pls
4656 845 Pls
4661 841 Pls
4667 841 Pls
4672 862 Pls
4677 845 Pls
4683 851 Pls
4687 845 Pls
4693 851 Pls
4699 843 Pls
4704 845 Pls
4709 841 Pls
4714 845 Pls
4720 849 Pls
4725 847 Pls
4730 847 Pls
4736 845 Pls
4740 847 Pls
4746 847 Pls
4752 845 Pls
4756 847 Pls
4762 855 Pls
4767 862 Pls
4772 839 Pls
4778 841 Pls
4783 855 Pls
4788 843 Pls
4793 847 Pls
4799 843 Pls
4804 849 Pls
4809 845 Pls
4815 845 Pls
4820 845 Pls
4825 851 Pls
4831 847 Pls
4836 853 Pls
4841 843 Pls
4846 849 Pls
4852 845 Pls
4857 843 Pls
4862 864 Pls
4868 849 Pls
4872 843 Pls
4878 843 Pls
4884 849 Pls
4888 849 Pls
4894 843 Pls
4899 841 Pls
4904 843 Pls
4910 845 Pls
4915 851 Pls
4920 847 Pls
4925 849 Pls
4931 855 Pls
4937 843 Pls
4941 853 Pls
4947 849 Pls
4952 847 Pls
4957 874 Pls
4963 841 Pls
4968 849 Pls
4973 853 Pls
4978 845 Pls
4984 847 Pls
4989 847 Pls
4994 853 Pls
5000 847 Pls
5004 843 Pls
5010 862 Pls
5016 851 Pls
5020 849 Pls
5026 847 Pls
5031 845 Pls
5036 851 Pls
5042 849 Pls
5047 843 Pls
5053 857 Pls
5053 847 Pls
5057 849 Pls
5063 839 Pls
5069 851 Pls
5073 843 Pls
5079 845 Pls
5084 843 Pls
5089 839 Pls
5095 849 Pls
5100 841 Pls
5105 839 Pls
5110 841 Pls
5116 843 Pls
5121 849 Pls
5126 843 Pls
5132 843 Pls
5136 851 Pls
5142 849 Pls
5148 876 Pls
5148 847 Pls
5153 853 Pls
5158 845 Pls
5163 847 Pls
5169 845 Pls
5174 849 Pls
5179 847 Pls
5185 847 Pls
5189 849 Pls
5195 845 Pls
5201 839 Pls
5205 845 Pls
5211 847 Pls
5216 855 Pls
5221 857 Pls
5227 845 Pls
5232 843 Pls
5237 845 Pls
5242 885 Pls
5248 847 Pls
5253 847 Pls
5258 851 Pls
5264 841 Pls
5269 841 Pls
5274 845 Pls
5280 849 Pls
5285 843 Pls
5290 845 Pls
5295 841 Pls
5301 849 Pls
5306 847 Pls
5311 847 Pls
5317 845 Pls
5321 847 Pls
5327 847 Pls
5333 864 Pls
5337 845 Pls
5343 849 Pls
5348 847 Pls
5353 839 Pls
5359 845 Pls
5364 847 Pls
5369 843 Pls
5374 841 Pls
5380 851 Pls
5386 855 Pls
5390 843 Pls
5396 847 Pls
5401 843 Pls
5406 843 Pls
5412 849 Pls
5417 843 Pls
5422 849 Pls
5427 878 Pls
5433 843 Pls
5438 845 Pls
5443 843 Pls
5449 845 Pls
5453 849 Pls
5459 853 Pls
5465 849 Pls
5469 857 Pls
5475 847 Pls
5480 843 Pls
5486 849 Pls
5491 862 Pls
5496 847 Pls
5502 839 Pls
5506 851 Pls
5512 845 Pls
5518 845 Pls
5522 866 Pls
5528 841 Pls
5533 845 Pls
5538 855 Pls
5544 847 Pls
5549 841 Pls
5554 853 Pls
5559 839 Pls
5565 845 Pls
5570 843 Pls
5575 849 Pls
5581 847 Pls
5586 843 Pls
5591 845 Pls
5597 853 Pls
5602 845 Pls
5607 841 Pls
5612 841 Pls
5618 874 Pls
5623 853 Pls
5628 843 Pls
5634 847 Pls
5638 851 Pls
5644 849 Pls
5650 845 Pls
5654 851 Pls
5660 845 Pls
5665 847 Pls
5670 841 Pls
5676 845 Pls
5681 851 Pls
5686 845 Pls
5691 843 Pls
5697 851 Pls
5702 847 Pls
5707 841 Pls
5713 878 Pls
5718 845 Pls
5723 849 Pls
5729 849 Pls
5734 847 Pls
5739 841 Pls
5744 841 Pls
5750 847 Pls
5755 849 Pls
5760 847 Pls
5766 845 Pls
5770 847 Pls
5776 851 Pls
5782 845 Pls
5786 843 Pls
5792 847 Pls
5797 843 Pls
5802 841 Pls
5808 876 Pls
5813 851 Pls
5819 839 Pls
5823 847 Pls
5829 845 Pls
5835 849 Pls
5839 841 Pls
5845 845 Pls
5850 849 Pls
5855 849 Pls
5861 853 Pls
5866 845 Pls
5871 845 Pls
5876 847 Pls
5882 845 Pls
5887 845 Pls
5892 851 Pls
5898 845 Pls
5902 878 Pls
5908 841 Pls
5914 847 Pls
5919 849 Pls
5924 841 Pls
5929 845 Pls
5935 853 Pls
5940 849 Pls
5945 843 Pls
5951 843 Pls
5955 845 Pls
5961 845 Pls
5967 845 Pls
5971 868 Pls
5977 853 Pls
5982 847 Pls
5987 845 Pls
5993 874 Pls
5998 845 Pls
6003 853 Pls
6008 851 Pls
6014 851 Pls
6019 851 Pls
6024 845 Pls
6030 841 Pls
6035 843 Pls
6040 847 Pls
6046 841 Pls
6051 845 Pls
6056 849 Pls
6061 851 Pls
6067 847 Pls
6072 849 Pls
6077 841 Pls
6083 845 Pls
6087 878 Pls
6093 853 Pls
6099 849 Pls
6103 851 Pls
6109 847 Pls
6114 845 Pls
6119 847 Pls
6125 843 Pls
6130 845 Pls
6135 849 Pls
6140 845 Pls
6146 857 Pls
6152 843 Pls
6156 845 Pls
6162 847 Pls
6167 841 Pls
6172 853 Pls
6178 841 Pls
6183 876 Pls
6188 845 Pls
6193 845 Pls
6199 853 Pls
6204 849 Pls
6209 843 Pls
6215 843 Pls
6219 847 Pls
6225 843 Pls
6231 853 Pls
6235 845 Pls
6241 843 Pls
6246 843 Pls
6252 849 Pls
6257 845 Pls
6262 847 Pls
6268 847 Pls
6272 851 Pls
6278 883 Pls
6284 843 Pls
6288 847 Pls
6294 847 Pls
6299 849 Pls
6304 843 Pls
6310 847 Pls
6315 849 Pls
6320 853 Pls
6325 851 Pls
6331 853 Pls
6336 849 Pls
6341 847 Pls
6347 845 Pls
6352 841 Pls
6357 853 Pls
6363 849 Pls
6368 843 Pls
6373 870 Pls
6374 845 Pls
6378 845 Pls
6384 847 Pls
6389 845 Pls
6394 851 Pls
6400 847 Pls
6404 851 Pls
6410 845 Pls
6416 847 Pls
6420 847 Pls
6426 849 Pls
6431 849 Pls
6436 847 Pls
6442 849 Pls
6447 847 Pls
6452 857 Pls
6457 841 Pls
6463 847 Pls
6468 853 Pls
6468 847 Pls
6473 857 Pls
6479 853 Pls
6484 845 Pls
6489 845 Pls
6495 843 Pls
6500 847 Pls
6505 847 Pls
6510 847 Pls
6516 851 Pls
6521 845 Pls
6526 849 Pls
6532 845 Pls
6536 845 Pls
6542 841 Pls
6548 847 Pls
6552 843 Pls
6558 851 Pls
6563 878 Pls
6568 847 Pls
6574 849 Pls
6579 849 Pls
6585 845 Pls
6589 843 Pls
6595 847 Pls
6601 849 Pls
6605 843 Pls
6611 847 Pls
6616 845 Pls
6621 845 Pls
6627 845 Pls
6632 847 Pls
6637 847 Pls
6642 857 Pls
6648 847 Pls
6653 866 Pls
6658 841 Pls
6664 845 Pls
6668 845 Pls
6674 845 Pls
6680 843 Pls
6685 853 Pls
6690 847 Pls
6695 845 Pls
6701 849 Pls
6706 843 Pls
6711 845 Pls
6717 853 Pls
6721 845 Pls
6727 853 Pls
6733 847 Pls
6737 851 Pls
6743 849 Pls
6748 874 Pls
6753 843 Pls
6759 849 Pls
6764 845 Pls
6769 851 Pls
6774 849 Pls
6780 845 Pls
6785 843 Pls
6790 847 Pls
6796 847 Pls
6801 841 Pls
6806 847 Pls
6812 849 Pls
6817 845 Pls
6822 841 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
