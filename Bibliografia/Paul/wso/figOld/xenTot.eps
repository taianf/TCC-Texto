%!PS-Adobe-2.0 EPSF-2.0
%%Title: xenTot.tex
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu Mar 27 16:46:54 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (xenTot.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Paul Regnier,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 27 16:46:54 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1518 660 M
63 0 V
5245 0 R
-63 0 V
1518 1483 M
63 0 V
5245 0 R
-63 0 V
1518 2306 M
63 0 V
5245 0 R
-63 0 V
1518 3130 M
63 0 V
5245 0 R
-63 0 V
1518 3953 M
63 0 V
5245 0 R
-63 0 V
1518 4776 M
63 0 V
5245 0 R
-63 0 V
1518 660 M
0 63 V
0 4053 R
0 -63 V
2403 660 M
0 63 V
0 4053 R
0 -63 V
3287 660 M
0 63 V
0 4053 R
0 -63 V
4172 660 M
0 63 V
0 4053 R
0 -63 V
5057 660 M
0 63 V
0 4053 R
0 -63 V
5941 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
stroke
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LTb
1518 1072 Pls
1523 1075 Pls
1528 1070 Pls
1533 1135 Pls
1538 1093 Pls
1543 1085 Pls
1548 1083 Pls
1553 1058 Pls
1558 1131 Pls
1563 1259 Pls
1568 1109 Pls
1573 1086 Pls
1577 1079 Pls
1583 1062 Pls
1588 1093 Pls
1592 1088 Pls
1598 1056 Pls
1602 1101 Pls
1607 1075 Pls
1613 1083 Pls
1617 1074 Pls
1622 1079 Pls
1627 1100 Pls
1632 1077 Pls
1637 1090 Pls
1642 1086 Pls
1647 1091 Pls
1652 1101 Pls
1657 1054 Pls
1662 1076 Pls
1667 1110 Pls
1672 1085 Pls
1676 1098 Pls
1682 1094 Pls
1687 1072 Pls
1691 1062 Pls
1697 1077 Pls
1701 1066 Pls
1706 1097 Pls
1712 1095 Pls
1716 1102 Pls
1721 1072 Pls
1726 1101 Pls
1731 1137 Pls
1737 1116 Pls
1741 1084 Pls
1746 1089 Pls
1751 1105 Pls
1756 1075 Pls
1761 1098 Pls
1766 1114 Pls
1771 1094 Pls
1775 1100 Pls
1781 1093 Pls
1786 1064 Pls
1790 1066 Pls
1796 1080 Pls
1800 1084 Pls
1806 1085 Pls
1811 1071 Pls
1815 1069 Pls
1821 1066 Pls
1825 1281 Pls
1830 1091 Pls
1836 1084 Pls
1840 1120 Pls
1845 1109 Pls
1850 1075 Pls
1855 1098 Pls
1860 1095 Pls
1865 1112 Pls
1870 1082 Pls
1875 1071 Pls
1880 1082 Pls
1885 1080 Pls
1890 1092 Pls
1895 1089 Pls
1899 1109 Pls
1905 1086 Pls
1910 1056 Pls
1914 1072 Pls
1920 1075 Pls
1924 1102 Pls
1929 1091 Pls
1935 1096 Pls
1939 1095 Pls
1944 1073 Pls
1949 1091 Pls
1954 1075 Pls
1959 1093 Pls
1964 1097 Pls
1969 1098 Pls
1974 1079 Pls
1979 1096 Pls
1984 1078 Pls
1989 1097 Pls
1994 1092 Pls
1998 1060 Pls
2004 1056 Pls
2009 1086 Pls
2013 1089 Pls
2019 1073 Pls
2023 1099 Pls
2028 1080 Pls
2034 1089 Pls
2038 1068 Pls
2043 1061 Pls
2048 1318 Pls
2053 1088 Pls
2059 1093 Pls
2063 1093 Pls
2068 1097 Pls
2073 1059 Pls
2078 1096 Pls
2083 1109 Pls
2088 1113 Pls
2093 1089 Pls
2097 1058 Pls
2103 1067 Pls
2108 1074 Pls
2112 1081 Pls
2118 1114 Pls
2122 1091 Pls
2128 1089 Pls
2133 1112 Pls
2137 1063 Pls
2143 1100 Pls
2147 1086 Pls
2152 1089 Pls
2158 1070 Pls
2162 1078 Pls
2167 1074 Pls
2172 1067 Pls
2177 1093 Pls
2182 1091 Pls
2187 1077 Pls
2192 1066 Pls
2197 1065 Pls
2202 1074 Pls
2207 1090 Pls
2212 1084 Pls
2217 1105 Pls
2221 1088 Pls
2227 1107 Pls
2232 1077 Pls
2236 1068 Pls
2242 1088 Pls
2246 1080 Pls
2251 1084 Pls
2257 1063 Pls
2261 1116 Pls
2266 1054 Pls
2271 1091 Pls
2276 1079 Pls
2281 1093 Pls
2286 1071 Pls
2291 1089 Pls
2296 1099 Pls
2301 1077 Pls
2306 1084 Pls
2311 1075 Pls
2316 1084 Pls
2320 1078 Pls
2326 1090 Pls
2331 1086 Pls
2335 1203 Pls
2341 1088 Pls
2345 1079 Pls
2350 1068 Pls
2356 1110 Pls
2360 1109 Pls
2366 1107 Pls
2370 1114 Pls
2375 1117 Pls
2381 1064 Pls
2385 1077 Pls
2390 1079 Pls
2395 1060 Pls
2400 1123 Pls
2405 1104 Pls
2410 1089 Pls
2415 1079 Pls
2419 1082 Pls
2425 1102 Pls
2430 1074 Pls
2435 1111 Pls
2440 1101 Pls
2444 1100 Pls
2450 1079 Pls
2455 1068 Pls
2459 1096 Pls
2465 1058 Pls
2469 1108 Pls
2474 1096 Pls
2480 1127 Pls
2484 1120 Pls
2489 1096 Pls
2494 1076 Pls
2499 1102 Pls
2504 1072 Pls
2509 1077 Pls
2514 1092 Pls
2519 1104 Pls
2524 1084 Pls
2529 1075 Pls
2534 1070 Pls
2539 1074 Pls
2543 1088 Pls
2549 1093 Pls
2554 1085 Pls
2558 1085 Pls
2564 1075 Pls
2568 1083 Pls
2573 1092 Pls
2579 1104 Pls
2583 1087 Pls
2588 1069 Pls
2593 1087 Pls
2598 1070 Pls
2603 1076 Pls
2608 1070 Pls
2613 1084 Pls
2618 1095 Pls
2623 1085 Pls
2628 1058 Pls
2633 1071 Pls
2638 1088 Pls
2642 1078 Pls
2648 1074 Pls
2653 1143 Pls
2657 1086 Pls
2663 1074 Pls
2667 1091 Pls
2672 1100 Pls
2678 1101 Pls
2682 1086 Pls
2688 1286 Pls
2692 1068 Pls
2697 1082 Pls
2703 1056 Pls
2707 1092 Pls
2712 1068 Pls
2717 1095 Pls
2722 1078 Pls
2727 1042 Pls
2732 1058 Pls
2737 1089 Pls
2741 1065 Pls
2747 1088 Pls
2752 1079 Pls
2757 1083 Pls
2762 1084 Pls
2766 1064 Pls
2772 1086 Pls
2777 1119 Pls
2781 1112 Pls
2787 1100 Pls
2791 1120 Pls
2796 1085 Pls
2802 1091 Pls
2806 1056 Pls
2811 1089 Pls
2816 1089 Pls
2821 1113 Pls
2826 1093 Pls
2831 1074 Pls
2836 1086 Pls
2841 1056 Pls
2846 1087 Pls
2851 1189 Pls
2856 1087 Pls
2861 1121 Pls
2865 1077 Pls
2871 1074 Pls
2876 1059 Pls
2880 1071 Pls
2886 1096 Pls
2890 1108 Pls
2895 1090 Pls
2901 1069 Pls
2905 1063 Pls
2910 1099 Pls
2915 1088 Pls
2920 1106 Pls
2926 1083 Pls
2930 1100 Pls
2935 1079 Pls
2940 1114 Pls
2945 1092 Pls
2950 1080 Pls
2955 1054 Pls
2960 1065 Pls
2964 1120 Pls
2970 1112 Pls
2975 1098 Pls
2979 1098 Pls
2985 1089 Pls
2989 1078 Pls
2995 1088 Pls
3000 1063 Pls
3004 1081 Pls
3010 1100 Pls
3014 1096 Pls
3019 1073 Pls
3025 1063 Pls
3029 1093 Pls
3034 1093 Pls
3039 1099 Pls
3044 1099 Pls
3049 1092 Pls
3054 1104 Pls
3059 1082 Pls
3064 1086 Pls
3069 1088 Pls
3074 1074 Pls
3079 1109 Pls
3084 1085 Pls
3088 1079 Pls
3094 1105 Pls
3099 1088 Pls
3103 1058 Pls
3109 1086 Pls
3113 1120 Pls
3118 1073 Pls
3124 1110 Pls
3128 1108 Pls
3133 1097 Pls
3138 1090 Pls
3143 1070 Pls
3148 1119 Pls
3153 1108 Pls
3158 1119 Pls
3163 1053 Pls
3168 1094 Pls
3173 1091 Pls
3178 1069 Pls
3183 1064 Pls
3187 1107 Pls
3193 1064 Pls
3198 1115 Pls
3202 1085 Pls
3208 1107 Pls
3212 1093 Pls
3217 1107 Pls
3223 1083 Pls
3227 1119 Pls
3232 1093 Pls
3237 1095 Pls
3242 1099 Pls
3248 1108 Pls
3252 1097 Pls
3257 1064 Pls
3262 1092 Pls
3267 1100 Pls
3272 1100 Pls
3277 1080 Pls
3282 1107 Pls
3286 1108 Pls
3292 1084 Pls
3297 1058 Pls
3301 1098 Pls
3307 1106 Pls
3311 1069 Pls
3317 1063 Pls
3322 1090 Pls
3326 1115 Pls
3332 1095 Pls
3336 1095 Pls
3341 1093 Pls
3347 1087 Pls
3351 1087 Pls
3356 1083 Pls
3361 1091 Pls
3366 1076 Pls
3371 1057 Pls
3376 1079 Pls
3381 1059 Pls
3386 1107 Pls
3391 1098 Pls
3396 1084 Pls
3401 1100 Pls
3406 1081 Pls
3410 1098 Pls
3416 1069 Pls
3421 1088 Pls
3425 1063 Pls
3431 1097 Pls
3435 1105 Pls
3440 1070 Pls
3446 1102 Pls
3450 1093 Pls
3455 1075 Pls
3460 1117 Pls
3465 1073 Pls
3470 1293 Pls
3475 1112 Pls
3480 1096 Pls
3485 1094 Pls
3490 1094 Pls
3495 1066 Pls
3500 1070 Pls
3505 1115 Pls
3509 1091 Pls
3515 1093 Pls
3520 1104 Pls
3524 1107 Pls
3530 1074 Pls
3534 1063 Pls
3539 1083 Pls
3545 1098 Pls
3549 1072 Pls
3555 1094 Pls
3559 1077 Pls
3564 1081 Pls
3570 1101 Pls
3574 1068 Pls
3579 1073 Pls
3584 1082 Pls
3589 1096 Pls
3594 1082 Pls
3599 1077 Pls
3604 1093 Pls
3608 1075 Pls
3614 1063 Pls
3619 1074 Pls
3624 1086 Pls
3629 1084 Pls
3633 1088 Pls
3639 1080 Pls
3644 1238 Pls
3648 1102 Pls
3654 1066 Pls
3658 1089 Pls
3663 1098 Pls
3669 1070 Pls
3673 1088 Pls
3678 1102 Pls
3683 1091 Pls
3688 1084 Pls
3693 1053 Pls
3698 1093 Pls
3703 1076 Pls
3708 1082 Pls
3713 1072 Pls
3718 1092 Pls
3723 1111 Pls
3728 1085 Pls
3732 1072 Pls
3738 1094 Pls
3743 1088 Pls
3747 1109 Pls
3753 1096 Pls
3757 1129 Pls
3762 1109 Pls
3768 1077 Pls
3772 1061 Pls
3777 1095 Pls
3782 1078 Pls
3787 1076 Pls
3792 1086 Pls
3797 1088 Pls
3802 1086 Pls
3807 1098 Pls
3812 1065 Pls
3817 1091 Pls
3822 1058 Pls
3827 1061 Pls
3831 1068 Pls
3837 1095 Pls
3842 1095 Pls
3846 1085 Pls
3852 1062 Pls
3856 1117 Pls
3861 1126 Pls
3867 1088 Pls
3871 1097 Pls
3877 1088 Pls
3881 1076 Pls
3886 1114 Pls
3892 1086 Pls
3896 1102 Pls
3901 1108 Pls
3906 1117 Pls
3911 1092 Pls
3916 1095 Pls
3921 1086 Pls
3926 1096 Pls
3930 1089 Pls
3936 1087 Pls
3941 1075 Pls
3946 1087 Pls
3951 1078 Pls
3955 1102 Pls
3961 1098 Pls
3966 1074 Pls
3970 1051 Pls
3976 1080 Pls
3980 1072 Pls
3985 1262 Pls
3991 1088 Pls
3995 1093 Pls
4000 1115 Pls
4005 1109 Pls
4010 1061 Pls
4015 1072 Pls
4020 1086 Pls
4025 1090 Pls
4030 1102 Pls
4035 1093 Pls
4040 1114 Pls
4045 1106 Pls
4050 1067 Pls
4054 1073 Pls
4060 1101 Pls
4065 1067 Pls
4069 1067 Pls
4075 1060 Pls
4079 1117 Pls
4084 1089 Pls
4090 1071 Pls
4094 1075 Pls
4099 1092 Pls
4104 1092 Pls
4109 1106 Pls
4114 1077 Pls
4119 1091 Pls
4124 1076 Pls
4129 1079 Pls
4134 1068 Pls
4139 1079 Pls
4144 1135 Pls
4149 1166 Pls
4153 1102 Pls
4159 1087 Pls
4164 1134 Pls
4168 1081 Pls
4174 1086 Pls
4178 1103 Pls
4184 1064 Pls
4189 1066 Pls
4193 1291 Pls
4199 1092 Pls
4203 1072 Pls
4208 1072 Pls
4214 1106 Pls
4218 1087 Pls
4223 1121 Pls
4228 1081 Pls
4233 1103 Pls
4238 1055 Pls
4243 1085 Pls
4248 1088 Pls
4253 1096 Pls
4258 1094 Pls
4263 1092 Pls
4268 1082 Pls
4273 1074 Pls
4277 1070 Pls
4283 1060 Pls
4288 1128 Pls
4292 1091 Pls
4298 1083 Pls
4302 1098 Pls
4307 1082 Pls
4313 1087 Pls
4317 1061 Pls
4322 1073 Pls
4327 1106 Pls
4332 1081 Pls
4337 1083 Pls
4342 1128 Pls
4347 1098 Pls
4352 1069 Pls
4357 1076 Pls
4361 1086 Pls
4366 1072 Pls
4371 1065 Pls
4375 1096 Pls
4380 1088 Pls
4384 1084 Pls
4389 1081 Pls
4394 1078 Pls
4398 1101 Pls
4403 1086 Pls
4407 1092 Pls
4412 1051 Pls
4417 1102 Pls
4421 1077 Pls
4426 1088 Pls
4430 1072 Pls
4435 1069 Pls
4440 1084 Pls
4444 1120 Pls
4449 1080 Pls
4453 1080 Pls
4458 1088 Pls
4463 1107 Pls
4467 1097 Pls
4472 1093 Pls
4476 1115 Pls
4481 1257 Pls
4486 1085 Pls
4490 1084 Pls
4495 1085 Pls
4499 1099 Pls
4504 1082 Pls
4509 1082 Pls
4513 1062 Pls
4518 1138 Pls
4522 1094 Pls
4527 1085 Pls
4532 1086 Pls
4536 1098 Pls
4541 1096 Pls
4545 1107 Pls
4550 1106 Pls
4555 1102 Pls
4559 1105 Pls
4564 1102 Pls
4568 1076 Pls
4573 1106 Pls
4578 1096 Pls
4582 1109 Pls
4587 1059 Pls
4591 1063 Pls
4596 1100 Pls
4601 1108 Pls
4605 1081 Pls
4610 1096 Pls
4614 1119 Pls
4619 1086 Pls
4624 1089 Pls
4628 1087 Pls
4633 1088 Pls
4637 1081 Pls
4642 1279 Pls
4647 1082 Pls
4651 1089 Pls
4656 1109 Pls
4660 1101 Pls
4665 1067 Pls
4670 1105 Pls
4674 1091 Pls
4679 1081 Pls
4683 1085 Pls
4688 1102 Pls
4693 1072 Pls
4697 1201 Pls
4702 1099 Pls
4706 1093 Pls
4711 1093 Pls
4716 1095 Pls
4720 1093 Pls
4725 1068 Pls
4729 1096 Pls
4734 1093 Pls
4739 1086 Pls
4743 1097 Pls
4748 1071 Pls
4752 1092 Pls
4757 1082 Pls
4762 1092 Pls
4766 1108 Pls
4771 1174 Pls
4775 1107 Pls
4780 1090 Pls
4785 1077 Pls
4789 1069 Pls
4794 1090 Pls
4798 1123 Pls
4803 1071 Pls
4808 1095 Pls
4812 1093 Pls
4817 1107 Pls
4821 1076 Pls
4826 1100 Pls
4831 1093 Pls
4836 1078 Pls
4840 1070 Pls
4844 1075 Pls
4849 1107 Pls
4854 1093 Pls
4859 1101 Pls
4863 1064 Pls
4867 1070 Pls
4872 1066 Pls
4877 1103 Pls
4882 1083 Pls
4886 1118 Pls
4890 1080 Pls
4895 1090 Pls
4900 1069 Pls
4905 1094 Pls
4909 1086 Pls
4913 1115 Pls
4918 1091 Pls
4923 1070 Pls
4928 1085 Pls
4932 1083 Pls
4936 1089 Pls
4941 1066 Pls
4946 1102 Pls
4951 1053 Pls
4955 1077 Pls
4959 1074 Pls
4964 1058 Pls
4969 1068 Pls
4974 1100 Pls
4978 1072 Pls
4982 1095 Pls
4987 1090 Pls
4992 1101 Pls
4997 1069 Pls
5001 1091 Pls
5005 1071 Pls
5010 1058 Pls
5015 1080 Pls
5020 1089 Pls
5024 1089 Pls
5028 1084 Pls
5033 1135 Pls
5038 1073 Pls
5043 1307 Pls
5047 1075 Pls
5051 1084 Pls
5056 1081 Pls
5061 1063 Pls
5066 1090 Pls
5070 1076 Pls
5074 1063 Pls
5079 1065 Pls
5084 1095 Pls
5089 1079 Pls
5093 1081 Pls
5097 1072 Pls
5102 1136 Pls
5107 1088 Pls
5112 1119 Pls
5116 1070 Pls
5120 1086 Pls
5125 1089 Pls
5130 1100 Pls
5135 1057 Pls
5139 1077 Pls
5143 1069 Pls
5148 1100 Pls
5153 1071 Pls
5158 1074 Pls
5162 1098 Pls
5166 1070 Pls
5171 1074 Pls
5176 1088 Pls
5181 1070 Pls
5185 1098 Pls
5189 1092 Pls
5194 1067 Pls
5199 1087 Pls
5204 1090 Pls
5208 1049 Pls
5212 1070 Pls
5217 1086 Pls
5222 1100 Pls
5227 1072 Pls
5231 1077 Pls
5235 1077 Pls
5240 1079 Pls
5245 1169 Pls
5250 1077 Pls
5254 1083 Pls
5258 1122 Pls
5263 1085 Pls
5268 1118 Pls
5273 1096 Pls
5277 1088 Pls
5281 1072 Pls
5286 1105 Pls
5291 1105 Pls
5296 1058 Pls
5300 1081 Pls
5304 1103 Pls
5309 1086 Pls
5314 1070 Pls
5319 1061 Pls
5323 1084 Pls
5327 1083 Pls
5332 1093 Pls
5337 1091 Pls
5342 1106 Pls
5346 1077 Pls
5350 1115 Pls
5355 1070 Pls
5360 1064 Pls
5365 1083 Pls
5369 1075 Pls
5373 1073 Pls
5378 1077 Pls
5383 1114 Pls
5388 1084 Pls
5392 1073 Pls
5396 1088 Pls
5401 1065 Pls
5406 1109 Pls
5411 1079 Pls
5415 1063 Pls
5419 1078 Pls
5424 1102 Pls
5429 1059 Pls
5434 1091 Pls
5438 1105 Pls
5442 1074 Pls
5447 1074 Pls
5452 1107 Pls
5457 1061 Pls
5461 1078 Pls
5466 1093 Pls
5472 1093 Pls
5476 1075 Pls
5481 1062 Pls
5486 1101 Pls
5491 1089 Pls
5496 1082 Pls
5501 1122 Pls
5506 1120 Pls
5511 1096 Pls
5516 1079 Pls
5521 1092 Pls
5526 1081 Pls
5531 1088 Pls
5535 1230 Pls
5541 1058 Pls
5546 1068 Pls
5550 1092 Pls
5556 1089 Pls
5560 1076 Pls
5565 1093 Pls
5571 1082 Pls
5575 1169 Pls
5580 1090 Pls
5585 1109 Pls
5590 1091 Pls
5595 1102 Pls
5600 1077 Pls
5605 1105 Pls
5610 1109 Pls
5615 1080 Pls
5620 1109 Pls
5625 1109 Pls
5630 1072 Pls
5634 1074 Pls
5640 1105 Pls
5645 1109 Pls
5649 1084 Pls
5655 1074 Pls
5659 1086 Pls
5664 1121 Pls
5670 1095 Pls
5674 1101 Pls
5679 1094 Pls
5684 1107 Pls
5689 1064 Pls
5695 1093 Pls
5699 1104 Pls
5704 1094 Pls
5709 1088 Pls
5714 1117 Pls
5719 1072 Pls
5729 1101 Pls
5733 1058 Pls
5739 1079 Pls
5744 1098 Pls
5748 1081 Pls
5754 1075 Pls
5758 1090 Pls
5764 1097 Pls
5769 1077 Pls
5773 1090 Pls
5779 1058 Pls
5783 1105 Pls
5788 1088 Pls
5794 1109 Pls
5798 1125 Pls
5803 1088 Pls
5808 1077 Pls
5813 1090 Pls
5818 1091 Pls
5823 1103 Pls
5828 1123 Pls
5833 1100 Pls
5838 1068 Pls
5843 1116 Pls
5848 1079 Pls
5853 1102 Pls
5857 1099 Pls
5863 1079 Pls
5868 1106 Pls
5872 1111 Pls
5878 1065 Pls
5882 1095 Pls
5887 1188 Pls
5893 1100 Pls
5902 1089 Pls
5907 1060 Pls
5912 1227 Pls
5917 1134 Pls
5922 1079 Pls
5927 1058 Pls
5932 1089 Pls
5937 1081 Pls
5942 1091 Pls
5947 1115 Pls
5952 1074 Pls
5956 1071 Pls
5967 1076 Pls
5971 1085 Pls
5977 1070 Pls
5981 1096 Pls
5986 1086 Pls
5992 1062 Pls
5996 1074 Pls
6001 1107 Pls
6006 1086 Pls
6011 1060 Pls
6017 1068 Pls
6021 1112 Pls
6026 1073 Pls
6031 1085 Pls
6036 1111 Pls
6041 1105 Pls
6046 1085 Pls
6051 1069 Pls
6055 1117 Pls
6061 1113 Pls
6066 1066 Pls
6070 1112 Pls
6076 1181 Pls
6080 1086 Pls
6086 1080 Pls
6091 1077 Pls
6095 1086 Pls
6101 1112 Pls
6105 1082 Pls
6110 1114 Pls
6116 1072 Pls
6120 1066 Pls
6125 1073 Pls
6130 1079 Pls
6135 1090 Pls
6140 1296 Pls
6145 1075 Pls
6150 1082 Pls
6155 1101 Pls
6160 1077 Pls
6165 1086 Pls
6170 1099 Pls
6175 1089 Pls
6179 1078 Pls
6185 1110 Pls
6190 1098 Pls
6194 1099 Pls
6200 1083 Pls
6204 1076 Pls
6209 1103 Pls
6215 1090 Pls
6219 1072 Pls
6224 1087 Pls
6229 1074 Pls
6234 1083 Pls
6239 1062 Pls
6244 1082 Pls
6249 1065 Pls
6254 1084 Pls
6259 1085 Pls
6264 1108 Pls
6269 1080 Pls
6274 1116 Pls
6278 1102 Pls
6284 1085 Pls
6289 1100 Pls
6293 1116 Pls
6299 1084 Pls
6303 1061 Pls
6308 1071 Pls
6314 1063 Pls
6318 1080 Pls
6324 1046 Pls
6328 1081 Pls
6333 1073 Pls
6339 1085 Pls
6344 1065 Pls
6348 1097 Pls
6353 1090 Pls
6358 1219 Pls
6363 1083 Pls
6368 1084 Pls
6373 1081 Pls
6377 1102 Pls
6383 1086 Pls
6388 1086 Pls
6393 1099 Pls
6398 1064 Pls
6402 1065 Pls
6408 1111 Pls
6413 1104 Pls
6417 1080 Pls
6423 1077 Pls
6427 1101 Pls
6432 1067 Pls
6438 1069 Pls
6442 1082 Pls
6447 1100 Pls
6452 1070 Pls
6457 1107 Pls
6462 1070 Pls
6467 1095 Pls
6472 1104 Pls
6477 1112 Pls
6482 1073 Pls
6487 1093 Pls
6492 1085 Pls
6497 1080 Pls
6501 1095 Pls
6507 1109 Pls
6512 1093 Pls
6516 1077 Pls
6522 1065 Pls
6526 1058 Pls
6531 1080 Pls
6537 1072 Pls
6541 1058 Pls
6546 1072 Pls
6551 1093 Pls
6556 1116 Pls
6561 1057 Pls
6566 1074 Pls
6571 1113 Pls
6576 1083 Pls
6581 1096 Pls
6586 1064 Pls
6591 1107 Pls
6596 1107 Pls
6600 1098 Pls
6606 1071 Pls
6611 1089 Pls
6615 1086 Pls
6621 1063 Pls
6625 1078 Pls
6630 1097 Pls
6636 1077 Pls
6640 1093 Pls
6646 1066 Pls
6650 1102 Pls
6655 1069 Pls
6661 1061 Pls
6665 1102 Pls
6670 1089 Pls
6675 1060 Pls
6680 1070 Pls
6685 1113 Pls
6690 1077 Pls
6695 1087 Pls
6699 1109 Pls
6705 1081 Pls
6710 1236 Pls
6715 1129 Pls
6720 1125 Pls
6724 1067 Pls
6730 1095 Pls
6735 1081 Pls
6739 1099 Pls
6745 1108 Pls
6749 1090 Pls
6754 1088 Pls
6760 1060 Pls
6764 1090 Pls
6769 1113 Pls
6774 1085 Pls
6779 1081 Pls
6784 1059 Pls
6789 1065 Pls
6794 1080 Pls
6799 1107 Pls
6804 1065 Pls
6809 1060 Pls
6814 1061 Pls
6819 1063 Pls
6823 1079 Pls
1.000 UL
LTb
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
