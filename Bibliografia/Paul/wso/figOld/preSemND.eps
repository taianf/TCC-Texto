%!PS-Adobe-2.0 EPSF-2.0
%%Title: preSemND.tex
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu Mar 27 16:46:54 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (preSemND.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Paul Regnier,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 27 16:46:54 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1518 660 M
63 0 V
5245 0 R
-63 0 V
1518 1483 M
63 0 V
5245 0 R
-63 0 V
1518 2306 M
63 0 V
5245 0 R
-63 0 V
1518 3130 M
63 0 V
5245 0 R
-63 0 V
1518 3953 M
63 0 V
5245 0 R
-63 0 V
1518 4776 M
63 0 V
5245 0 R
-63 0 V
1518 660 M
0 63 V
0 4053 R
0 -63 V
2403 660 M
0 63 V
0 4053 R
0 -63 V
3287 660 M
0 63 V
0 4053 R
0 -63 V
4172 660 M
0 63 V
0 4053 R
0 -63 V
5057 660 M
0 63 V
0 4053 R
0 -63 V
5941 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
stroke
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LTb
1518 1026 Pls
1522 1033 Pls
1528 1025 Pls
1532 1027 Pls
1537 1029 Pls
1541 1028 Pls
1545 1028 Pls
1551 1026 Pls
1555 1026 Pls
1560 1026 Pls
1564 1026 Pls
1568 1027 Pls
1574 1028 Pls
1578 1029 Pls
1583 1027 Pls
1587 1026 Pls
1591 1024 Pls
1597 1028 Pls
1601 1026 Pls
1606 1026 Pls
1610 1026 Pls
1614 1028 Pls
1620 1026 Pls
1624 1028 Pls
1629 1027 Pls
1633 1028 Pls
1635 1027 Pls
1637 1027 Pls
1643 1027 Pls
1647 1027 Pls
1652 1024 Pls
1656 1027 Pls
1660 1028 Pls
1666 1027 Pls
1670 1029 Pls
1675 1027 Pls
1679 1028 Pls
1683 1028 Pls
1689 1028 Pls
1693 1027 Pls
1698 1023 Pls
1702 1028 Pls
1706 1028 Pls
1712 1028 Pls
1716 1028 Pls
1721 1027 Pls
1723 1024 Pls
1725 1027 Pls
1729 1027 Pls
1735 1028 Pls
1739 1028 Pls
1744 1027 Pls
1748 1027 Pls
1752 1030 Pls
1758 1028 Pls
1762 1028 Pls
1767 1028 Pls
1771 1029 Pls
1775 1029 Pls
1781 1028 Pls
1785 1029 Pls
1790 1025 Pls
1794 1027 Pls
1798 1027 Pls
1804 1026 Pls
1808 1029 Pls
1812 1028 Pls
1813 1028 Pls
1817 1026 Pls
1821 1028 Pls
1827 1026 Pls
1831 1028 Pls
1836 1028 Pls
1840 1026 Pls
1844 1027 Pls
1850 1024 Pls
1854 1026 Pls
1859 1028 Pls
1863 1025 Pls
1867 1026 Pls
1873 1028 Pls
1877 1026 Pls
1882 1026 Pls
1886 1027 Pls
1890 1026 Pls
1896 1028 Pls
1900 1028 Pls
1905 1027 Pls
1909 1026 Pls
1913 1028 Pls
1919 1026 Pls
1923 1030 Pls
1928 1028 Pls
1932 1027 Pls
1936 1027 Pls
1942 1026 Pls
1946 1024 Pls
1951 1026 Pls
1955 1028 Pls
1959 1026 Pls
1965 1026 Pls
1969 1027 Pls
1974 1031 Pls
1978 1029 Pls
1982 1028 Pls
1988 1027 Pls
1992 1028 Pls
1997 1029 Pls
2001 1027 Pls
2005 1027 Pls
2011 1025 Pls
2015 1028 Pls
2020 1026 Pls
2024 1026 Pls
2028 1024 Pls
2034 1024 Pls
2038 1027 Pls
2043 1026 Pls
2047 1026 Pls
2051 1025 Pls
2057 1028 Pls
2061 1029 Pls
2066 1026 Pls
2070 1027 Pls
2074 1026 Pls
2080 1026 Pls
2084 1026 Pls
2089 1028 Pls
2093 1028 Pls
2097 1028 Pls
2103 1027 Pls
2107 1028 Pls
2112 1028 Pls
2117 1027 Pls
2121 1027 Pls
2127 1028 Pls
2131 1027 Pls
2136 1024 Pls
2142 1027 Pls
2146 1027 Pls
2151 1027 Pls
2156 1027 Pls
2161 1024 Pls
2166 1026 Pls
2171 1024 Pls
2176 1023 Pls
2181 1028 Pls
2186 1028 Pls
2191 1025 Pls
2196 1029 Pls
2201 1026 Pls
2205 1028 Pls
2211 1027 Pls
2216 1029 Pls
2220 1028 Pls
2226 1029 Pls
2230 1028 Pls
2235 1024 Pls
2241 1025 Pls
2245 1030 Pls
2251 1027 Pls
2255 1027 Pls
2260 1026 Pls
2266 1029 Pls
2270 1027 Pls
2275 1028 Pls
2280 1026 Pls
2285 1027 Pls
2290 1030 Pls
2295 1027 Pls
2300 1028 Pls
2304 1026 Pls
2310 1026 Pls
2315 1028 Pls
2320 1026 Pls
2325 1023 Pls
2329 1028 Pls
2335 1026 Pls
2340 1026 Pls
2344 1025 Pls
2350 1028 Pls
2354 1026 Pls
2359 1028 Pls
2365 1026 Pls
2369 1028 Pls
2374 1028 Pls
2379 1024 Pls
2384 1027 Pls
2389 1028 Pls
2394 1028 Pls
2399 1027 Pls
2404 1028 Pls
2409 1027 Pls
2414 1029 Pls
2419 1027 Pls
2424 1025 Pls
2428 1027 Pls
2431 1029 Pls
2434 1028 Pls
2439 1026 Pls
2443 1026 Pls
2449 1028 Pls
2453 1029 Pls
2458 1025 Pls
2464 1025 Pls
2468 1028 Pls
2473 1027 Pls
2478 1027 Pls
2483 1025 Pls
2488 1028 Pls
2493 1023 Pls
2498 1028 Pls
2503 1026 Pls
2508 1028 Pls
2513 1026 Pls
2518 1026 Pls
2519 1028 Pls
2523 1028 Pls
2527 1026 Pls
2533 1027 Pls
2538 1028 Pls
2542 1027 Pls
2548 1028 Pls
2552 1026 Pls
2557 1027 Pls
2563 1028 Pls
2567 1026 Pls
2573 1026 Pls
2577 1027 Pls
2582 1026 Pls
2588 1028 Pls
2592 1027 Pls
2597 1030 Pls
2602 1027 Pls
2607 1026 Pls
2608 1026 Pls
2612 1028 Pls
2617 1026 Pls
2622 1025 Pls
2626 1026 Pls
2632 1027 Pls
2637 1028 Pls
2642 1025 Pls
2647 1026 Pls
2651 1029 Pls
2657 1026 Pls
2662 1028 Pls
2666 1026 Pls
2672 1029 Pls
2676 1029 Pls
2681 1023 Pls
2687 1028 Pls
2691 1023 Pls
2696 1027 Pls
2701 1028 Pls
2706 1029 Pls
2711 1025 Pls
2716 1029 Pls
2721 1026 Pls
2726 1024 Pls
2731 1026 Pls
2736 1027 Pls
2741 1024 Pls
2746 1024 Pls
2750 1026 Pls
2756 1026 Pls
2761 1027 Pls
2765 1025 Pls
2771 1027 Pls
2775 1024 Pls
2780 1027 Pls
2786 1028 Pls
2790 1027 Pls
2795 1026 Pls
2800 1028 Pls
2805 1027 Pls
2810 1027 Pls
2815 1024 Pls
2820 1028 Pls
2825 1028 Pls
2830 1030 Pls
2835 1025 Pls
2840 1026 Pls
2845 1026 Pls
2849 1027 Pls
2855 1028 Pls
2860 1027 Pls
2864 1026 Pls
2870 1027 Pls
2874 1026 Pls
2880 1025 Pls
2885 1029 Pls
2889 1026 Pls
2895 1026 Pls
2899 1028 Pls
2904 1027 Pls
2910 1029 Pls
2914 1026 Pls
2919 1028 Pls
2924 1026 Pls
2929 1023 Pls
2934 1024 Pls
2939 1026 Pls
2944 1028 Pls
2949 1028 Pls
2954 1028 Pls
2959 1028 Pls
2964 1027 Pls
2969 1026 Pls
2973 1026 Pls
2979 1026 Pls
2984 1028 Pls
2988 1028 Pls
2994 1028 Pls
2998 1027 Pls
3003 1025 Pls
3009 1028 Pls
3013 1028 Pls
3018 1026 Pls
3023 1026 Pls
3028 1025 Pls
3033 1029 Pls
3038 1023 Pls
3043 1028 Pls
3048 1028 Pls
3053 1027 Pls
3058 1025 Pls
3063 1029 Pls
3068 1026 Pls
3072 1026 Pls
3078 1027 Pls
3083 1026 Pls
3087 1028 Pls
3093 1027 Pls
3097 1029 Pls
3102 1028 Pls
3108 1026 Pls
3112 1026 Pls
3117 1028 Pls
3122 1028 Pls
3127 1027 Pls
3133 1029 Pls
3137 1028 Pls
3142 1027 Pls
3147 1027 Pls
3152 1029 Pls
3157 1026 Pls
3162 1028 Pls
3167 1028 Pls
3171 1025 Pls
3177 1025 Pls
3182 1026 Pls
3186 1027 Pls
3192 1028 Pls
3196 1026 Pls
3202 1025 Pls
3207 1029 Pls
3211 1027 Pls
3217 1028 Pls
3221 1024 Pls
3226 1027 Pls
3232 1028 Pls
3236 1027 Pls
3241 1026 Pls
3246 1027 Pls
3251 1027 Pls
3256 1029 Pls
3261 1027 Pls
3266 1029 Pls
3271 1027 Pls
3276 1029 Pls
3281 1028 Pls
3286 1028 Pls
3291 1028 Pls
3295 1028 Pls
3301 1028 Pls
3306 1029 Pls
3310 1027 Pls
3316 1026 Pls
3320 1026 Pls
3325 1027 Pls
3331 1028 Pls
3335 1026 Pls
3340 1027 Pls
3345 1028 Pls
3350 1023 Pls
3355 1028 Pls
3360 1027 Pls
3365 1028 Pls
3370 1027 Pls
3375 1027 Pls
3380 1028 Pls
3385 1026 Pls
3390 1028 Pls
3394 1027 Pls
3400 1023 Pls
3404 1028 Pls
3405 1027 Pls
3409 1026 Pls
3415 1029 Pls
3419 1028 Pls
3424 1025 Pls
3430 1027 Pls
3434 1028 Pls
3439 1026 Pls
3444 1028 Pls
3449 1027 Pls
3455 1024 Pls
3459 1027 Pls
3464 1027 Pls
3469 1027 Pls
3474 1028 Pls
3479 1026 Pls
3484 1026 Pls
3489 1026 Pls
3493 1028 Pls
3493 1026 Pls
3499 1023 Pls
3504 1026 Pls
3509 1028 Pls
3514 1028 Pls
3518 1027 Pls
3524 1028 Pls
3529 1028 Pls
3533 1024 Pls
3539 1028 Pls
3543 1026 Pls
3548 1027 Pls
3554 1030 Pls
3558 1029 Pls
3563 1028 Pls
3568 1028 Pls
3573 1029 Pls
3578 1027 Pls
3581 1028 Pls
3583 1029 Pls
3588 1028 Pls
3593 1028 Pls
3598 1028 Pls
3603 1029 Pls
3608 1027 Pls
3613 1027 Pls
3617 1027 Pls
3623 1028 Pls
3628 1029 Pls
3632 1027 Pls
3638 1025 Pls
3642 1028 Pls
3647 1027 Pls
3653 1027 Pls
3657 1027 Pls
3662 1028 Pls
3667 1028 Pls
3672 1028 Pls
3677 1026 Pls
3682 1028 Pls
3687 1026 Pls
3692 1029 Pls
3697 1028 Pls
3702 1026 Pls
3707 1027 Pls
3712 1028 Pls
3716 1028 Pls
3722 1027 Pls
3727 1027 Pls
3731 1028 Pls
3737 1028 Pls
3741 1026 Pls
3746 1030 Pls
3752 1028 Pls
3756 1028 Pls
3762 1027 Pls
3766 1026 Pls
3771 1026 Pls
3777 1026 Pls
3781 1025 Pls
3786 1026 Pls
3791 1024 Pls
3796 1027 Pls
3801 1026 Pls
3806 1027 Pls
3811 1028 Pls
3815 1026 Pls
3821 1028 Pls
3826 1026 Pls
3831 1028 Pls
3836 1028 Pls
3840 1026 Pls
3846 1028 Pls
3851 1028 Pls
3855 1026 Pls
3861 1028 Pls
3865 1028 Pls
3870 1025 Pls
3876 1024 Pls
3880 1026 Pls
3885 1027 Pls
3890 1030 Pls
3895 1030 Pls
3900 1028 Pls
3905 1027 Pls
3910 1026 Pls
3915 1028 Pls
3920 1026 Pls
3925 1025 Pls
3930 1028 Pls
3935 1026 Pls
3939 1026 Pls
3945 1028 Pls
3950 1025 Pls
3954 1028 Pls
3960 1028 Pls
3964 1027 Pls
3969 1028 Pls
3975 1027 Pls
3979 1026 Pls
3984 1027 Pls
3989 1025 Pls
3994 1028 Pls
3999 1023 Pls
4004 1028 Pls
4009 1028 Pls
4014 1027 Pls
4019 1027 Pls
4024 1026 Pls
4029 1026 Pls
4034 1027 Pls
4038 1028 Pls
4044 1024 Pls
4049 1025 Pls
4053 1027 Pls
4059 1029 Pls
4063 1027 Pls
4068 1026 Pls
4074 1027 Pls
4078 1028 Pls
4084 1027 Pls
4088 1027 Pls
4093 1028 Pls
4099 1027 Pls
4103 1024 Pls
4108 1026 Pls
4113 1026 Pls
4118 1027 Pls
4123 1025 Pls
4128 1027 Pls
4133 1026 Pls
4137 1028 Pls
4143 1024 Pls
4148 1027 Pls
4153 1025 Pls
4158 1028 Pls
4162 1026 Pls
4168 1028 Pls
4173 1028 Pls
4177 1029 Pls
4183 1027 Pls
4187 1028 Pls
4192 1027 Pls
4198 1029 Pls
4202 1028 Pls
4207 1029 Pls
4212 1029 Pls
4217 1028 Pls
4222 1028 Pls
4223 1026 Pls
4227 1287 Pls
4232 1024 Pls
4237 1027 Pls
4242 1027 Pls
4247 1024 Pls
4252 1027 Pls
4257 1027 Pls
4261 1027 Pls
4267 1027 Pls
4272 1027 Pls
4276 1027 Pls
4282 1027 Pls
4286 1024 Pls
4291 1024 Pls
4297 1023 Pls
4301 1027 Pls
4306 1028 Pls
4311 1028 Pls
4316 1028 Pls
4322 1027 Pls
4326 1030 Pls
4331 1028 Pls
4336 1028 Pls
4341 1028 Pls
4346 1027 Pls
4351 1027 Pls
4356 1027 Pls
4360 1027 Pls
4366 1027 Pls
4371 1027 Pls
4375 1028 Pls
4381 1028 Pls
4385 1029 Pls
4391 1027 Pls
4396 1028 Pls
4400 1028 Pls
4406 1028 Pls
4410 1025 Pls
4415 1027 Pls
4421 1028 Pls
4425 1028 Pls
4430 1026 Pls
4435 1028 Pls
4440 1030 Pls
4445 1029 Pls
4450 1028 Pls
4455 1030 Pls
4460 1027 Pls
4465 1028 Pls
4470 1030 Pls
4475 1025 Pls
4480 1028 Pls
4484 1026 Pls
4490 1028 Pls
4495 1024 Pls
4499 1024 Pls
4505 1027 Pls
4509 1028 Pls
4514 1027 Pls
4520 1028 Pls
4524 1028 Pls
4529 1029 Pls
4534 1028 Pls
4539 1025 Pls
4544 1027 Pls
4549 1028 Pls
4554 1026 Pls
4559 1028 Pls
4564 1027 Pls
4569 1030 Pls
4574 1028 Pls
4579 1027 Pls
4583 1027 Pls
4589 1028 Pls
4594 1028 Pls
4598 1026 Pls
4604 1025 Pls
4608 1028 Pls
4613 1027 Pls
4619 1027 Pls
4623 1028 Pls
4628 1027 Pls
4633 1030 Pls
4638 1027 Pls
4644 1026 Pls
4648 1028 Pls
4653 1027 Pls
4658 1028 Pls
4663 1027 Pls
4668 1028 Pls
4673 1026 Pls
4678 1026 Pls
4682 1026 Pls
4688 1028 Pls
4693 1028 Pls
4697 1026 Pls
4703 1029 Pls
4707 1027 Pls
4713 1027 Pls
4718 1028 Pls
4722 1024 Pls
4728 1024 Pls
4731 1030 Pls
4732 1026 Pls
4737 1027 Pls
4743 1028 Pls
4747 1025 Pls
4752 1028 Pls
4757 1024 Pls
4762 1023 Pls
4767 1023 Pls
4772 1027 Pls
4777 1028 Pls
4782 1027 Pls
4787 1024 Pls
4792 1024 Pls
4797 1027 Pls
4802 1026 Pls
4806 1027 Pls
4812 1024 Pls
4817 1027 Pls
4820 1027 Pls
4821 1024 Pls
4827 1028 Pls
4831 1023 Pls
4836 1026 Pls
4842 1028 Pls
4846 1026 Pls
4851 1026 Pls
4856 1024 Pls
4861 1026 Pls
4866 1028 Pls
4871 1027 Pls
4876 1026 Pls
4881 1026 Pls
4886 1024 Pls
4891 1028 Pls
4896 1029 Pls
4901 1024 Pls
4905 1027 Pls
4908 1026 Pls
4911 1027 Pls
4916 1029 Pls
4920 1027 Pls
4926 1027 Pls
4930 1028 Pls
4935 1027 Pls
4941 1027 Pls
4945 1028 Pls
4951 1028 Pls
4955 1024 Pls
4960 1027 Pls
4966 1025 Pls
4970 1028 Pls
4975 1028 Pls
4980 1026 Pls
4985 1030 Pls
4990 1025 Pls
4995 1027 Pls
5000 1026 Pls
5004 1027 Pls
5010 1023 Pls
5015 1025 Pls
5020 1027 Pls
5025 1027 Pls
5029 1026 Pls
5035 1028 Pls
5040 1024 Pls
5044 1028 Pls
5050 1030 Pls
5054 1024 Pls
5059 1029 Pls
5065 1027 Pls
5069 1027 Pls
5074 1027 Pls
5079 1027 Pls
5084 1027 Pls
5089 1028 Pls
5094 1029 Pls
5099 1027 Pls
5104 1027 Pls
5109 1026 Pls
5114 1029 Pls
5119 1026 Pls
5124 1024 Pls
5128 1026 Pls
5134 1024 Pls
5139 1026 Pls
5143 1028 Pls
5149 1026 Pls
5153 1028 Pls
5158 1030 Pls
5164 1025 Pls
5168 1028 Pls
5173 1026 Pls
5178 1027 Pls
5183 1026 Pls
5188 1028 Pls
5193 1027 Pls
5198 1026 Pls
5203 1024 Pls
5208 1023 Pls
5213 1028 Pls
5218 1026 Pls
5223 1026 Pls
5227 1023 Pls
5233 1027 Pls
5238 1028 Pls
5242 1026 Pls
5248 1025 Pls
5252 1028 Pls
5257 1026 Pls
5263 1028 Pls
5267 1027 Pls
5273 1025 Pls
5277 1024 Pls
5282 1027 Pls
5288 1027 Pls
5292 1027 Pls
5297 1027 Pls
5302 1028 Pls
5307 1027 Pls
5312 1027 Pls
5317 1027 Pls
5322 1028 Pls
5326 1026 Pls
5332 1028 Pls
5337 1023 Pls
5342 1026 Pls
5347 1027 Pls
5351 1027 Pls
5357 1028 Pls
5362 1027 Pls
5366 1025 Pls
5372 1024 Pls
5376 1028 Pls
5381 1028 Pls
5387 1028 Pls
5391 1028 Pls
5396 1028 Pls
5401 1028 Pls
5406 1028 Pls
5411 1026 Pls
5416 1028 Pls
5421 1027 Pls
5426 1027 Pls
5431 1027 Pls
5436 1028 Pls
5441 1027 Pls
5446 1028 Pls
5450 1029 Pls
5456 1026 Pls
5461 1028 Pls
5465 1028 Pls
5471 1024 Pls
5475 1027 Pls
5480 1028 Pls
5486 1027 Pls
5490 1028 Pls
5495 1028 Pls
5500 1027 Pls
5505 1025 Pls
5511 1029 Pls
5515 1028 Pls
5520 1025 Pls
5525 1029 Pls
5530 1027 Pls
5535 1028 Pls
5540 1027 Pls
5545 1028 Pls
5549 1026 Pls
5555 1027 Pls
5560 1028 Pls
5564 1028 Pls
5570 1028 Pls
5574 1026 Pls
5580 1024 Pls
5585 1029 Pls
5589 1027 Pls
5595 1028 Pls
5599 1027 Pls
5604 1028 Pls
5610 1027 Pls
5614 1027 Pls
5619 1026 Pls
5624 1024 Pls
5629 1028 Pls
5634 1027 Pls
5639 1026 Pls
5644 1028 Pls
5649 1027 Pls
5654 1028 Pls
5659 1028 Pls
5664 1028 Pls
5669 1027 Pls
5673 1026 Pls
5679 1025 Pls
5684 1028 Pls
5688 1025 Pls
5694 1026 Pls
5698 1027 Pls
5703 1027 Pls
5709 1026 Pls
5713 1028 Pls
5718 1030 Pls
5723 1027 Pls
5728 1028 Pls
5733 1027 Pls
5738 1028 Pls
5743 1028 Pls
5748 1027 Pls
5753 1024 Pls
5758 1026 Pls
5763 1027 Pls
5768 1025 Pls
5772 1027 Pls
5778 1027 Pls
5783 1026 Pls
5787 1028 Pls
5793 1027 Pls
5797 1024 Pls
5802 1027 Pls
5808 1028 Pls
5812 1027 Pls
5817 1023 Pls
5822 1025 Pls
5827 1027 Pls
5833 1025 Pls
5837 1024 Pls
5842 1030 Pls
5847 1024 Pls
5852 1028 Pls
5857 1026 Pls
5862 1027 Pls
5867 1027 Pls
5871 1028 Pls
5877 1026 Pls
5882 1026 Pls
5886 1023 Pls
5892 1030 Pls
5896 1026 Pls
5902 1028 Pls
5907 1028 Pls
5911 1028 Pls
5917 1025 Pls
5921 1027 Pls
5926 1024 Pls
5932 1023 Pls
5936 1028 Pls
5941 1023 Pls
5946 1027 Pls
5951 1027 Pls
5956 1023 Pls
5961 1028 Pls
5966 1027 Pls
5970 1026 Pls
5971 1028 Pls
5976 1026 Pls
5981 1027 Pls
5986 1027 Pls
5991 1028 Pls
5995 1027 Pls
6001 1027 Pls
6006 1028 Pls
6010 1027 Pls
6016 1027 Pls
6020 1027 Pls
6025 1025 Pls
6031 1027 Pls
6035 1028 Pls
6040 1026 Pls
6045 1025 Pls
6050 1025 Pls
6055 1027 Pls
6058 1028 Pls
6060 1027 Pls
6065 1027 Pls
6070 1025 Pls
6075 1024 Pls
6080 1025 Pls
6085 1024 Pls
6090 1026 Pls
6094 1024 Pls
6100 1026 Pls
6105 1026 Pls
6109 1028 Pls
6115 1027 Pls
6119 1028 Pls
6124 1026 Pls
6130 1028 Pls
6134 1027 Pls
6139 1027 Pls
6144 1027 Pls
6147 1025 Pls
6149 1025 Pls
6155 1027 Pls
6159 1027 Pls
6164 1026 Pls
6169 1026 Pls
6174 1025 Pls
6179 1026 Pls
6184 1028 Pls
6189 1029 Pls
6193 1028 Pls
6199 1026 Pls
6204 1028 Pls
6209 1027 Pls
6214 1029 Pls
6218 1027 Pls
6224 1028 Pls
6229 1028 Pls
6233 1030 Pls
6239 1028 Pls
6243 1026 Pls
6248 1027 Pls
6254 1027 Pls
6258 1027 Pls
6263 1028 Pls
6268 1028 Pls
6273 1027 Pls
6278 1026 Pls
6283 1024 Pls
6288 1026 Pls
6293 1024 Pls
6298 1028 Pls
6303 1024 Pls
6308 1026 Pls
6313 1027 Pls
6317 1028 Pls
6323 1027 Pls
6328 1029 Pls
6332 1029 Pls
6338 1029 Pls
6342 1027 Pls
6347 1028 Pls
6353 1026 Pls
6357 1030 Pls
6362 1024 Pls
6367 1026 Pls
6372 1027 Pls
6377 1028 Pls
6382 1026 Pls
6387 1026 Pls
6392 1028 Pls
6397 1028 Pls
6402 1027 Pls
6407 1026 Pls
6412 1027 Pls
6416 1025 Pls
6422 1028 Pls
6427 1026 Pls
6431 1026 Pls
6437 1027 Pls
6441 1026 Pls
6446 1027 Pls
6452 1025 Pls
6456 1027 Pls
6462 1026 Pls
6466 1027 Pls
6471 1028 Pls
6477 1027 Pls
6481 1025 Pls
6486 1027 Pls
6491 1026 Pls
6496 1027 Pls
6501 1025 Pls
6506 1026 Pls
6511 1027 Pls
6515 1027 Pls
6521 1026 Pls
6526 1028 Pls
6531 1025 Pls
6536 1024 Pls
6540 1025 Pls
6546 1027 Pls
6551 1027 Pls
6555 1027 Pls
6561 1028 Pls
6565 1027 Pls
6570 1028 Pls
6576 1028 Pls
6580 1026 Pls
6585 1027 Pls
6590 1028 Pls
6595 1028 Pls
6600 1028 Pls
6605 1026 Pls
6610 1028 Pls
6615 1024 Pls
6620 1027 Pls
6625 1028 Pls
6630 1028 Pls
6635 1028 Pls
6639 1026 Pls
6645 1029 Pls
6650 1026 Pls
6654 1029 Pls
6660 1028 Pls
6664 1028 Pls
6669 1026 Pls
6675 1026 Pls
6679 1029 Pls
6684 1026 Pls
6689 1028 Pls
6694 1027 Pls
6699 1028 Pls
6704 1027 Pls
6709 1028 Pls
6714 1027 Pls
6719 1026 Pls
6724 1024 Pls
6729 1027 Pls
6734 1027 Pls
6738 1028 Pls
6744 1027 Pls
6749 1026 Pls
6753 1028 Pls
6759 1024 Pls
6763 1028 Pls
6768 1027 Pls
6774 1025 Pls
6778 1027 Pls
6784 1025 Pls
6788 1028 Pls
6793 1026 Pls
6799 1028 Pls
6803 1028 Pls
6808 1029 Pls
6813 1026 Pls
6818 1027 Pls
6823 1026 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
