%!PS-Adobe-2.0 EPSF-2.0
%%Title: xenSem.tex
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu Mar 27 16:46:54 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (xenSem.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Paul Regnier,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 27 16:46:54 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1518 660 M
63 0 V
5245 0 R
-63 0 V
1518 1483 M
63 0 V
5245 0 R
-63 0 V
1518 2306 M
63 0 V
5245 0 R
-63 0 V
1518 3130 M
63 0 V
5245 0 R
-63 0 V
1518 3953 M
63 0 V
5245 0 R
-63 0 V
1518 4776 M
63 0 V
5245 0 R
-63 0 V
1518 660 M
0 63 V
0 4053 R
0 -63 V
2403 660 M
0 63 V
0 4053 R
0 -63 V
3287 660 M
0 63 V
0 4053 R
0 -63 V
4172 660 M
0 63 V
0 4053 R
0 -63 V
5057 660 M
0 63 V
0 4053 R
0 -63 V
5941 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
stroke
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LTb
1519 1030 Pls
1524 1025 Pls
1529 1029 Pls
1534 1027 Pls
1538 1027 Pls
1544 1039 Pls
1549 1043 Pls
1553 1026 Pls
1559 1029 Pls
1563 1028 Pls
1568 1035 Pls
1574 1026 Pls
1578 1028 Pls
1583 1028 Pls
1588 1040 Pls
1593 1028 Pls
1599 1026 Pls
1603 1032 Pls
1608 1027 Pls
1613 1028 Pls
1618 1027 Pls
1623 1031 Pls
1628 1028 Pls
1633 1037 Pls
1637 1028 Pls
1643 1024 Pls
1648 1036 Pls
1652 1028 Pls
1658 1026 Pls
1662 1028 Pls
1668 1026 Pls
1673 1038 Pls
1677 1028 Pls
1683 1030 Pls
1687 1026 Pls
1692 1028 Pls
1698 1029 Pls
1702 1027 Pls
1707 1029 Pls
1712 1028 Pls
1717 1037 Pls
1722 1033 Pls
1727 1026 Pls
1732 1028 Pls
1737 1026 Pls
1742 1028 Pls
1747 1025 Pls
1752 1026 Pls
1757 1028 Pls
1761 1028 Pls
1767 1026 Pls
1772 1028 Pls
1776 1026 Pls
1782 1029 Pls
1786 1025 Pls
1791 1026 Pls
1797 1027 Pls
1801 1029 Pls
1806 1030 Pls
1811 1025 Pls
1816 1026 Pls
1821 1028 Pls
1826 1032 Pls
1831 1028 Pls
1836 1026 Pls
1841 1027 Pls
1846 1029 Pls
1851 1035 Pls
1856 1025 Pls
1860 1027 Pls
1866 1026 Pls
1871 1026 Pls
1875 1025 Pls
1881 1028 Pls
1885 1026 Pls
1890 1025 Pls
1896 1035 Pls
1900 1029 Pls
1905 1026 Pls
1910 1029 Pls
1915 1027 Pls
1921 1029 Pls
1925 1029 Pls
1930 1028 Pls
1935 1027 Pls
1940 1037 Pls
1945 1026 Pls
1950 1026 Pls
1955 1027 Pls
1959 1025 Pls
1965 1027 Pls
1970 1028 Pls
1974 1026 Pls
1980 1027 Pls
1984 1039 Pls
1990 1031 Pls
1995 1026 Pls
1999 1032 Pls
2005 1029 Pls
2009 1026 Pls
2014 1026 Pls
2020 1026 Pls
2024 1026 Pls
2029 1031 Pls
2034 1027 Pls
2039 1030 Pls
2044 1029 Pls
2049 1026 Pls
2054 1028 Pls
2059 1027 Pls
2064 1029 Pls
2069 1027 Pls
2074 1032 Pls
2079 1027 Pls
2083 1025 Pls
2089 1028 Pls
2094 1028 Pls
2098 1028 Pls
2104 1026 Pls
2108 1025 Pls
2113 1031 Pls
2119 1044 Pls
2123 1033 Pls
2128 1028 Pls
2133 1026 Pls
2138 1026 Pls
2143 1026 Pls
2148 1026 Pls
2153 1026 Pls
2158 1025 Pls
2163 1035 Pls
2168 1026 Pls
2173 1025 Pls
2178 1033 Pls
2182 1026 Pls
2188 1027 Pls
2193 1028 Pls
2197 1026 Pls
2203 1026 Pls
2207 1028 Pls
2212 1030 Pls
2218 1026 Pls
2222 1029 Pls
2228 1026 Pls
2232 1029 Pls
2237 1030 Pls
2243 1028 Pls
2247 1025 Pls
2252 1043 Pls
2257 1029 Pls
2262 1027 Pls
2267 1026 Pls
2272 1029 Pls
2277 1027 Pls
2281 1030 Pls
2287 1027 Pls
2292 1032 Pls
2297 1032 Pls
2302 1026 Pls
2306 1030 Pls
2312 1027 Pls
2317 1028 Pls
2321 1026 Pls
2327 1029 Pls
2331 1026 Pls
2336 1030 Pls
2342 1028 Pls
2346 1027 Pls
2351 1028 Pls
2356 1028 Pls
2361 1027 Pls
2366 1028 Pls
2371 1026 Pls
2376 1027 Pls
2381 1033 Pls
2386 1027 Pls
2391 1025 Pls
2396 1030 Pls
2401 1027 Pls
2405 1028 Pls
2411 1030 Pls
2416 1030 Pls
2420 1028 Pls
2426 1046 Pls
2430 1029 Pls
2435 1026 Pls
2441 1033 Pls
2445 1026 Pls
2450 1028 Pls
2455 1025 Pls
2460 1024 Pls
2465 1029 Pls
2470 1043 Pls
2475 1029 Pls
2480 1028 Pls
2485 1031 Pls
2490 1030 Pls
2495 1027 Pls
2500 1028 Pls
2504 1028 Pls
2510 1026 Pls
2515 1028 Pls
2519 1031 Pls
2525 1028 Pls
2529 1030 Pls
2534 1029 Pls
2540 1026 Pls
2544 1027 Pls
2550 1029 Pls
2554 1026 Pls
2559 1056 Pls
2565 1024 Pls
2569 1026 Pls
2574 1026 Pls
2579 1029 Pls
2584 1026 Pls
2589 1026 Pls
2594 1029 Pls
2599 1027 Pls
2603 1035 Pls
2609 1028 Pls
2614 1030 Pls
2619 1028 Pls
2624 1027 Pls
2628 1031 Pls
2634 1026 Pls
2639 1027 Pls
2643 1032 Pls
2649 1038 Pls
2653 1027 Pls
2658 1029 Pls
2664 1029 Pls
2668 1026 Pls
2673 1028 Pls
2678 1028 Pls
2683 1026 Pls
2688 1025 Pls
2693 1036 Pls
2698 1031 Pls
2703 1026 Pls
2708 1030 Pls
2713 1030 Pls
2718 1028 Pls
2723 1026 Pls
2727 1025 Pls
2733 1031 Pls
2738 1036 Pls
2742 1025 Pls
2748 1029 Pls
2752 1029 Pls
2757 1030 Pls
2763 1029 Pls
2767 1028 Pls
2772 1028 Pls
2777 1028 Pls
2782 1042 Pls
2787 1026 Pls
2792 1028 Pls
2797 1026 Pls
2802 1028 Pls
2807 1026 Pls
2812 1027 Pls
2817 1024 Pls
2822 1027 Pls
2826 1035 Pls
2832 1025 Pls
2837 1030 Pls
2841 1030 Pls
2847 1025 Pls
2851 1026 Pls
2857 1026 Pls
2862 1029 Pls
2866 1025 Pls
2872 1041 Pls
2876 1031 Pls
2881 1028 Pls
2887 1037 Pls
2891 1026 Pls
2896 1028 Pls
2901 1025 Pls
2906 1028 Pls
2911 1036 Pls
2916 1026 Pls
2921 1030 Pls
2926 1026 Pls
2931 1026 Pls
2936 1025 Pls
2941 1027 Pls
2946 1026 Pls
2950 1026 Pls
2956 1038 Pls
2961 1029 Pls
2965 1027 Pls
2971 1028 Pls
2975 1024 Pls
2980 1027 Pls
2986 1024 Pls
2990 1033 Pls
2995 1030 Pls
3000 1032 Pls
3005 1025 Pls
3010 1028 Pls
3015 1030 Pls
3020 1028 Pls
3025 1025 Pls
3030 1027 Pls
3035 1028 Pls
3040 1026 Pls
3045 1034 Pls
3049 1026 Pls
3055 1028 Pls
3060 1025 Pls
3064 1029 Pls
3070 1027 Pls
3074 1026 Pls
3079 1026 Pls
3085 1027 Pls
3089 1027 Pls
3094 1029 Pls
3099 1026 Pls
3104 1028 Pls
3110 1035 Pls
3114 1039 Pls
3119 1025 Pls
3124 1026 Pls
3129 1028 Pls
3134 1043 Pls
3139 1029 Pls
3144 1028 Pls
3148 1027 Pls
3154 1030 Pls
3159 1030 Pls
3163 1025 Pls
3169 1026 Pls
3173 1026 Pls
3179 1037 Pls
3184 1025 Pls
3188 1028 Pls
3194 1033 Pls
3198 1041 Pls
3203 1024 Pls
3209 1028 Pls
3213 1026 Pls
3218 1025 Pls
3223 1033 Pls
3228 1031 Pls
3233 1028 Pls
3238 1035 Pls
3243 1031 Pls
3248 1026 Pls
3253 1026 Pls
3258 1025 Pls
3263 1029 Pls
3268 1028 Pls
3272 1034 Pls
3278 1025 Pls
3283 1027 Pls
3287 1028 Pls
3293 1025 Pls
3297 1029 Pls
3302 1029 Pls
3308 1027 Pls
3312 1037 Pls
3317 1030 Pls
3322 1028 Pls
3327 1025 Pls
3332 1028 Pls
3337 1029 Pls
3342 1026 Pls
3347 1025 Pls
3352 1028 Pls
3357 1037 Pls
3362 1024 Pls
3367 1025 Pls
3371 1030 Pls
3377 1025 Pls
3378 1026 Pls
3382 1029 Pls
3386 1028 Pls
3392 1028 Pls
3396 1025 Pls
3401 1039 Pls
3407 1029 Pls
3411 1025 Pls
3416 1030 Pls
3421 1028 Pls
3426 1026 Pls
3432 1027 Pls
3436 1029 Pls
3441 1028 Pls
3446 1030 Pls
3451 1026 Pls
3456 1026 Pls
3461 1026 Pls
3466 1025 Pls
3470 1024 Pls
3476 1029 Pls
3481 1026 Pls
3485 1025 Pls
3491 1030 Pls
3495 1030 Pls
3501 1028 Pls
3506 1027 Pls
3510 1028 Pls
3516 1027 Pls
3520 1027 Pls
3525 1027 Pls
3531 1029 Pls
3535 1028 Pls
3540 1025 Pls
3545 1028 Pls
3550 1037 Pls
3555 1030 Pls
3560 1028 Pls
3565 1030 Pls
3570 1027 Pls
3575 1033 Pls
3580 1029 Pls
3585 1028 Pls
3590 1026 Pls
3595 1084 Pls
3600 1033 Pls
3605 1032 Pls
3609 1027 Pls
3615 1026 Pls
3619 1028 Pls
3624 1028 Pls
3630 1025 Pls
3634 1028 Pls
3639 1026 Pls
3644 1028 Pls
3649 1026 Pls
3654 1028 Pls
3659 1029 Pls
3664 1048 Pls
3669 1028 Pls
3674 1028 Pls
3679 1025 Pls
3684 1026 Pls
3689 1029 Pls
3693 1027 Pls
3699 1027 Pls
3704 1029 Pls
3708 1045 Pls
3714 1030 Pls
3718 1029 Pls
3723 1028 Pls
3729 1025 Pls
3733 1024 Pls
3739 1028 Pls
3743 1028 Pls
3748 1028 Pls
3754 1039 Pls
3758 1029 Pls
3763 1027 Pls
3768 1032 Pls
3773 1029 Pls
3778 1026 Pls
3783 1028 Pls
3788 1027 Pls
3792 1028 Pls
3798 1035 Pls
3803 1027 Pls
3808 1025 Pls
3813 1028 Pls
3817 1025 Pls
3823 1028 Pls
3828 1033 Pls
3832 1031 Pls
3838 1025 Pls
3842 1048 Pls
3847 1028 Pls
3853 1028 Pls
3857 1027 Pls
3862 1028 Pls
3867 1030 Pls
3872 1028 Pls
3877 1030 Pls
3882 1030 Pls
3887 1034 Pls
3892 1025 Pls
3897 1027 Pls
3902 1026 Pls
3907 1028 Pls
3912 1025 Pls
3916 1026 Pls
3922 1029 Pls
3927 1027 Pls
3931 1030 Pls
3937 1030 Pls
3941 1028 Pls
3946 1036 Pls
3952 1028 Pls
3956 1027 Pls
3961 1029 Pls
3966 1026 Pls
3971 1029 Pls
3976 1033 Pls
3981 1032 Pls
3986 1029 Pls
3991 1029 Pls
3996 1026 Pls
4001 1026 Pls
4006 1029 Pls
4011 1025 Pls
4015 1025 Pls
4021 1037 Pls
4026 1026 Pls
4030 1026 Pls
4036 1027 Pls
4040 1027 Pls
4045 1026 Pls
4051 1029 Pls
4055 1026 Pls
4061 1033 Pls
4065 1032 Pls
4070 1025 Pls
4076 1026 Pls
4080 1029 Pls
4085 1025 Pls
4091 1026 Pls
4095 1031 Pls
4100 1030 Pls
4105 1026 Pls
4110 1035 Pls
4114 1026 Pls
4120 1024 Pls
4125 1032 Pls
4130 1029 Pls
4135 1025 Pls
4139 1026 Pls
4145 1028 Pls
4150 1033 Pls
4154 1028 Pls
4160 1028 Pls
4164 1029 Pls
4169 1030 Pls
4175 1027 Pls
4179 1025 Pls
4184 1030 Pls
4189 1025 Pls
4194 1035 Pls
4199 1033 Pls
4204 1026 Pls
4209 1025 Pls
4214 1028 Pls
4219 1030 Pls
4224 1026 Pls
4229 1028 Pls
4234 1026 Pls
4238 1028 Pls
4244 1025 Pls
4249 1026 Pls
4253 1027 Pls
4259 1027 Pls
4263 1029 Pls
4268 1026 Pls
4274 1026 Pls
4278 1027 Pls
4283 1029 Pls
4288 1028 Pls
4293 1031 Pls
4299 1029 Pls
4303 1029 Pls
4308 1029 Pls
4313 1026 Pls
4318 1032 Pls
4323 1027 Pls
4328 1029 Pls
4333 1030 Pls
4337 1026 Pls
4343 1027 Pls
4348 1026 Pls
4352 1025 Pls
4358 1028 Pls
4362 1030 Pls
4368 1025 Pls
4373 1033 Pls
4377 1030 Pls
4383 1025 Pls
4387 1024 Pls
4392 1030 Pls
4398 1028 Pls
4402 1025 Pls
4407 1027 Pls
4412 1030 Pls
4417 1035 Pls
4422 1030 Pls
4427 1028 Pls
4432 1026 Pls
4437 1028 Pls
4442 1025 Pls
4447 1025 Pls
4452 1029 Pls
4457 1029 Pls
4461 1038 Pls
4467 1029 Pls
4472 1029 Pls
4476 1033 Pls
4482 1030 Pls
4486 1028 Pls
4491 1024 Pls
4497 1027 Pls
4501 1026 Pls
4506 1034 Pls
4511 1028 Pls
4516 1025 Pls
4521 1027 Pls
4526 1028 Pls
4531 1028 Pls
4536 1026 Pls
4541 1028 Pls
4546 1032 Pls
4551 1041 Pls
4556 1028 Pls
4560 1027 Pls
4566 1026 Pls
4571 1029 Pls
4575 1026 Pls
4581 1028 Pls
4586 1030 Pls
4590 1037 Pls
4596 1043 Pls
4600 1027 Pls
4605 1029 Pls
4610 1026 Pls
4615 1025 Pls
4621 1026 Pls
4625 1027 Pls
4630 1025 Pls
4635 1025 Pls
4640 1037 Pls
4645 1026 Pls
4650 1025 Pls
4655 1037 Pls
4659 1026 Pls
4665 1026 Pls
4670 1030 Pls
4674 1028 Pls
4680 1030 Pls
4684 1037 Pls
4690 1028 Pls
4695 1029 Pls
4699 1030 Pls
4705 1025 Pls
4709 1028 Pls
4714 1028 Pls
4720 1029 Pls
4724 1028 Pls
4729 1045 Pls
4734 1029 Pls
4739 1025 Pls
4744 1025 Pls
4749 1030 Pls
4754 1028 Pls
4759 1026 Pls
4764 1026 Pls
4769 1029 Pls
4774 1026 Pls
4779 1030 Pls
4783 1029 Pls
4789 1028 Pls
4794 1028 Pls
4798 1029 Pls
4804 1028 Pls
4808 1025 Pls
4813 1027 Pls
4819 1030 Pls
4823 1028 Pls
4828 1027 Pls
4833 1029 Pls
4838 1026 Pls
4843 1030 Pls
4848 1028 Pls
4853 1028 Pls
4858 1032 Pls
4863 1028 Pls
4867 1026 Pls
4872 1026 Pls
4877 1029 Pls
4882 1029 Pls
4886 1028 Pls
4891 1031 Pls
4896 1029 Pls
4900 1026 Pls
4905 1042 Pls
4909 1029 Pls
4914 1025 Pls
4919 1027 Pls
4923 1025 Pls
4928 1028 Pls
4932 1025 Pls
4937 1027 Pls
4942 1027 Pls
4946 1038 Pls
4951 1028 Pls
4955 1027 Pls
4960 1028 Pls
4965 1027 Pls
4969 1026 Pls
4974 1026 Pls
4978 1029 Pls
4983 1026 Pls
4988 1026 Pls
4992 1037 Pls
4997 1029 Pls
5001 1028 Pls
5006 1028 Pls
5011 1030 Pls
5015 1026 Pls
5020 1028 Pls
5024 1026 Pls
5029 1036 Pls
5034 1029 Pls
5038 1031 Pls
5043 1024 Pls
5047 1026 Pls
5052 1027 Pls
5057 1025 Pls
5061 1026 Pls
5066 1030 Pls
5070 1031 Pls
5075 1035 Pls
5080 1033 Pls
5084 1030 Pls
5089 1026 Pls
5093 1028 Pls
5098 1028 Pls
5103 1029 Pls
5107 1027 Pls
5112 1028 Pls
5116 1030 Pls
5121 1029 Pls
5126 1041 Pls
5130 1030 Pls
5135 1028 Pls
5139 1031 Pls
5144 1026 Pls
5149 1027 Pls
5153 1030 Pls
5158 1027 Pls
5162 1025 Pls
5167 1038 Pls
5172 1027 Pls
5176 1031 Pls
5181 1028 Pls
5185 1037 Pls
5190 1028 Pls
5195 1026 Pls
5199 1026 Pls
5204 1030 Pls
5208 1025 Pls
5213 1037 Pls
5218 1028 Pls
5222 1025 Pls
5227 1030 Pls
5231 1025 Pls
5236 1027 Pls
5241 1027 Pls
5245 1028 Pls
5250 1025 Pls
5254 1026 Pls
5259 1038 Pls
5264 1029 Pls
5268 1026 Pls
5273 1026 Pls
5277 1028 Pls
5282 1030 Pls
5287 1025 Pls
5291 1025 Pls
5296 1026 Pls
5300 1034 Pls
5305 1027 Pls
5310 1024 Pls
5314 1027 Pls
5319 1026 Pls
5323 1028 Pls
5328 1027 Pls
5333 1028 Pls
5337 1028 Pls
5342 1026 Pls
5346 1038 Pls
5351 1026 Pls
5356 1025 Pls
5360 1028 Pls
5365 1028 Pls
5369 1030 Pls
5374 1027 Pls
5379 1026 Pls
5383 1026 Pls
5388 1030 Pls
5392 1035 Pls
5397 1028 Pls
5402 1028 Pls
5406 1027 Pls
5411 1025 Pls
5415 1024 Pls
5420 1029 Pls
5425 1028 Pls
5429 1026 Pls
5434 1044 Pls
5438 1029 Pls
5443 1030 Pls
5448 1026 Pls
5452 1025 Pls
5457 1029 Pls
5461 1024 Pls
5466 1025 Pls
5471 1028 Pls
5475 1026 Pls
5480 1028 Pls
5484 1026 Pls
5489 1027 Pls
5494 1028 Pls
5498 1025 Pls
5503 1026 Pls
5507 1027 Pls
5512 1030 Pls
5517 1028 Pls
5521 1038 Pls
5526 1028 Pls
5530 1029 Pls
5535 1030 Pls
5540 1037 Pls
5544 1026 Pls
5549 1028 Pls
5553 1028 Pls
5558 1028 Pls
5563 1026 Pls
5567 1033 Pls
5572 1025 Pls
5576 1025 Pls
5581 1030 Pls
5586 1027 Pls
5590 1028 Pls
5595 1025 Pls
5599 1032 Pls
5604 1025 Pls
5609 1026 Pls
5613 1049 Pls
5618 1029 Pls
5622 1025 Pls
5627 1029 Pls
5632 1028 Pls
5636 1028 Pls
5641 1026 Pls
5645 1028 Pls
5650 1028 Pls
5655 1034 Pls
5659 1025 Pls
5664 1025 Pls
5668 1026 Pls
5673 1028 Pls
5678 1025 Pls
5682 1027 Pls
5687 1030 Pls
5691 1026 Pls
5696 1029 Pls
5701 1028 Pls
5705 1027 Pls
5710 1028 Pls
5714 1030 Pls
5719 1027 Pls
5724 1028 Pls
5728 1028 Pls
5733 1027 Pls
5737 1028 Pls
5742 1028 Pls
5747 1027 Pls
5751 1025 Pls
5756 1028 Pls
5760 1026 Pls
5765 1028 Pls
5770 1025 Pls
5774 1025 Pls
5779 1028 Pls
5783 1026 Pls
5788 1039 Pls
5793 1030 Pls
5797 1026 Pls
5802 1027 Pls
5806 1028 Pls
5811 1028 Pls
5816 1025 Pls
5820 1026 Pls
5825 1026 Pls
5829 1029 Pls
5834 1035 Pls
5839 1026 Pls
5843 1026 Pls
5848 1027 Pls
5852 1025 Pls
5857 1025 Pls
5862 1027 Pls
5866 1027 Pls
5871 1025 Pls
5875 1031 Pls
5880 1028 Pls
5885 1031 Pls
5889 1029 Pls
5894 1031 Pls
5898 1030 Pls
5903 1029 Pls
5908 1029 Pls
5912 1025 Pls
5917 1028 Pls
5921 1028 Pls
5926 1027 Pls
5931 1025 Pls
5935 1031 Pls
5940 1028 Pls
5944 1027 Pls
5949 1030 Pls
5954 1028 Pls
5958 1024 Pls
5963 1027 Pls
5967 1046 Pls
5972 1030 Pls
5977 1028 Pls
5981 1028 Pls
5986 1031 Pls
5990 1033 Pls
5995 1033 Pls
6000 1028 Pls
6004 1025 Pls
6009 1044 Pls
6013 1028 Pls
6018 1027 Pls
6023 1027 Pls
6027 1027 Pls
6032 1026 Pls
6036 1029 Pls
6041 1026 Pls
6046 1026 Pls
6050 1028 Pls
6055 1035 Pls
6059 1028 Pls
6064 1026 Pls
6069 1037 Pls
6073 1026 Pls
6078 1026 Pls
6082 1028 Pls
6087 1028 Pls
6092 1025 Pls
6096 1038 Pls
6101 1028 Pls
6105 1029 Pls
6110 1028 Pls
6115 1026 Pls
6119 1028 Pls
6124 1027 Pls
6128 1027 Pls
6133 1028 Pls
6138 1029 Pls
6142 1049 Pls
6147 1029 Pls
6151 1027 Pls
6156 1024 Pls
6161 1027 Pls
6165 1026 Pls
6170 1028 Pls
6174 1027 Pls
6179 1025 Pls
6184 1026 Pls
6188 1036 Pls
6193 1028 Pls
6197 1028 Pls
6202 1030 Pls
6207 1029 Pls
6211 1027 Pls
6216 1027 Pls
6220 1028 Pls
6225 1025 Pls
6230 1035 Pls
6234 1028 Pls
6239 1030 Pls
6243 1028 Pls
6248 1038 Pls
6253 1030 Pls
6257 1027 Pls
6262 1028 Pls
6266 1029 Pls
6271 1030 Pls
6276 1036 Pls
6280 1029 Pls
6285 1025 Pls
6289 1027 Pls
6294 1029 Pls
6299 1028 Pls
6303 1026 Pls
6308 1026 Pls
6312 1024 Pls
6317 1033 Pls
6322 1034 Pls
6326 1027 Pls
6331 1025 Pls
6335 1027 Pls
6340 1027 Pls
6345 1027 Pls
6349 1026 Pls
6354 1028 Pls
6358 1026 Pls
6363 1032 Pls
6368 1025 Pls
6372 1027 Pls
6377 1029 Pls
6381 1028 Pls
6386 1024 Pls
6391 1028 Pls
6395 1027 Pls
6400 1026 Pls
6404 1028 Pls
6409 1033 Pls
6414 1026 Pls
6418 1025 Pls
6423 1027 Pls
6427 1028 Pls
6432 1029 Pls
6437 1024 Pls
6441 1027 Pls
6446 1031 Pls
6450 1041 Pls
6455 1038 Pls
6460 1028 Pls
6464 1028 Pls
6469 1028 Pls
6473 1028 Pls
6478 1024 Pls
6483 1032 Pls
6487 1025 Pls
6492 1027 Pls
6496 1040 Pls
6501 1028 Pls
6506 1026 Pls
6510 1025 Pls
6515 1029 Pls
6519 1027 Pls
6524 1030 Pls
6529 1032 Pls
6533 1029 Pls
6538 1028 Pls
6542 1035 Pls
6547 1027 Pls
6552 1029 Pls
6556 1027 Pls
6561 1026 Pls
6565 1026 Pls
6570 1030 Pls
6575 1027 Pls
6579 1029 Pls
6584 1038 Pls
6588 1028 Pls
6593 1026 Pls
6598 1025 Pls
6602 1030 Pls
6607 1027 Pls
6611 1027 Pls
6616 1027 Pls
6621 1028 Pls
6625 1030 Pls
6630 1039 Pls
6634 1026 Pls
6639 1028 Pls
6644 1028 Pls
6648 1026 Pls
6653 1029 Pls
6657 1026 Pls
6662 1027 Pls
6667 1025 Pls
6671 1038 Pls
6676 1037 Pls
6680 1026 Pls
6685 1027 Pls
6690 1025 Pls
6694 1028 Pls
6699 1026 Pls
6703 1024 Pls
6708 1026 Pls
6713 1029 Pls
6717 1040 Pls
6722 1025 Pls
6726 1026 Pls
6731 1030 Pls
6736 1025 Pls
6740 1027 Pls
6745 1025 Pls
6749 1029 Pls
6754 1028 Pls
6759 1029 Pls
6763 1035 Pls
6768 1029 Pls
6772 1028 Pls
6777 1034 Pls
6782 1026 Pls
6786 1026 Pls
6791 1025 Pls
6795 1025 Pls
6800 1029 Pls
6805 1034 Pls
6809 1028 Pls
6814 1030 Pls
6818 1028 Pls
6823 1030 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
