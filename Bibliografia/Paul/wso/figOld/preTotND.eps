%!PS-Adobe-2.0 EPSF-2.0
%%Title: preTotND.tex
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu Mar 27 16:46:54 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (preTotND.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Paul Regnier,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 27 16:46:54 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1518 660 M
63 0 V
5245 0 R
-63 0 V
1518 1483 M
63 0 V
5245 0 R
-63 0 V
1518 2306 M
63 0 V
5245 0 R
-63 0 V
1518 3130 M
63 0 V
5245 0 R
-63 0 V
1518 3953 M
63 0 V
5245 0 R
-63 0 V
1518 4776 M
63 0 V
5245 0 R
-63 0 V
1518 660 M
0 63 V
0 4053 R
0 -63 V
2403 660 M
0 63 V
0 4053 R
0 -63 V
3287 660 M
0 63 V
0 4053 R
0 -63 V
4172 660 M
0 63 V
0 4053 R
0 -63 V
5057 660 M
0 63 V
0 4053 R
0 -63 V
5941 660 M
0 63 V
0 4053 R
0 -63 V
6826 660 M
0 63 V
0 4053 R
0 -63 V
stroke
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LTb
1519 1101 Pls
1523 1066 Pls
1529 1074 Pls
1533 1074 Pls
1538 1101 Pls
1544 1049 Pls
1548 1116 Pls
1553 1060 Pls
1558 1069 Pls
1563 1077 Pls
1568 1066 Pls
1573 1071 Pls
1578 1058 Pls
1583 1060 Pls
1588 1335 Pls
1593 1071 Pls
1598 1081 Pls
1603 1098 Pls
1607 1060 Pls
1613 1073 Pls
1618 1060 Pls
1622 1056 Pls
1628 1074 Pls
1632 1054 Pls
1637 1076 Pls
1643 1135 Pls
1647 1080 Pls
1652 1064 Pls
1657 1080 Pls
1662 1052 Pls
1668 1081 Pls
1672 1191 Pls
1677 1071 Pls
1682 1327 Pls
1687 1078 Pls
1692 1063 Pls
1697 1119 Pls
1702 1083 Pls
1706 1180 Pls
1712 1182 Pls
1717 1050 Pls
1721 1218 Pls
1727 1067 Pls
1731 1333 Pls
1737 1088 Pls
1742 1173 Pls
1746 1327 Pls
1752 1079 Pls
1756 1072 Pls
1761 1112 Pls
1767 1088 Pls
1771 1094 Pls
1776 1060 Pls
1781 1081 Pls
1786 1085 Pls
1791 1077 Pls
1796 1316 Pls
1801 1266 Pls
1806 1060 Pls
1811 1061 Pls
1816 1083 Pls
1821 1055 Pls
1826 1090 Pls
1830 1059 Pls
1836 1315 Pls
1841 1062 Pls
1845 1060 Pls
1851 1054 Pls
1855 1072 Pls
1860 1123 Pls
1866 1059 Pls
1870 1098 Pls
1875 1111 Pls
1880 1181 Pls
1885 1046 Pls
1890 1107 Pls
1895 1060 Pls
1900 1054 Pls
1905 1088 Pls
1907 1108 Pls
1910 1088 Pls
1915 1090 Pls
1920 1075 Pls
1925 1100 Pls
1929 1058 Pls
1935 1079 Pls
1940 1050 Pls
1944 1051 Pls
1950 1067 Pls
1954 1344 Pls
1959 1077 Pls
1965 1105 Pls
1969 1058 Pls
1974 1104 Pls
1979 1075 Pls
1984 1112 Pls
1990 1061 Pls
1994 1074 Pls
1996 1292 Pls
1999 1061 Pls
2004 1073 Pls
2009 1068 Pls
2014 1084 Pls
2019 1052 Pls
2024 1067 Pls
2028 1058 Pls
2034 1060 Pls
2039 1061 Pls
2043 1071 Pls
2049 1314 Pls
2053 1246 Pls
2059 1050 Pls
2064 1066 Pls
2068 1114 Pls
2074 1083 Pls
2078 1059 Pls
2083 1064 Pls
2084 1053 Pls
2089 1074 Pls
2093 1077 Pls
2098 1084 Pls
2103 1055 Pls
2108 1067 Pls
2113 1063 Pls
2118 1065 Pls
2123 1073 Pls
2128 1055 Pls
2133 1066 Pls
2138 1079 Pls
2143 1066 Pls
2148 1065 Pls
2152 1077 Pls
2158 1060 Pls
2163 1168 Pls
2167 1199 Pls
2173 1119 Pls
2177 1065 Pls
2182 1243 Pls
2188 1109 Pls
2192 1049 Pls
2197 1053 Pls
2202 1202 Pls
2207 1046 Pls
2212 1352 Pls
2217 1043 Pls
2222 1051 Pls
2227 1087 Pls
2232 1065 Pls
2237 1067 Pls
2242 1058 Pls
2247 1067 Pls
2251 1046 Pls
2257 1098 Pls
2262 1053 Pls
2266 1049 Pls
2272 1084 Pls
2276 1065 Pls
2281 1042 Pls
2287 1088 Pls
2291 1074 Pls
2297 1069 Pls
2301 1058 Pls
2306 1070 Pls
2312 1049 Pls
2316 1060 Pls
2321 1090 Pls
2326 1050 Pls
2331 1068 Pls
2336 1221 Pls
2341 1046 Pls
2346 1105 Pls
2350 1265 Pls
2356 1165 Pls
2361 1088 Pls
2366 1039 Pls
2371 1100 Pls
2375 1083 Pls
2381 1048 Pls
2386 1282 Pls
2390 1104 Pls
2396 1052 Pls
2400 1104 Pls
2405 1105 Pls
2411 1076 Pls
2415 1053 Pls
2420 1105 Pls
2425 1045 Pls
2430 1044 Pls
2435 1048 Pls
2440 1060 Pls
2445 1088 Pls
2450 1144 Pls
2455 1074 Pls
2460 1213 Pls
2465 1063 Pls
2470 1103 Pls
2474 1050 Pls
2480 1077 Pls
2485 1296 Pls
2489 1184 Pls
2495 1051 Pls
2499 1059 Pls
2504 1093 Pls
2510 1064 Pls
2514 1187 Pls
2519 1280 Pls
2524 1081 Pls
2529 1101 Pls
2534 1046 Pls
2539 1047 Pls
2544 1356 Pls
2549 1065 Pls
2554 1138 Pls
2559 1071 Pls
2564 1047 Pls
2569 1055 Pls
2573 1047 Pls
2579 1065 Pls
2584 1095 Pls
2588 1175 Pls
2594 1048 Pls
2598 1061 Pls
2603 1079 Pls
2609 1104 Pls
2613 1082 Pls
2619 1315 Pls
2623 1075 Pls
2628 1211 Pls
2634 1065 Pls
2638 1082 Pls
2643 1088 Pls
2648 1051 Pls
2653 1072 Pls
2658 1230 Pls
2663 1090 Pls
2668 1091 Pls
2672 1051 Pls
2678 1298 Pls
2683 1069 Pls
2688 1084 Pls
2693 1064 Pls
2697 1080 Pls
2703 1048 Pls
2708 1056 Pls
2712 1161 Pls
2718 1268 Pls
2722 1060 Pls
2727 1037 Pls
2733 1066 Pls
2737 1060 Pls
2742 1057 Pls
2747 1080 Pls
2752 1056 Pls
2757 1230 Pls
2762 1056 Pls
2767 1041 Pls
2772 1046 Pls
2777 1056 Pls
2782 1067 Pls
2787 1190 Pls
2792 1073 Pls
2796 1061 Pls
2802 1093 Pls
2807 1051 Pls
2811 1337 Pls
2817 1042 Pls
2821 1074 Pls
2826 1068 Pls
2832 1267 Pls
2836 1053 Pls
2841 1043 Pls
2846 1109 Pls
2851 1063 Pls
2857 1060 Pls
2861 1062 Pls
2866 1054 Pls
2871 1056 Pls
2876 1066 Pls
2881 1055 Pls
2886 1056 Pls
2891 1056 Pls
2895 1056 Pls
2901 1057 Pls
2906 1065 Pls
2910 1065 Pls
2916 1148 Pls
2920 1175 Pls
2926 1064 Pls
2931 1073 Pls
2935 1323 Pls
2941 1084 Pls
2945 1072 Pls
2950 1040 Pls
2956 1108 Pls
2960 1060 Pls
2965 1064 Pls
2970 1113 Pls
2975 1048 Pls
2980 1043 Pls
2985 1063 Pls
2990 1072 Pls
2995 1070 Pls
3000 1181 Pls
3005 1065 Pls
3010 1094 Pls
3015 1050 Pls
3019 1049 Pls
3025 1077 Pls
3030 1121 Pls
3034 1072 Pls
3040 1064 Pls
3044 1064 Pls
3049 1054 Pls
3055 1112 Pls
3057 1077 Pls
3059 1175 Pls
3064 1086 Pls
3069 1083 Pls
3074 1085 Pls
3079 1079 Pls
3084 1062 Pls
3089 1072 Pls
3094 1178 Pls
3099 1159 Pls
3104 1098 Pls
3109 1037 Pls
3114 1077 Pls
3118 1113 Pls
3124 1114 Pls
3129 1060 Pls
3133 1068 Pls
3139 1226 Pls
3143 1051 Pls
3146 1083 Pls
3148 1177 Pls
3154 1066 Pls
3158 1081 Pls
3163 1054 Pls
3168 1072 Pls
3173 1070 Pls
3179 1293 Pls
3183 1160 Pls
3188 1061 Pls
3193 1204 Pls
3198 1052 Pls
3203 1161 Pls
3208 1070 Pls
3213 1065 Pls
3217 1149 Pls
3223 1061 Pls
3228 1104 Pls
3232 1060 Pls
3234 1052 Pls
3238 1055 Pls
3242 1078 Pls
3248 1062 Pls
3253 1083 Pls
3257 1053 Pls
3263 1091 Pls
3267 1056 Pls
3272 1081 Pls
3278 1077 Pls
3282 1057 Pls
3287 1068 Pls
3292 1313 Pls
3297 1052 Pls
3302 1177 Pls
3307 1039 Pls
3312 1068 Pls
3317 1046 Pls
3322 1062 Pls
3327 1059 Pls
3332 1329 Pls
3337 1052 Pls
3341 1048 Pls
3347 1054 Pls
3352 1054 Pls
3356 1136 Pls
3362 1098 Pls
3366 1073 Pls
3371 1093 Pls
3377 1098 Pls
3381 1053 Pls
3386 1067 Pls
3391 1051 Pls
3396 1060 Pls
3401 1104 Pls
3406 1186 Pls
3411 1074 Pls
3416 1177 Pls
3421 1074 Pls
3426 1044 Pls
3431 1056 Pls
3436 1291 Pls
3440 1060 Pls
3446 1059 Pls
3451 1051 Pls
3455 1081 Pls
3461 1266 Pls
3465 1051 Pls
3470 1087 Pls
3476 1068 Pls
3480 1051 Pls
3485 1064 Pls
3490 1097 Pls
3495 1052 Pls
3501 1058 Pls
3505 1079 Pls
3510 1064 Pls
3515 1121 Pls
3520 1063 Pls
3525 1060 Pls
3530 1049 Pls
3535 1119 Pls
3539 1053 Pls
3545 1071 Pls
3550 1097 Pls
3555 1084 Pls
3560 1059 Pls
3564 1044 Pls
3570 1082 Pls
3575 1130 Pls
3579 1050 Pls
3585 1054 Pls
3589 1076 Pls
3594 1114 Pls
3600 1128 Pls
3604 1072 Pls
3609 1060 Pls
3614 1058 Pls
3619 1070 Pls
3624 1191 Pls
3629 1086 Pls
3634 1057 Pls
3639 1065 Pls
3644 1060 Pls
3649 1046 Pls
3654 1083 Pls
3659 1279 Pls
3663 1058 Pls
3669 1062 Pls
3674 1081 Pls
3678 1057 Pls
3684 1104 Pls
3688 1345 Pls
3693 1072 Pls
3699 1077 Pls
3703 1164 Pls
3708 1053 Pls
3713 1144 Pls
3718 1047 Pls
3723 1165 Pls
3728 1042 Pls
3733 1095 Pls
3738 1186 Pls
3743 1059 Pls
3748 1109 Pls
3753 1057 Pls
3758 1341 Pls
3762 1105 Pls
3768 1092 Pls
3773 1081 Pls
3777 1070 Pls
3783 1082 Pls
3787 1093 Pls
3792 1049 Pls
3798 1058 Pls
3802 1060 Pls
3808 1063 Pls
3812 1083 Pls
3817 1065 Pls
3823 1062 Pls
3827 1077 Pls
3832 1051 Pls
3837 1097 Pls
3842 1046 Pls
3847 1096 Pls
3852 1047 Pls
3857 1061 Pls
3861 1070 Pls
3867 1046 Pls
3872 1081 Pls
3877 1263 Pls
3882 1184 Pls
3886 1090 Pls
3892 1064 Pls
3897 1095 Pls
3901 1079 Pls
3907 1086 Pls
3911 1114 Pls
3916 1062 Pls
3922 1063 Pls
3926 1064 Pls
3931 1082 Pls
3936 1077 Pls
3941 1068 Pls
3946 1077 Pls
3951 1040 Pls
3956 1058 Pls
3961 1067 Pls
3966 1074 Pls
3971 1107 Pls
3976 1063 Pls
3981 1245 Pls
3985 1098 Pls
3991 1063 Pls
3996 1089 Pls
4000 1065 Pls
4006 1176 Pls
4010 1071 Pls
4015 1058 Pls
4021 1055 Pls
4025 1058 Pls
4030 1058 Pls
4035 1438 Pls
4040 1209 Pls
4045 1078 Pls
4050 1091 Pls
4055 1085 Pls
4060 1059 Pls
4065 1114 Pls
4070 1169 Pls
4075 1054 Pls
4080 1344 Pls
4084 1081 Pls
4090 1081 Pls
4095 1277 Pls
4099 1065 Pls
4105 1069 Pls
4109 1068 Pls
4114 1053 Pls
4120 1073 Pls
4124 1071 Pls
4130 1067 Pls
4134 1150 Pls
4139 1059 Pls
4145 1078 Pls
4149 1046 Pls
4154 1066 Pls
4159 1315 Pls
4164 1221 Pls
4169 1187 Pls
4174 1053 Pls
4179 1057 Pls
4184 1186 Pls
4189 1058 Pls
4194 1070 Pls
4199 1062 Pls
4204 1054 Pls
4208 1050 Pls
4214 1105 Pls
4219 1078 Pls
4223 1076 Pls
4229 1082 Pls
4233 1054 Pls
4238 1227 Pls
4244 1060 Pls
4248 1049 Pls
4253 1106 Pls
4258 1081 Pls
4263 1064 Pls
4268 1063 Pls
4273 1282 Pls
4278 1070 Pls
4283 1064 Pls
4288 1053 Pls
4293 1051 Pls
4296 1071 Pls
4298 1059 Pls
4303 1084 Pls
4307 1098 Pls
4313 1073 Pls
4318 1068 Pls
4322 1101 Pls
4328 1088 Pls
4332 1175 Pls
4337 1047 Pls
4343 1086 Pls
4347 1067 Pls
4352 1053 Pls
4357 1056 Pls
4362 1056 Pls
4368 1054 Pls
4372 1050 Pls
4377 1081 Pls
4382 1061 Pls
4384 1153 Pls
4387 1112 Pls
4392 1087 Pls
4397 1057 Pls
4402 1082 Pls
4406 1139 Pls
4412 1073 Pls
4417 1179 Pls
4421 1091 Pls
4427 1065 Pls
4431 1193 Pls
4437 1064 Pls
4442 1071 Pls
4446 1317 Pls
4452 1138 Pls
4456 1049 Pls
4461 1056 Pls
4467 1108 Pls
4471 1070 Pls
4473 1048 Pls
4476 1115 Pls
4481 1074 Pls
4486 1258 Pls
4491 1062 Pls
4496 1084 Pls
4501 1092 Pls
4506 1072 Pls
4511 1126 Pls
4516 1056 Pls
4521 1082 Pls
4526 1065 Pls
4530 1058 Pls
4536 1055 Pls
4541 1069 Pls
4545 1111 Pls
4551 1074 Pls
4555 1056 Pls
4560 1218 Pls
4566 1068 Pls
4570 1064 Pls
4575 1076 Pls
4580 1190 Pls
4585 1056 Pls
4590 1072 Pls
4595 1068 Pls
4600 1087 Pls
4605 1064 Pls
4610 1043 Pls
4615 1087 Pls
4620 1085 Pls
4625 1078 Pls
4629 1080 Pls
4635 1063 Pls
4640 1069 Pls
4644 1056 Pls
4650 1128 Pls
4654 1077 Pls
4659 1060 Pls
4665 1158 Pls
4669 1064 Pls
4674 1112 Pls
4679 1070 Pls
4684 1092 Pls
4690 1094 Pls
4694 1069 Pls
4699 1087 Pls
4704 1084 Pls
4709 1068 Pls
4714 1067 Pls
4719 1044 Pls
4724 1067 Pls
4728 1065 Pls
4734 1053 Pls
4739 1056 Pls
4743 1054 Pls
4749 1065 Pls
4753 1074 Pls
4759 1049 Pls
4764 1077 Pls
4768 1058 Pls
4774 1341 Pls
4778 1084 Pls
4783 1345 Pls
4789 1108 Pls
4793 1082 Pls
4798 1077 Pls
4803 1052 Pls
4808 1070 Pls
4813 1085 Pls
4818 1264 Pls
4823 1107 Pls
4828 1063 Pls
4833 1065 Pls
4838 1058 Pls
4843 1105 Pls
4848 1077 Pls
4852 1068 Pls
4858 1106 Pls
4863 1076 Pls
4867 1059 Pls
4873 1072 Pls
4877 1048 Pls
4882 1060 Pls
4888 1237 Pls
4892 1063 Pls
4897 1078 Pls
4902 1062 Pls
4907 1067 Pls
4912 1047 Pls
4915 1073 Pls
4917 1058 Pls
4922 1222 Pls
4927 1186 Pls
4932 1067 Pls
4937 1048 Pls
4942 1198 Pls
4947 1055 Pls
4951 1080 Pls
4957 1101 Pls
4962 1057 Pls
4966 1059 Pls
4972 1057 Pls
4976 1077 Pls
4981 1105 Pls
4987 1072 Pls
4991 1060 Pls
4997 1056 Pls
5001 1074 Pls
5004 1061 Pls
5006 1088 Pls
5012 1054 Pls
5016 1074 Pls
5021 1051 Pls
5026 1075 Pls
5031 1079 Pls
5036 1052 Pls
5041 1100 Pls
5046 1078 Pls
5050 1042 Pls
5056 1048 Pls
5061 1057 Pls
5066 1144 Pls
5071 1070 Pls
5075 1053 Pls
5081 1083 Pls
5086 1116 Pls
5090 1060 Pls
5092 1078 Pls
5096 1051 Pls
5100 1131 Pls
5105 1075 Pls
5111 1056 Pls
5115 1084 Pls
5120 1063 Pls
5125 1055 Pls
5130 1080 Pls
5135 1136 Pls
5140 1049 Pls
5145 1085 Pls
5150 1098 Pls
5155 1052 Pls
5160 1297 Pls
5165 1097 Pls
5170 1077 Pls
5174 1089 Pls
5180 1047 Pls
5185 1055 Pls
5189 1056 Pls
5195 1058 Pls
5199 1050 Pls
5204 1076 Pls
5210 1050 Pls
5214 1048 Pls
5219 1074 Pls
5224 1093 Pls
5229 1178 Pls
5234 1096 Pls
5239 1213 Pls
5244 1115 Pls
5249 1078 Pls
5254 1056 Pls
5259 1051 Pls
5264 1046 Pls
5269 1063 Pls
5273 1071 Pls
5279 1114 Pls
5284 1057 Pls
5288 1058 Pls
5294 1114 Pls
5298 1075 Pls
5303 1060 Pls
5309 1077 Pls
5313 1137 Pls
5319 1056 Pls
5323 1071 Pls
5328 1070 Pls
5334 1050 Pls
5338 1050 Pls
5343 1050 Pls
5348 1030 Pls
5353 1070 Pls
5358 1160 Pls
5363 1216 Pls
5368 1051 Pls
5372 1072 Pls
5378 1050 Pls
5383 1054 Pls
5388 1219 Pls
5393 1061 Pls
5397 1060 Pls
5403 1049 Pls
5408 1091 Pls
5412 1163 Pls
5418 1179 Pls
5422 1097 Pls
5427 1097 Pls
5433 1074 Pls
5437 1051 Pls
5442 1047 Pls
5447 1096 Pls
5452 1066 Pls
5457 1047 Pls
5462 1049 Pls
5467 1079 Pls
5472 1076 Pls
5477 1057 Pls
5482 1055 Pls
5487 1045 Pls
5492 1073 Pls
5496 1292 Pls
5502 1056 Pls
5507 1268 Pls
5511 1053 Pls
5517 1046 Pls
5521 1058 Pls
5526 1086 Pls
5532 1086 Pls
5536 1061 Pls
5541 1157 Pls
5546 1085 Pls
5551 1068 Pls
5557 1060 Pls
5561 1038 Pls
5566 1126 Pls
5571 1075 Pls
5576 1072 Pls
5581 1068 Pls
5586 1055 Pls
5591 1074 Pls
5595 1063 Pls
5601 1085 Pls
5606 1084 Pls
5610 1065 Pls
5616 1061 Pls
5620 1178 Pls
5626 1055 Pls
5631 1055 Pls
5635 1057 Pls
5641 1068 Pls
5645 1055 Pls
5650 1048 Pls
5656 1070 Pls
5660 1051 Pls
5665 1092 Pls
5670 1130 Pls
5675 1081 Pls
5680 1056 Pls
5685 1059 Pls
5690 1084 Pls
5695 1082 Pls
5700 1088 Pls
5705 1083 Pls
5710 1111 Pls
5715 1120 Pls
5719 1070 Pls
5725 1081 Pls
5730 1091 Pls
5734 1076 Pls
5740 1070 Pls
5744 1067 Pls
5749 1067 Pls
5755 1228 Pls
5759 1063 Pls
5764 1070 Pls
5769 1055 Pls
5774 1067 Pls
5779 1052 Pls
5784 1054 Pls
5789 1169 Pls
5794 1051 Pls
5799 1075 Pls
5804 1091 Pls
5809 1077 Pls
5814 1079 Pls
5818 1064 Pls
5824 1074 Pls
5829 1092 Pls
5833 1055 Pls
5839 1075 Pls
5843 1100 Pls
5848 1057 Pls
5854 1057 Pls
5858 1070 Pls
5863 1082 Pls
5868 1045 Pls
5873 1177 Pls
5879 1081 Pls
5883 1070 Pls
5888 1268 Pls
5893 1081 Pls
5898 1052 Pls
5903 1068 Pls
5908 1116 Pls
5913 1058 Pls
5917 1084 Pls
5923 1057 Pls
5928 1053 Pls
5932 1058 Pls
5938 1075 Pls
5942 1076 Pls
5948 1093 Pls
5953 1049 Pls
5957 1083 Pls
5963 1081 Pls
5967 1059 Pls
5972 1162 Pls
5978 1062 Pls
5982 1051 Pls
5987 1059 Pls
5992 1060 Pls
5997 1192 Pls
6002 1107 Pls
6007 1085 Pls
6012 1074 Pls
6017 1064 Pls
6022 1075 Pls
6027 1043 Pls
6032 1051 Pls
6037 1053 Pls
6041 1086 Pls
6047 1088 Pls
6052 1136 Pls
6056 1044 Pls
6062 1049 Pls
6066 1062 Pls
6071 1044 Pls
6077 1158 Pls
6081 1105 Pls
6086 1233 Pls
6091 1046 Pls
6096 1056 Pls
6101 1040 Pls
6106 1182 Pls
6111 1073 Pls
6116 1058 Pls
6121 1073 Pls
6126 1050 Pls
6131 1077 Pls
6136 1109 Pls
6140 1052 Pls
6146 1047 Pls
6151 1067 Pls
6155 1066 Pls
6161 1047 Pls
6165 1069 Pls
6170 1049 Pls
6176 1062 Pls
6180 1063 Pls
6186 1059 Pls
6190 1063 Pls
6195 1138 Pls
6201 1053 Pls
6205 1187 Pls
6210 1068 Pls
6215 1061 Pls
6220 1163 Pls
6225 1084 Pls
6230 1055 Pls
6235 1230 Pls
6239 1063 Pls
6245 1099 Pls
6250 1080 Pls
6255 1049 Pls
6260 1064 Pls
6264 1086 Pls
6270 1099 Pls
6275 1045 Pls
6279 1075 Pls
6285 1059 Pls
6289 1312 Pls
6294 1180 Pls
6300 1097 Pls
6304 1074 Pls
6309 1073 Pls
6314 1172 Pls
6319 1053 Pls
6324 1061 Pls
6329 1080 Pls
6334 1077 Pls
6339 1042 Pls
6344 1048 Pls
6349 1070 Pls
6354 1100 Pls
6359 1077 Pls
6363 1054 Pls
6369 1063 Pls
6374 1079 Pls
6378 1070 Pls
6384 1066 Pls
6388 1064 Pls
6393 1058 Pls
6399 1062 Pls
6403 1066 Pls
6408 1063 Pls
6413 1159 Pls
6418 1082 Pls
6423 1052 Pls
6428 1063 Pls
6433 1104 Pls
6438 1069 Pls
6443 1061 Pls
6448 1058 Pls
6453 1237 Pls
6458 1051 Pls
6462 1172 Pls
6468 1186 Pls
6473 1202 Pls
6477 1051 Pls
6483 1081 Pls
6487 1320 Pls
6492 1052 Pls
6498 1156 Pls
6502 1090 Pls
6508 1065 Pls
6512 1100 Pls
6517 1107 Pls
6523 1085 Pls
6527 1069 Pls
6532 1057 Pls
6537 1070 Pls
6542 1074 Pls
6547 1050 Pls
6552 1049 Pls
6557 1060 Pls
6561 1061 Pls
6567 1060 Pls
6572 1077 Pls
6577 1102 Pls
6582 1088 Pls
6586 1071 Pls
6592 1061 Pls
6597 1086 Pls
6601 1119 Pls
6607 1093 Pls
6611 1091 Pls
6616 1065 Pls
6622 1063 Pls
6626 1088 Pls
6631 1061 Pls
6636 1058 Pls
6641 1155 Pls
6646 1119 Pls
6651 1111 Pls
6656 1065 Pls
6661 1138 Pls
6666 1064 Pls
6671 1060 Pls
6676 1043 Pls
6681 1080 Pls
6684 1074 Pls
6685 1179 Pls
6691 1069 Pls
6696 1061 Pls
6700 1123 Pls
6706 1202 Pls
6710 1075 Pls
6715 1094 Pls
6721 1100 Pls
6725 1056 Pls
6730 1181 Pls
6735 1092 Pls
6740 1349 Pls
6745 1075 Pls
6750 1099 Pls
6755 1072 Pls
6760 1167 Pls
6765 1061 Pls
6770 1044 Pls
6773 1230 Pls
6775 1126 Pls
6780 1054 Pls
6784 1054 Pls
6790 1058 Pls
6795 1068 Pls
6799 1185 Pls
6805 1046 Pls
6809 1096 Pls
6814 1081 Pls
6820 1073 Pls
6824 1081 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1518 4776 N
0 -4116 V
5308 0 V
0 4116 V
-5308 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
