%!PS-Adobe-2.0 EPSF-2.0
%%Title: xenSem.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Tue May 13 11:23:00 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (xenSem.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 13 11:23:00 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 594 M
63 0 V
5597 0 R
-63 0 V
1166 1117 M
63 0 V
5597 0 R
-63 0 V
1166 1640 M
63 0 V
5597 0 R
-63 0 V
1166 2162 M
63 0 V
5597 0 R
-63 0 V
1166 2685 M
63 0 V
5597 0 R
-63 0 V
1166 3208 M
63 0 V
5597 0 R
-63 0 V
1166 3731 M
63 0 V
5597 0 R
-63 0 V
1166 4253 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1167 1533 Pls
1173 1520 Pls
1177 1531 Pls
1183 1526 Pls
1188 1527 Pls
1193 1556 Pls
1199 1566 Pls
1204 1524 Pls
1209 1532 Pls
1214 1530 Pls
1220 1547 Pls
1225 1523 Pls
1230 1529 Pls
1236 1530 Pls
1241 1560 Pls
1246 1530 Pls
1252 1522 Pls
1257 1540 Pls
1262 1527 Pls
1267 1528 Pls
1273 1526 Pls
1278 1536 Pls
1283 1530 Pls
1289 1551 Pls
1293 1528 Pls
1299 1519 Pls
1305 1550 Pls
1309 1529 Pls
1315 1524 Pls
1320 1528 Pls
1325 1523 Pls
1331 1554 Pls
1336 1529 Pls
1341 1533 Pls
1346 1524 Pls
1352 1530 Pls
1357 1531 Pls
1362 1527 Pls
1368 1531 Pls
1373 1528 Pls
1378 1552 Pls
1384 1541 Pls
1389 1522 Pls
1394 1529 Pls
1399 1522 Pls
1405 1528 Pls
1410 1520 Pls
1415 1522 Pls
1421 1529 Pls
1425 1528 Pls
1431 1524 Pls
1437 1528 Pls
1441 1523 Pls
1447 1531 Pls
1452 1520 Pls
1457 1523 Pls
1463 1527 Pls
1468 1531 Pls
1474 1533 Pls
1478 1520 Pls
1484 1523 Pls
1490 1530 Pls
1494 1540 Pls
1500 1528 Pls
1505 1523 Pls
1510 1527 Pls
1516 1531 Pls
1521 1545 Pls
1526 1521 Pls
1531 1527 Pls
1537 1524 Pls
1542 1523 Pls
1547 1521 Pls
1553 1529 Pls
1557 1522 Pls
1563 1520 Pls
1569 1546 Pls
1574 1531 Pls
1579 1523 Pls
1584 1531 Pls
1590 1526 Pls
1595 1532 Pls
1600 1531 Pls
1606 1529 Pls
1610 1527 Pls
1616 1552 Pls
1622 1522 Pls
1626 1522 Pls
1632 1526 Pls
1637 1520 Pls
1642 1527 Pls
1648 1530 Pls
1653 1523 Pls
1658 1526 Pls
1663 1556 Pls
1669 1536 Pls
1674 1523 Pls
1679 1540 Pls
1685 1531 Pls
1690 1523 Pls
1695 1524 Pls
1701 1523 Pls
1706 1524 Pls
1711 1537 Pls
1716 1527 Pls
1722 1535 Pls
1727 1531 Pls
1732 1524 Pls
1738 1528 Pls
1742 1527 Pls
1748 1532 Pls
1754 1527 Pls
1758 1538 Pls
1764 1526 Pls
1769 1521 Pls
1774 1530 Pls
1780 1530 Pls
1785 1530 Pls
1790 1523 Pls
1795 1520 Pls
1801 1537 Pls
1807 1568 Pls
1811 1542 Pls
1817 1529 Pls
1822 1522 Pls
1827 1523 Pls
1833 1523 Pls
1838 1524 Pls
1843 1522 Pls
1848 1520 Pls
1854 1546 Pls
1859 1524 Pls
1864 1520 Pls
1870 1541 Pls
1874 1522 Pls
1880 1527 Pls
1886 1530 Pls
1890 1523 Pls
1896 1523 Pls
1901 1528 Pls
1907 1533 Pls
1912 1524 Pls
1917 1531 Pls
1923 1524 Pls
1927 1531 Pls
1933 1533 Pls
1939 1529 Pls
1943 1520 Pls
1949 1567 Pls
1954 1531 Pls
1959 1526 Pls
1965 1522 Pls
1970 1531 Pls
1975 1526 Pls
1980 1534 Pls
1986 1527 Pls
1991 1539 Pls
1996 1540 Pls
2002 1522 Pls
2007 1534 Pls
2012 1527 Pls
2018 1530 Pls
2023 1523 Pls
2028 1531 Pls
2033 1523 Pls
2039 1534 Pls
2044 1529 Pls
2049 1526 Pls
2055 1529 Pls
2059 1528 Pls
2065 1526 Pls
2071 1529 Pls
2075 1522 Pls
2081 1527 Pls
2086 1541 Pls
2091 1527 Pls
2097 1521 Pls
2102 1535 Pls
2107 1526 Pls
2112 1529 Pls
2118 1533 Pls
2123 1533 Pls
2128 1530 Pls
2134 1574 Pls
2139 1532 Pls
2144 1522 Pls
2150 1542 Pls
2155 1523 Pls
2160 1528 Pls
2165 1521 Pls
2171 1519 Pls
2176 1531 Pls
2181 1566 Pls
2187 1531 Pls
2191 1528 Pls
2197 1536 Pls
2203 1533 Pls
2207 1526 Pls
2213 1530 Pls
2218 1530 Pls
2223 1522 Pls
2229 1528 Pls
2234 1536 Pls
2240 1528 Pls
2244 1535 Pls
2250 1531 Pls
2256 1523 Pls
2260 1527 Pls
2266 1531 Pls
2271 1523 Pls
2276 1599 Pls
2282 1519 Pls
2287 1522 Pls
2292 1523 Pls
2297 1532 Pls
2303 1524 Pls
2308 1523 Pls
2313 1531 Pls
2319 1527 Pls
2323 1546 Pls
2329 1528 Pls
2335 1533 Pls
2340 1529 Pls
2345 1526 Pls
2350 1537 Pls
2356 1523 Pls
2361 1526 Pls
2366 1538 Pls
2372 1554 Pls
2376 1526 Pls
2382 1531 Pls
2388 1532 Pls
2392 1522 Pls
2398 1530 Pls
2403 1528 Pls
2408 1522 Pls
2414 1520 Pls
2419 1549 Pls
2424 1537 Pls
2429 1522 Pls
2435 1535 Pls
2440 1533 Pls
2445 1528 Pls
2451 1523 Pls
2456 1521 Pls
2461 1536 Pls
2467 1550 Pls
2472 1520 Pls
2477 1531 Pls
2482 1531 Pls
2488 1535 Pls
2493 1532 Pls
2498 1530 Pls
2504 1530 Pls
2508 1530 Pls
2514 1563 Pls
2520 1523 Pls
2524 1529 Pls
2530 1523 Pls
2535 1528 Pls
2540 1523 Pls
2546 1527 Pls
2551 1519 Pls
2556 1526 Pls
2561 1545 Pls
2567 1521 Pls
2573 1535 Pls
2577 1534 Pls
2583 1521 Pls
2588 1522 Pls
2593 1524 Pls
2599 1531 Pls
2604 1520 Pls
2609 1562 Pls
2614 1536 Pls
2620 1528 Pls
2625 1551 Pls
2630 1524 Pls
2636 1528 Pls
2640 1521 Pls
2646 1529 Pls
2652 1549 Pls
2656 1524 Pls
2662 1535 Pls
2667 1522 Pls
2673 1522 Pls
2678 1520 Pls
2683 1527 Pls
2689 1524 Pls
2693 1524 Pls
2699 1554 Pls
2705 1532 Pls
2709 1526 Pls
2715 1529 Pls
2720 1519 Pls
2725 1527 Pls
2731 1519 Pls
2736 1541 Pls
2741 1534 Pls
2746 1540 Pls
2752 1521 Pls
2757 1530 Pls
2762 1534 Pls
2768 1530 Pls
2772 1521 Pls
2778 1527 Pls
2784 1530 Pls
2789 1522 Pls
2794 1544 Pls
2799 1524 Pls
2805 1530 Pls
2810 1521 Pls
2815 1532 Pls
2821 1526 Pls
2825 1522 Pls
2831 1523 Pls
2837 1527 Pls
2841 1527 Pls
2847 1532 Pls
2852 1523 Pls
2857 1530 Pls
2863 1545 Pls
2868 1556 Pls
2873 1521 Pls
2878 1522 Pls
2884 1528 Pls
2889 1567 Pls
2894 1531 Pls
2900 1530 Pls
2905 1526 Pls
2910 1534 Pls
2916 1534 Pls
2921 1520 Pls
2926 1523 Pls
2931 1523 Pls
2937 1552 Pls
2942 1521 Pls
2947 1528 Pls
2953 1541 Pls
2957 1561 Pls
2963 1519 Pls
2969 1528 Pls
2973 1522 Pls
2979 1520 Pls
2984 1542 Pls
2989 1536 Pls
2995 1529 Pls
3000 1545 Pls
3006 1536 Pls
3010 1523 Pls
3016 1524 Pls
3022 1521 Pls
3026 1532 Pls
3032 1530 Pls
3037 1544 Pls
3042 1521 Pls
3048 1527 Pls
3053 1529 Pls
3058 1521 Pls
3063 1531 Pls
3069 1531 Pls
3074 1527 Pls
3079 1551 Pls
3085 1535 Pls
3089 1528 Pls
3095 1521 Pls
3101 1529 Pls
3105 1531 Pls
3111 1522 Pls
3116 1521 Pls
3122 1529 Pls
3127 1551 Pls
3132 1519 Pls
3138 1521 Pls
3142 1534 Pls
3148 1521 Pls
3150 1522 Pls
3154 1531 Pls
3158 1528 Pls
3164 1529 Pls
3169 1520 Pls
3174 1556 Pls
3180 1531 Pls
3185 1521 Pls
3190 1533 Pls
3195 1528 Pls
3201 1522 Pls
3206 1526 Pls
3211 1532 Pls
3217 1529 Pls
3222 1534 Pls
3227 1524 Pls
3233 1522 Pls
3238 1523 Pls
3243 1520 Pls
3248 1519 Pls
3254 1532 Pls
3259 1523 Pls
3264 1520 Pls
3270 1533 Pls
3274 1533 Pls
3280 1528 Pls
3286 1526 Pls
3290 1530 Pls
3296 1527 Pls
3301 1527 Pls
3306 1527 Pls
3312 1531 Pls
3317 1528 Pls
3322 1520 Pls
3327 1528 Pls
3333 1551 Pls
3338 1533 Pls
3343 1529 Pls
3349 1534 Pls
3354 1526 Pls
3359 1541 Pls
3365 1532 Pls
3370 1530 Pls
3375 1522 Pls
3381 1670 Pls
3386 1541 Pls
3391 1538 Pls
3396 1527 Pls
3402 1523 Pls
3406 1529 Pls
3412 1528 Pls
3418 1520 Pls
3422 1528 Pls
3428 1523 Pls
3433 1529 Pls
3438 1522 Pls
3444 1529 Pls
3449 1531 Pls
3455 1579 Pls
3459 1529 Pls
3465 1530 Pls
3471 1521 Pls
3475 1524 Pls
3481 1531 Pls
3486 1526 Pls
3491 1527 Pls
3497 1531 Pls
3502 1572 Pls
3507 1535 Pls
3512 1532 Pls
3518 1530 Pls
3523 1521 Pls
3528 1519 Pls
3534 1530 Pls
3538 1530 Pls
3544 1528 Pls
3550 1557 Pls
3555 1532 Pls
3560 1527 Pls
3565 1539 Pls
3571 1531 Pls
3576 1524 Pls
3581 1529 Pls
3587 1527 Pls
3591 1529 Pls
3597 1545 Pls
3603 1527 Pls
3607 1521 Pls
3613 1529 Pls
3618 1521 Pls
3623 1528 Pls
3629 1542 Pls
3634 1536 Pls
3639 1520 Pls
3644 1579 Pls
3650 1528 Pls
3655 1528 Pls
3660 1527 Pls
3666 1530 Pls
3671 1533 Pls
3676 1529 Pls
3682 1534 Pls
3687 1533 Pls
3692 1543 Pls
3697 1521 Pls
3703 1527 Pls
3708 1524 Pls
3713 1530 Pls
3719 1521 Pls
3723 1523 Pls
3729 1531 Pls
3735 1527 Pls
3739 1533 Pls
3745 1533 Pls
3750 1529 Pls
3755 1549 Pls
3761 1529 Pls
3766 1527 Pls
3771 1531 Pls
3776 1522 Pls
3782 1531 Pls
3788 1542 Pls
3792 1538 Pls
3798 1531 Pls
3803 1531 Pls
3808 1523 Pls
3814 1523 Pls
3819 1532 Pls
3824 1520 Pls
3829 1520 Pls
3835 1551 Pls
3840 1524 Pls
3845 1524 Pls
3851 1527 Pls
3855 1527 Pls
3861 1524 Pls
3867 1531 Pls
3871 1523 Pls
3877 1542 Pls
3882 1539 Pls
3888 1520 Pls
3893 1524 Pls
3898 1532 Pls
3904 1521 Pls
3909 1523 Pls
3914 1537 Pls
3920 1533 Pls
3924 1523 Pls
3930 1546 Pls
3935 1522 Pls
3940 1519 Pls
3946 1539 Pls
3951 1531 Pls
3956 1520 Pls
3961 1523 Pls
3967 1530 Pls
3972 1541 Pls
3977 1530 Pls
3983 1529 Pls
3988 1531 Pls
3993 1533 Pls
3999 1527 Pls
4004 1521 Pls
4009 1534 Pls
4014 1520 Pls
4020 1546 Pls
4025 1542 Pls
4030 1523 Pls
4036 1521 Pls
4040 1528 Pls
4046 1535 Pls
4052 1524 Pls
4056 1529 Pls
4062 1523 Pls
4067 1529 Pls
4072 1521 Pls
4078 1522 Pls
4083 1527 Pls
4088 1527 Pls
4093 1531 Pls
4099 1522 Pls
4104 1523 Pls
4109 1527 Pls
4115 1532 Pls
4120 1530 Pls
4125 1537 Pls
4131 1531 Pls
4136 1532 Pls
4141 1532 Pls
4146 1522 Pls
4152 1540 Pls
4157 1527 Pls
4162 1531 Pls
4168 1533 Pls
4172 1522 Pls
4178 1527 Pls
4184 1522 Pls
4188 1520 Pls
4194 1530 Pls
4199 1533 Pls
4204 1521 Pls
4210 1541 Pls
4215 1534 Pls
4221 1520 Pls
4225 1519 Pls
4231 1533 Pls
4237 1530 Pls
4241 1520 Pls
4247 1527 Pls
4252 1534 Pls
4257 1546 Pls
4263 1535 Pls
4268 1530 Pls
4273 1524 Pls
4278 1530 Pls
4284 1520 Pls
4289 1521 Pls
4294 1532 Pls
4300 1531 Pls
4304 1555 Pls
4310 1531 Pls
4316 1532 Pls
4321 1542 Pls
4326 1534 Pls
4331 1529 Pls
4337 1519 Pls
4342 1527 Pls
4347 1524 Pls
4353 1543 Pls
4357 1528 Pls
4363 1521 Pls
4369 1526 Pls
4373 1530 Pls
4379 1530 Pls
4384 1524 Pls
4389 1530 Pls
4395 1539 Pls
4400 1561 Pls
4405 1530 Pls
4410 1527 Pls
4416 1522 Pls
4421 1531 Pls
4426 1522 Pls
4432 1530 Pls
4437 1533 Pls
4442 1553 Pls
4448 1566 Pls
4453 1527 Pls
4458 1532 Pls
4463 1524 Pls
4469 1521 Pls
4474 1523 Pls
4479 1527 Pls
4485 1520 Pls
4489 1520 Pls
4495 1552 Pls
4501 1522 Pls
4505 1521 Pls
4511 1551 Pls
4516 1523 Pls
4521 1524 Pls
4527 1534 Pls
4532 1528 Pls
4537 1534 Pls
4542 1551 Pls
4548 1530 Pls
4554 1531 Pls
4558 1533 Pls
4564 1521 Pls
4569 1528 Pls
4574 1530 Pls
4580 1531 Pls
4585 1529 Pls
4590 1572 Pls
4595 1532 Pls
4601 1521 Pls
4606 1521 Pls
4611 1533 Pls
4617 1528 Pls
4621 1523 Pls
4627 1523 Pls
4633 1531 Pls
4637 1524 Pls
4643 1535 Pls
4648 1531 Pls
4654 1530 Pls
4659 1530 Pls
4664 1531 Pls
4670 1529 Pls
4674 1520 Pls
4680 1527 Pls
4686 1533 Pls
4690 1530 Pls
4696 1527 Pls
4701 1532 Pls
4706 1524 Pls
4712 1533 Pls
4717 1530 Pls
4722 1529 Pls
4727 1538 Pls
4733 1528 Pls
4737 1523 Pls
4742 1524 Pls
4748 1531 Pls
4753 1532 Pls
4757 1528 Pls
4763 1536 Pls
4768 1531 Pls
4772 1524 Pls
4777 1564 Pls
4782 1531 Pls
4787 1520 Pls
4792 1527 Pls
4797 1521 Pls
4802 1530 Pls
4806 1520 Pls
4812 1526 Pls
4817 1527 Pls
4821 1554 Pls
4826 1530 Pls
4831 1527 Pls
4837 1529 Pls
4841 1527 Pls
4846 1523 Pls
4851 1522 Pls
4855 1531 Pls
4861 1522 Pls
4866 1523 Pls
4870 1553 Pls
4875 1532 Pls
4880 1529 Pls
4886 1530 Pls
4890 1535 Pls
4895 1524 Pls
4900 1530 Pls
4904 1522 Pls
4910 1550 Pls
4915 1531 Pls
4920 1537 Pls
4924 1519 Pls
4929 1522 Pls
4935 1526 Pls
4939 1520 Pls
4944 1523 Pls
4950 1535 Pls
4953 1536 Pls
4959 1545 Pls
4964 1541 Pls
4969 1534 Pls
4973 1524 Pls
4978 1528 Pls
4984 1528 Pls
4988 1532 Pls
4993 1527 Pls
4998 1530 Pls
5003 1535 Pls
5008 1531 Pls
5013 1562 Pls
5018 1533 Pls
5022 1530 Pls
5027 1536 Pls
5033 1523 Pls
5037 1527 Pls
5042 1535 Pls
5047 1526 Pls
5052 1520 Pls
5057 1554 Pls
5062 1527 Pls
5067 1536 Pls
5071 1530 Pls
5076 1551 Pls
5082 1528 Pls
5086 1523 Pls
5091 1523 Pls
5096 1535 Pls
5101 1521 Pls
5106 1551 Pls
5111 1530 Pls
5116 1521 Pls
5120 1534 Pls
5125 1520 Pls
5131 1527 Pls
5136 1527 Pls
5140 1528 Pls
5145 1521 Pls
5150 1522 Pls
5155 1554 Pls
5160 1531 Pls
5165 1523 Pls
5170 1522 Pls
5174 1530 Pls
5180 1533 Pls
5185 1520 Pls
5189 1520 Pls
5194 1522 Pls
5199 1544 Pls
5204 1526 Pls
5209 1519 Pls
5214 1526 Pls
5219 1523 Pls
5223 1530 Pls
5229 1526 Pls
5234 1528 Pls
5238 1530 Pls
5243 1523 Pls
5248 1554 Pls
5253 1523 Pls
5258 1520 Pls
5263 1530 Pls
5268 1529 Pls
5272 1534 Pls
5278 1527 Pls
5283 1523 Pls
5287 1524 Pls
5292 1535 Pls
5297 1546 Pls
5303 1528 Pls
5307 1529 Pls
5312 1527 Pls
5317 1520 Pls
5321 1519 Pls
5327 1532 Pls
5332 1530 Pls
5336 1523 Pls
5341 1569 Pls
5346 1532 Pls
5352 1533 Pls
5356 1522 Pls
5361 1520 Pls
5366 1531 Pls
5370 1519 Pls
5376 1521 Pls
5381 1528 Pls
5386 1524 Pls
5390 1528 Pls
5395 1522 Pls
5401 1526 Pls
5405 1530 Pls
5410 1520 Pls
5415 1523 Pls
5419 1526 Pls
5425 1534 Pls
5430 1529 Pls
5435 1555 Pls
5440 1530 Pls
5444 1531 Pls
5450 1533 Pls
5454 1552 Pls
5459 1522 Pls
5464 1530 Pls
5469 1528 Pls
5474 1530 Pls
5479 1524 Pls
5484 1541 Pls
5488 1520 Pls
5493 1520 Pls
5499 1535 Pls
5503 1526 Pls
5508 1528 Pls
5513 1520 Pls
5518 1538 Pls
5523 1521 Pls
5528 1523 Pls
5533 1583 Pls
5537 1532 Pls
5542 1521 Pls
5548 1532 Pls
5553 1528 Pls
5557 1528 Pls
5562 1522 Pls
5567 1530 Pls
5572 1529 Pls
5577 1544 Pls
5582 1520 Pls
5586 1521 Pls
5591 1523 Pls
5597 1529 Pls
5602 1521 Pls
5606 1526 Pls
5611 1534 Pls
5616 1523 Pls
5621 1532 Pls
5626 1529 Pls
5631 1526 Pls
5636 1528 Pls
5640 1534 Pls
5646 1526 Pls
5651 1530 Pls
5655 1530 Pls
5660 1526 Pls
5665 1529 Pls
5670 1528 Pls
5675 1527 Pls
5680 1520 Pls
5685 1530 Pls
5689 1524 Pls
5695 1529 Pls
5700 1520 Pls
5704 1521 Pls
5709 1530 Pls
5714 1523 Pls
5719 1556 Pls
5724 1535 Pls
5729 1524 Pls
5734 1527 Pls
5738 1529 Pls
5744 1528 Pls
5749 1521 Pls
5753 1524 Pls
5758 1524 Pls
5763 1531 Pls
5769 1547 Pls
5773 1522 Pls
5778 1523 Pls
5783 1527 Pls
5787 1520 Pls
5793 1520 Pls
5798 1526 Pls
5802 1527 Pls
5807 1521 Pls
5812 1537 Pls
5818 1530 Pls
5822 1537 Pls
5827 1531 Pls
5832 1536 Pls
5836 1533 Pls
5842 1532 Pls
5847 1531 Pls
5852 1520 Pls
5856 1528 Pls
5861 1530 Pls
5867 1526 Pls
5871 1521 Pls
5876 1536 Pls
5881 1528 Pls
5885 1526 Pls
5891 1533 Pls
5896 1529 Pls
5901 1519 Pls
5905 1527 Pls
5910 1576 Pls
5916 1534 Pls
5920 1528 Pls
5925 1530 Pls
5931 1536 Pls
5935 1541 Pls
5940 1541 Pls
5945 1529 Pls
5950 1521 Pls
5954 1570 Pls
5959 1529 Pls
5965 1526 Pls
5969 1527 Pls
5974 1527 Pls
5979 1524 Pls
5984 1531 Pls
5989 1524 Pls
5994 1524 Pls
5999 1528 Pls
6003 1545 Pls
6008 1528 Pls
6014 1523 Pls
6019 1553 Pls
6023 1523 Pls
6028 1524 Pls
6033 1528 Pls
6038 1528 Pls
6043 1520 Pls
6048 1554 Pls
6052 1530 Pls
6057 1532 Pls
6063 1529 Pls
6068 1523 Pls
6072 1529 Pls
6077 1526 Pls
6082 1527 Pls
6087 1530 Pls
6092 1531 Pls
6097 1581 Pls
6102 1532 Pls
6106 1527 Pls
6112 1519 Pls
6117 1527 Pls
6121 1524 Pls
6126 1528 Pls
6131 1527 Pls
6136 1521 Pls
6141 1523 Pls
6146 1550 Pls
6151 1528 Pls
6155 1529 Pls
6161 1534 Pls
6166 1532 Pls
6170 1526 Pls
6175 1527 Pls
6180 1530 Pls
6185 1521 Pls
6190 1547 Pls
6195 1530 Pls
6200 1533 Pls
6204 1530 Pls
6210 1554 Pls
6215 1533 Pls
6219 1526 Pls
6224 1530 Pls
6229 1532 Pls
6235 1533 Pls
6239 1550 Pls
6244 1531 Pls
6249 1521 Pls
6253 1527 Pls
6259 1531 Pls
6264 1528 Pls
6268 1524 Pls
6273 1522 Pls
6278 1519 Pls
6284 1542 Pls
6288 1543 Pls
6293 1526 Pls
6298 1521 Pls
6302 1527 Pls
6308 1526 Pls
6313 1527 Pls
6318 1522 Pls
6322 1530 Pls
6327 1522 Pls
6333 1538 Pls
6337 1521 Pls
6342 1527 Pls
6347 1531 Pls
6352 1530 Pls
6357 1518 Pls
6362 1529 Pls
6367 1527 Pls
6371 1524 Pls
6376 1530 Pls
6382 1541 Pls
6386 1522 Pls
6391 1520 Pls
6396 1527 Pls
6401 1529 Pls
6406 1532 Pls
6411 1519 Pls
6416 1527 Pls
6421 1537 Pls
6425 1561 Pls
6431 1554 Pls
6435 1530 Pls
6440 1529 Pls
6445 1530 Pls
6450 1528 Pls
6455 1518 Pls
6460 1538 Pls
6465 1520 Pls
6469 1527 Pls
6474 1559 Pls
6480 1528 Pls
6485 1523 Pls
6489 1520 Pls
6494 1532 Pls
6499 1526 Pls
6504 1535 Pls
6509 1538 Pls
6514 1532 Pls
6518 1530 Pls
6523 1547 Pls
6529 1527 Pls
6534 1532 Pls
6538 1526 Pls
6543 1523 Pls
6548 1523 Pls
6553 1535 Pls
6558 1526 Pls
6563 1531 Pls
6568 1555 Pls
6572 1529 Pls
6578 1524 Pls
6583 1521 Pls
6587 1534 Pls
6592 1527 Pls
6597 1527 Pls
6602 1527 Pls
6607 1530 Pls
6612 1534 Pls
6617 1556 Pls
6621 1523 Pls
6627 1529 Pls
6632 1530 Pls
6636 1522 Pls
6641 1531 Pls
6646 1524 Pls
6651 1527 Pls
6656 1520 Pls
6661 1554 Pls
6666 1553 Pls
6670 1523 Pls
6676 1527 Pls
6681 1521 Pls
6685 1528 Pls
6690 1522 Pls
6695 1519 Pls
6701 1524 Pls
6705 1532 Pls
6710 1560 Pls
6715 1521 Pls
6719 1522 Pls
6725 1533 Pls
6730 1520 Pls
6734 1526 Pls
6739 1521 Pls
6744 1532 Pls
6750 1529 Pls
6754 1531 Pls
6759 1545 Pls
6764 1531 Pls
6768 1530 Pls
6774 1544 Pls
6779 1522 Pls
6784 1522 Pls
6788 1520 Pls
6793 1521 Pls
6799 1532 Pls
6803 1543 Pls
6808 1530 Pls
6813 1534 Pls
6818 1530 Pls
6823 1534 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
