%!PS-Adobe-2.0 EPSF-2.0
%%Title: preSemND.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Tue May 27 23:46:46 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (preSemND.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 27 23:46:46 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 873 M
63 0 V
5597 0 R
-63 0 V
1166 1430 M
63 0 V
5597 0 R
-63 0 V
1166 1988 M
63 0 V
5597 0 R
-63 0 V
1166 2546 M
63 0 V
5597 0 R
-63 0 V
1166 3103 M
63 0 V
5597 0 R
-63 0 V
1166 3661 M
63 0 V
5597 0 R
-63 0 V
1166 4218 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1170 1528 Pls
1174 1461 Pls
1179 1720 Pls
1184 1506 Pls
1189 1469 Pls
1193 1469 Pls
1198 1453 Pls
1203 1461 Pls
1208 1453 Pls
1212 1469 Pls
1217 1453 Pls
1222 1453 Pls
1226 1453 Pls
1231 1469 Pls
1236 1511 Pls
1241 1511 Pls
1245 1444 Pls
1250 1436 Pls
1255 1469 Pls
1259 1469 Pls
1264 1478 Pls
1269 1444 Pls
1274 1453 Pls
1278 1444 Pls
1283 1503 Pls
1288 1469 Pls
1292 1469 Pls
1297 1453 Pls
1302 1461 Pls
1307 1461 Pls
1311 1444 Pls
1316 1436 Pls
1321 1453 Pls
1325 1469 Pls
1330 1478 Pls
1335 1469 Pls
1340 1469 Pls
1344 1503 Pls
1349 1469 Pls
1354 1444 Pls
1358 1444 Pls
1363 1444 Pls
1368 1444 Pls
1373 1461 Pls
1377 1503 Pls
1382 1486 Pls
1387 1453 Pls
1391 1436 Pls
1396 1453 Pls
1401 1453 Pls
1406 1469 Pls
1410 1453 Pls
1415 1444 Pls
1420 1461 Pls
1424 1495 Pls
1429 1478 Pls
1434 1486 Pls
1439 1453 Pls
1443 1495 Pls
1448 1495 Pls
1453 1453 Pls
1457 1453 Pls
1462 1461 Pls
1467 1461 Pls
1473 1511 Pls
1477 1469 Pls
1482 1461 Pls
1487 1444 Pls
1491 1453 Pls
1496 1453 Pls
1501 1461 Pls
1506 1453 Pls
1510 1444 Pls
1515 1444 Pls
1520 1478 Pls
1524 1478 Pls
1529 1453 Pls
1534 1444 Pls
1539 1444 Pls
1543 1469 Pls
1548 1486 Pls
1553 1461 Pls
1557 1444 Pls
1562 1458 Pls
1567 1486 Pls
1572 1495 Pls
1576 1461 Pls
1581 1461 Pls
1586 1503 Pls
1591 1444 Pls
1595 1444 Pls
1600 1436 Pls
1605 1444 Pls
1609 1486 Pls
1614 1478 Pls
1619 1478 Pls
1624 1444 Pls
1628 1461 Pls
1633 1528 Pls
1638 1453 Pls
1642 1469 Pls
1647 1453 Pls
1652 1698 Pls
1657 1486 Pls
1661 1495 Pls
1666 1495 Pls
1671 1453 Pls
1675 1453 Pls
1680 1461 Pls
1685 1453 Pls
1690 1453 Pls
1694 1461 Pls
1699 1444 Pls
1704 1469 Pls
1708 1478 Pls
1713 1478 Pls
1718 1461 Pls
1723 1461 Pls
1727 1461 Pls
1732 1453 Pls
1737 1511 Pls
1741 1428 Pls
1746 1461 Pls
1751 1503 Pls
1756 1469 Pls
1760 1469 Pls
1765 1461 Pls
1770 1453 Pls
1774 1453 Pls
1779 1453 Pls
1784 1469 Pls
1789 1469 Pls
1793 1461 Pls
1798 1486 Pls
1803 1486 Pls
1807 1486 Pls
1812 1469 Pls
1817 1511 Pls
1822 1478 Pls
1826 1444 Pls
1831 1461 Pls
1836 1453 Pls
1840 1461 Pls
1845 1486 Pls
1850 1486 Pls
1855 1486 Pls
1859 1461 Pls
1864 1461 Pls
1869 1486 Pls
1874 1497 Pls
1878 1453 Pls
1883 1486 Pls
1888 1436 Pls
1892 1461 Pls
1897 1436 Pls
1902 1486 Pls
1907 1486 Pls
1911 1453 Pls
1916 1453 Pls
1921 1436 Pls
1925 1486 Pls
1930 1453 Pls
1935 1444 Pls
1940 1503 Pls
1944 1469 Pls
1949 1469 Pls
1954 1453 Pls
1958 1444 Pls
1963 1486 Pls
1968 1453 Pls
1973 1453 Pls
1977 1453 Pls
1982 1444 Pls
1987 1495 Pls
1991 1478 Pls
1996 1478 Pls
2001 1461 Pls
2006 1453 Pls
2010 1503 Pls
2015 1453 Pls
2020 1444 Pls
2024 1453 Pls
2029 1453 Pls
2034 1461 Pls
2039 1486 Pls
2043 1478 Pls
2048 1436 Pls
2053 1444 Pls
2057 1436 Pls
2062 1461 Pls
2067 1461 Pls
2072 1453 Pls
2076 1453 Pls
2081 1461 Pls
2086 1469 Pls
2090 1444 Pls
2095 1453 Pls
2100 1478 Pls
2105 1444 Pls
2109 1469 Pls
2114 1469 Pls
2119 1444 Pls
2123 1706 Pls
2128 1472 Pls
2133 1453 Pls
2138 1478 Pls
2142 1436 Pls
2147 1478 Pls
2152 1444 Pls
2157 1469 Pls
2161 1469 Pls
2166 1444 Pls
2171 1436 Pls
2175 1469 Pls
2180 1453 Pls
2185 1469 Pls
2190 1469 Pls
2194 1461 Pls
2199 1486 Pls
2204 1436 Pls
2208 1444 Pls
2213 1469 Pls
2218 1461 Pls
2223 1469 Pls
2227 1478 Pls
2232 1478 Pls
2237 1453 Pls
2241 1503 Pls
2246 1469 Pls
2251 1461 Pls
2256 1444 Pls
2260 1444 Pls
2265 1453 Pls
2270 1495 Pls
2274 1495 Pls
2279 1495 Pls
2284 1428 Pls
2289 1536 Pls
2293 1453 Pls
2298 1453 Pls
2303 1453 Pls
2307 1469 Pls
2312 1461 Pls
2317 1461 Pls
2322 1478 Pls
2326 1478 Pls
2331 1453 Pls
2336 1469 Pls
2340 1453 Pls
2345 1453 Pls
2350 1444 Pls
2355 1453 Pls
2359 1503 Pls
2364 1469 Pls
2369 1469 Pls
2373 1461 Pls
2378 1436 Pls
2383 1444 Pls
2388 1495 Pls
2392 1453 Pls
2397 1453 Pls
2402 1436 Pls
2406 1461 Pls
2411 1444 Pls
2416 1486 Pls
2421 1486 Pls
2425 1461 Pls
2430 1486 Pls
2435 1453 Pls
2440 1453 Pls
2444 1461 Pls
2449 1461 Pls
2454 1486 Pls
2458 1469 Pls
2463 1495 Pls
2468 1486 Pls
2473 1461 Pls
2477 1469 Pls
2482 1461 Pls
2487 1444 Pls
2491 1436 Pls
2496 1486 Pls
2501 1469 Pls
2506 1469 Pls
2510 1469 Pls
2515 1469 Pls
2520 1453 Pls
2524 1469 Pls
2529 1444 Pls
2534 1444 Pls
2539 1469 Pls
2543 1453 Pls
2548 1495 Pls
2553 1453 Pls
2557 1469 Pls
2562 1481 Pls
2567 1453 Pls
2572 1444 Pls
2576 1495 Pls
2581 1453 Pls
2586 1495 Pls
2590 1461 Pls
2595 1706 Pls
2600 1506 Pls
2605 1469 Pls
2609 1461 Pls
2614 1469 Pls
2619 1461 Pls
2623 1461 Pls
2628 1461 Pls
2633 1469 Pls
2638 1469 Pls
2642 1478 Pls
2647 1461 Pls
2652 1444 Pls
2656 1461 Pls
2661 1453 Pls
2666 1469 Pls
2671 1444 Pls
2675 1469 Pls
2680 1444 Pls
2685 1453 Pls
2689 1436 Pls
2694 1461 Pls
2699 1461 Pls
2704 1478 Pls
2708 1444 Pls
2713 1444 Pls
2718 1444 Pls
2723 1461 Pls
2727 1461 Pls
2732 1461 Pls
2737 1436 Pls
2741 1461 Pls
2746 1444 Pls
2751 1478 Pls
2756 1495 Pls
2760 1461 Pls
2765 1469 Pls
2770 1453 Pls
2774 1444 Pls
2779 1570 Pls
2784 1453 Pls
2789 1469 Pls
2793 1495 Pls
2798 1486 Pls
2803 1453 Pls
2807 1461 Pls
2812 1461 Pls
2817 1461 Pls
2822 1461 Pls
2826 1461 Pls
2831 1444 Pls
2836 1453 Pls
2840 1469 Pls
2845 1478 Pls
2850 1478 Pls
2855 1453 Pls
2859 1453 Pls
2864 1503 Pls
2869 1453 Pls
2873 1478 Pls
2878 1469 Pls
2883 1478 Pls
2888 1486 Pls
2892 1478 Pls
2897 1469 Pls
2902 1453 Pls
2906 1461 Pls
2911 1411 Pls
2916 1461 Pls
2921 1444 Pls
2925 1461 Pls
2930 1444 Pls
2935 1469 Pls
2940 1478 Pls
2945 1461 Pls
2950 1486 Pls
2955 1436 Pls
2959 1444 Pls
2964 1469 Pls
2969 1486 Pls
2973 1453 Pls
2978 1469 Pls
2983 1478 Pls
2988 1478 Pls
2992 1472 Pls
2997 1453 Pls
3002 1461 Pls
3006 1455 Pls
3011 1444 Pls
3016 1453 Pls
3021 1453 Pls
3025 1469 Pls
3030 1495 Pls
3035 1478 Pls
3039 1495 Pls
3044 1444 Pls
3049 1453 Pls
3054 1469 Pls
3058 1486 Pls
3063 1453 Pls
3068 1442 Pls
3072 1450 Pls
3077 1486 Pls
3082 1486 Pls
3087 1461 Pls
3091 1461 Pls
3096 1461 Pls
3101 1453 Pls
3105 1444 Pls
3110 1469 Pls
3115 1444 Pls
3120 1461 Pls
3124 1469 Pls
3129 1469 Pls
3134 1453 Pls
3139 1486 Pls
3143 1453 Pls
3148 1444 Pls
3153 1453 Pls
3157 1461 Pls
3162 1461 Pls
3167 1469 Pls
3172 1478 Pls
3176 1469 Pls
3181 1444 Pls
3186 1436 Pls
3190 1436 Pls
3195 1453 Pls
3200 1486 Pls
3205 1453 Pls
3209 1495 Pls
3214 1444 Pls
3219 1453 Pls
3223 1436 Pls
3228 1469 Pls
3233 1536 Pls
3238 1453 Pls
3242 1453 Pls
3247 1495 Pls
3252 1469 Pls
3256 1561 Pls
3261 1436 Pls
3266 1453 Pls
3271 1495 Pls
3275 1469 Pls
3280 1453 Pls
3285 1444 Pls
3289 1453 Pls
3294 1453 Pls
3299 1436 Pls
3304 1478 Pls
3308 1461 Pls
3313 1444 Pls
3318 1461 Pls
3322 1453 Pls
3327 1511 Pls
3332 1444 Pls
3337 1453 Pls
3341 1520 Pls
3346 1444 Pls
3351 1486 Pls
3355 1453 Pls
3360 1461 Pls
3365 1478 Pls
3370 1469 Pls
3374 1453 Pls
3379 1461 Pls
3384 1461 Pls
3388 1453 Pls
3393 1444 Pls
3398 1503 Pls
3403 1453 Pls
3407 1444 Pls
3412 1486 Pls
3417 1444 Pls
3422 1461 Pls
3426 1453 Pls
3431 1461 Pls
3436 1511 Pls
3440 1453 Pls
3445 1461 Pls
3450 1444 Pls
3455 1469 Pls
3459 1444 Pls
3464 1469 Pls
3469 1444 Pls
3473 1444 Pls
3478 1444 Pls
3483 1478 Pls
3488 1486 Pls
3492 1469 Pls
3497 1453 Pls
3502 1453 Pls
3506 1444 Pls
3511 1444 Pls
3516 1461 Pls
3521 1461 Pls
3525 1453 Pls
3530 1495 Pls
3535 1444 Pls
3539 1692 Pls
3544 1464 Pls
3549 1461 Pls
3554 1461 Pls
3558 1461 Pls
3563 1444 Pls
3568 1439 Pls
3572 1461 Pls
3577 1461 Pls
3582 1469 Pls
3587 1503 Pls
3591 1444 Pls
3596 1444 Pls
3601 1495 Pls
3605 1469 Pls
3610 1461 Pls
3615 1453 Pls
3620 1444 Pls
3624 1561 Pls
3629 1444 Pls
3634 1486 Pls
3638 1469 Pls
3643 1453 Pls
3648 1461 Pls
3653 1444 Pls
3657 1453 Pls
3662 1469 Pls
3667 1453 Pls
3671 1495 Pls
3676 1461 Pls
3681 1495 Pls
3686 1453 Pls
3690 1453 Pls
3695 1486 Pls
3700 1453 Pls
3705 1511 Pls
3709 1453 Pls
3714 1444 Pls
3719 1495 Pls
3723 1461 Pls
3728 1495 Pls
3733 1453 Pls
3738 1469 Pls
3742 1444 Pls
3747 1444 Pls
3752 1444 Pls
3756 1444 Pls
3761 1453 Pls
3766 1453 Pls
3771 1453 Pls
3775 1503 Pls
3780 1495 Pls
3785 1486 Pls
3789 1453 Pls
3794 1444 Pls
3799 1453 Pls
3804 1469 Pls
3808 1469 Pls
3813 1461 Pls
3818 1453 Pls
3822 1453 Pls
3827 1453 Pls
3832 1469 Pls
3837 1461 Pls
3841 1444 Pls
3846 1444 Pls
3851 1428 Pls
3855 1469 Pls
3860 1453 Pls
3865 1461 Pls
3870 1478 Pls
3874 1478 Pls
3879 1453 Pls
3884 1444 Pls
3888 1461 Pls
3893 1469 Pls
3898 1461 Pls
3903 1478 Pls
3907 1444 Pls
3912 1495 Pls
3917 1469 Pls
3921 1486 Pls
3926 1503 Pls
3931 1453 Pls
3936 1444 Pls
3940 1444 Pls
3945 1453 Pls
3950 1511 Pls
3954 1486 Pls
3959 1444 Pls
3964 1461 Pls
3969 1461 Pls
3973 1444 Pls
3978 1428 Pls
3983 1469 Pls
3988 1453 Pls
3992 1469 Pls
3997 1444 Pls
4002 1486 Pls
4006 1469 Pls
4011 1732 Pls
4016 1472 Pls
4021 1486 Pls
4025 1444 Pls
4030 1444 Pls
4035 1436 Pls
4039 1453 Pls
4044 1461 Pls
4049 1461 Pls
4054 1453 Pls
4058 1495 Pls
4063 1469 Pls
4068 1478 Pls
4072 1444 Pls
4077 1453 Pls
4082 1478 Pls
4087 1436 Pls
4091 1461 Pls
4096 1453 Pls
4101 1461 Pls
4105 1486 Pls
4110 1503 Pls
4115 1461 Pls
4120 1428 Pls
4124 1428 Pls
4129 1461 Pls
4134 1461 Pls
4138 1453 Pls
4143 1444 Pls
4148 1444 Pls
4153 1461 Pls
4157 1495 Pls
4162 1461 Pls
4167 1461 Pls
4171 1453 Pls
4176 1478 Pls
4181 1436 Pls
4186 1511 Pls
4190 1520 Pls
4195 1486 Pls
4200 1495 Pls
4204 1478 Pls
4209 1461 Pls
4214 1436 Pls
4219 1461 Pls
4223 1461 Pls
4228 1453 Pls
4233 1461 Pls
4237 1444 Pls
4242 1453 Pls
4247 1453 Pls
4252 1495 Pls
4256 1486 Pls
4261 1436 Pls
4266 1453 Pls
4271 1489 Pls
4275 1461 Pls
4280 1478 Pls
4285 1436 Pls
4289 1453 Pls
4294 1453 Pls
4299 1486 Pls
4304 1478 Pls
4308 1453 Pls
4313 1444 Pls
4318 1444 Pls
4322 1436 Pls
4327 1444 Pls
4332 1461 Pls
4337 1461 Pls
4341 1453 Pls
4346 1478 Pls
4351 1478 Pls
4355 1444 Pls
4360 1453 Pls
4365 1453 Pls
4370 1461 Pls
4374 1520 Pls
4379 1486 Pls
4384 1486 Pls
4388 1495 Pls
4393 1478 Pls
4398 1461 Pls
4404 1461 Pls
4408 1436 Pls
4413 1461 Pls
4418 1469 Pls
4422 1419 Pls
4427 1436 Pls
4432 1461 Pls
4437 1461 Pls
4441 1469 Pls
4446 1486 Pls
4451 1444 Pls
4455 1453 Pls
4460 1495 Pls
4465 1469 Pls
4470 1453 Pls
4474 1453 Pls
4479 1436 Pls
4484 1732 Pls
4488 1489 Pls
4493 1486 Pls
4498 1461 Pls
4503 1453 Pls
4507 1469 Pls
4512 1461 Pls
4517 1444 Pls
4521 1461 Pls
4526 1461 Pls
4531 1461 Pls
4536 1461 Pls
4540 1453 Pls
4545 1444 Pls
4550 1461 Pls
4554 1461 Pls
4559 1461 Pls
4564 1503 Pls
4569 1444 Pls
4573 1428 Pls
4578 1461 Pls
4583 1495 Pls
4587 1478 Pls
4592 1444 Pls
4597 1453 Pls
4602 1453 Pls
4606 1461 Pls
4611 1444 Pls
4616 1453 Pls
4620 1453 Pls
4625 1444 Pls
4630 1453 Pls
4635 1481 Pls
4639 1453 Pls
4644 1461 Pls
4649 1486 Pls
4654 1469 Pls
4658 1478 Pls
4663 1461 Pls
4668 1453 Pls
4672 1461 Pls
4677 1687 Pls
4682 1486 Pls
4687 1453 Pls
4691 1444 Pls
4696 1461 Pls
4701 1453 Pls
4705 1469 Pls
4710 1444 Pls
4715 1444 Pls
4720 1453 Pls
4724 1486 Pls
4729 1453 Pls
4734 1486 Pls
4738 1444 Pls
4743 1455 Pls
4748 1495 Pls
4753 1478 Pls
4757 1453 Pls
4762 1486 Pls
4767 1469 Pls
4771 1511 Pls
4776 1478 Pls
4781 1436 Pls
4786 1453 Pls
4790 1469 Pls
4795 1444 Pls
4800 1478 Pls
4804 1444 Pls
4809 1453 Pls
4814 1461 Pls
4819 1469 Pls
4823 1821 Pls
4828 1478 Pls
4833 1436 Pls
4837 1495 Pls
4842 1453 Pls
4847 1486 Pls
4852 1444 Pls
4856 1486 Pls
4861 1486 Pls
4866 1478 Pls
4870 1486 Pls
4875 1453 Pls
4880 1444 Pls
4885 1486 Pls
4889 1444 Pls
4894 1453 Pls
4899 1444 Pls
4903 1478 Pls
4908 1461 Pls
4913 1478 Pls
4918 1486 Pls
4922 1453 Pls
4927 1453 Pls
4932 1461 Pls
4937 1453 Pls
4941 1486 Pls
4946 1453 Pls
4951 1444 Pls
4955 1506 Pls
4960 1464 Pls
4965 1469 Pls
4970 1453 Pls
4974 1453 Pls
4979 1503 Pls
4984 1453 Pls
4988 1444 Pls
4993 1453 Pls
4998 1478 Pls
5003 1503 Pls
5007 1486 Pls
5012 1486 Pls
5017 1469 Pls
5021 1461 Pls
5026 1528 Pls
5031 1453 Pls
5036 1461 Pls
5040 1453 Pls
5045 1461 Pls
5050 1495 Pls
5054 1461 Pls
5059 1478 Pls
5064 1461 Pls
5069 1461 Pls
5073 1503 Pls
5078 1444 Pls
5083 1444 Pls
5087 1436 Pls
5092 1444 Pls
5097 1486 Pls
5102 1469 Pls
5106 1469 Pls
5111 1444 Pls
5116 1436 Pls
5120 1495 Pls
5125 1461 Pls
5130 1461 Pls
5135 1461 Pls
5139 1444 Pls
5144 1478 Pls
5149 1486 Pls
5153 1486 Pls
5158 1469 Pls
5163 2052 Pls
5168 1478 Pls
5172 1486 Pls
5177 1444 Pls
5182 1444 Pls
5186 1478 Pls
5191 1503 Pls
5196 1478 Pls
5201 1469 Pls
5205 1461 Pls
5210 1450 Pls
5215 1511 Pls
5220 1453 Pls
5224 1511 Pls
5229 1428 Pls
5234 1436 Pls
5238 1483 Pls
5243 1478 Pls
5248 1478 Pls
5253 1469 Pls
5257 1436 Pls
5262 1478 Pls
5267 1436 Pls
5271 1444 Pls
5276 1453 Pls
5281 1486 Pls
5286 1503 Pls
5290 1453 Pls
5295 1453 Pls
5300 1461 Pls
5304 1436 Pls
5309 1486 Pls
5314 1461 Pls
5319 1486 Pls
5323 1478 Pls
5328 1444 Pls
5333 1536 Pls
5337 1511 Pls
5342 1486 Pls
5347 1500 Pls
5352 1436 Pls
5356 1495 Pls
5361 1453 Pls
5366 1469 Pls
5370 1444 Pls
5375 1495 Pls
5380 1469 Pls
5385 1461 Pls
5389 1478 Pls
5394 1478 Pls
5399 1486 Pls
5403 1486 Pls
5408 1444 Pls
5413 1511 Pls
5418 1486 Pls
5422 1461 Pls
5427 1709 Pls
5432 1514 Pls
5436 1478 Pls
5441 1453 Pls
5446 1444 Pls
5451 1461 Pls
5455 1444 Pls
5460 1444 Pls
5465 1461 Pls
5469 1486 Pls
5474 1495 Pls
5479 1436 Pls
5484 1478 Pls
5488 1486 Pls
5493 1486 Pls
5498 1486 Pls
5503 1469 Pls
5507 1528 Pls
5512 1520 Pls
5517 1444 Pls
5521 1503 Pls
5526 1503 Pls
5531 1486 Pls
5536 1453 Pls
5540 1469 Pls
5545 1469 Pls
5550 1444 Pls
5554 1444 Pls
5559 1444 Pls
5564 1486 Pls
5569 1486 Pls
5573 1486 Pls
5578 1453 Pls
5583 1495 Pls
5587 1461 Pls
5592 1553 Pls
5597 1453 Pls
5602 1444 Pls
5606 1453 Pls
5611 1461 Pls
5616 1500 Pls
5620 1536 Pls
5625 1478 Pls
5630 1461 Pls
5635 1453 Pls
5639 1453 Pls
5644 1478 Pls
5649 1428 Pls
5653 1444 Pls
5658 1436 Pls
5663 1461 Pls
5668 1461 Pls
5672 1486 Pls
5677 1478 Pls
5682 1461 Pls
5686 1436 Pls
5691 1453 Pls
5696 1520 Pls
5701 1495 Pls
5705 1455 Pls
5710 1478 Pls
5715 1461 Pls
5719 1469 Pls
5724 1469 Pls
5729 1461 Pls
5734 1495 Pls
5738 1469 Pls
5743 1444 Pls
5748 1453 Pls
5752 1478 Pls
5757 1486 Pls
5762 1478 Pls
5767 1453 Pls
5771 1436 Pls
5776 1436 Pls
5781 1503 Pls
5786 1469 Pls
5790 1503 Pls
5795 1444 Pls
5800 1495 Pls
5804 1453 Pls
5809 1486 Pls
5814 1478 Pls
5819 1486 Pls
5823 1461 Pls
5828 1461 Pls
5833 1444 Pls
5837 1444 Pls
5842 1461 Pls
5847 1461 Pls
5852 1461 Pls
5856 1444 Pls
5861 1444 Pls
5866 1444 Pls
5871 1453 Pls
5876 1444 Pls
5881 1453 Pls
5885 1520 Pls
5890 1444 Pls
5895 1478 Pls
5900 1706 Pls
5904 1478 Pls
5909 1486 Pls
5914 1478 Pls
5919 1428 Pls
5923 1453 Pls
5928 1428 Pls
5933 1444 Pls
5937 1486 Pls
5942 1486 Pls
5947 1461 Pls
5952 1453 Pls
5956 1444 Pls
5961 1486 Pls
5966 1444 Pls
5970 1469 Pls
5975 1436 Pls
5980 1453 Pls
5985 1461 Pls
5989 1436 Pls
5994 1469 Pls
5999 1469 Pls
6003 1469 Pls
6008 1461 Pls
6013 1447 Pls
6018 1453 Pls
6022 1444 Pls
6027 1461 Pls
6032 1547 Pls
6036 1461 Pls
6041 1453 Pls
6046 1469 Pls
6051 1455 Pls
6055 1511 Pls
6060 1453 Pls
6065 1469 Pls
6069 1461 Pls
6074 1520 Pls
6079 1503 Pls
6084 1444 Pls
6088 1503 Pls
6093 1486 Pls
6098 1486 Pls
6102 1469 Pls
6107 1444 Pls
6112 1461 Pls
6117 1436 Pls
6121 1444 Pls
6126 1461 Pls
6131 1469 Pls
6135 1469 Pls
6140 1495 Pls
6145 1478 Pls
6150 1453 Pls
6154 1453 Pls
6159 1495 Pls
6164 1461 Pls
6168 1428 Pls
6173 1469 Pls
6178 1461 Pls
6183 1453 Pls
6187 1453 Pls
6192 1478 Pls
6197 1444 Pls
6202 1444 Pls
6206 1436 Pls
6211 1453 Pls
6216 1436 Pls
6220 1444 Pls
6225 1436 Pls
6230 1486 Pls
6235 1453 Pls
6239 1461 Pls
6244 1444 Pls
6249 1453 Pls
6253 1453 Pls
6258 1461 Pls
6263 1478 Pls
6268 1486 Pls
6272 1436 Pls
6277 1495 Pls
6282 1486 Pls
6286 1469 Pls
6291 1461 Pls
6296 1453 Pls
6301 1453 Pls
6305 1444 Pls
6310 1469 Pls
6315 1469 Pls
6319 1478 Pls
6324 1444 Pls
6329 1453 Pls
6334 1461 Pls
6338 1461 Pls
6343 1453 Pls
6348 1486 Pls
6352 1453 Pls
6357 1461 Pls
6362 1461 Pls
6367 1444 Pls
6371 1687 Pls
6376 1489 Pls
6381 1461 Pls
6385 1453 Pls
6390 1453 Pls
6395 1453 Pls
6400 1469 Pls
6404 1469 Pls
6409 1461 Pls
6414 1436 Pls
6418 1453 Pls
6423 1469 Pls
6428 1478 Pls
6433 1478 Pls
6437 1436 Pls
6442 1444 Pls
6447 1444 Pls
6451 1503 Pls
6456 1495 Pls
6461 1444 Pls
6466 1486 Pls
6470 1461 Pls
6475 1545 Pls
6480 1453 Pls
6485 1469 Pls
6489 1469 Pls
6494 1453 Pls
6499 1486 Pls
6503 1469 Pls
6508 1461 Pls
6513 1453 Pls
6518 1469 Pls
6522 1495 Pls
6527 1469 Pls
6532 1436 Pls
6536 1570 Pls
6541 1453 Pls
6546 1495 Pls
6551 1478 Pls
6555 1444 Pls
6560 1469 Pls
6565 1469 Pls
6569 1461 Pls
6574 1461 Pls
6579 1444 Pls
6584 1478 Pls
6588 1461 Pls
6593 1570 Pls
6598 1486 Pls
6602 1461 Pls
6607 1461 Pls
6612 1486 Pls
6617 1461 Pls
6621 1453 Pls
6626 1453 Pls
6631 1444 Pls
6635 1461 Pls
6640 1528 Pls
6645 1528 Pls
6650 1453 Pls
6654 1486 Pls
6659 1469 Pls
6664 1461 Pls
6668 1436 Pls
6673 1461 Pls
6678 1444 Pls
6683 1453 Pls
6687 1469 Pls
6692 1469 Pls
6697 1453 Pls
6701 1453 Pls
6706 1481 Pls
6711 1478 Pls
6716 1461 Pls
6720 1469 Pls
6725 1478 Pls
6730 1461 Pls
6734 1436 Pls
6739 1453 Pls
6744 1478 Pls
6749 1461 Pls
6753 1453 Pls
6758 1495 Pls
6763 1444 Pls
6768 1461 Pls
6772 1453 Pls
6777 1461 Pls
6782 1453 Pls
6786 1444 Pls
6791 1444 Pls
6796 1453 Pls
6801 1469 Pls
6805 1478 Pls
6810 1444 Pls
6815 1453 Pls
6819 1436 Pls
6824 1436 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
