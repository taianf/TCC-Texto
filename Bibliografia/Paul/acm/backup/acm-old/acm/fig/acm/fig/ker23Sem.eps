%!PS-Adobe-2.0 EPSF-2.0
%%Title: ker23Sem.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Jun 11 23:58:07 2008
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ker23Sem.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Paul Regnier)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 11 23:58:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1166 594 M
63 0 V
5597 0 R
-63 0 V
1166 1430 M
63 0 V
5597 0 R
-63 0 V
1166 2267 M
63 0 V
5597 0 R
-63 0 V
1166 3103 M
63 0 V
5597 0 R
-63 0 V
1166 3940 M
63 0 V
5597 0 R
-63 0 V
1166 4776 M
63 0 V
5597 0 R
-63 0 V
1166 594 M
0 63 V
0 4119 R
0 -63 V
2109 594 M
0 63 V
0 4119 R
0 -63 V
3053 594 M
0 63 V
0 4119 R
0 -63 V
3996 594 M
0 63 V
0 4119 R
0 -63 V
4939 594 M
0 63 V
0 4119 R
0 -63 V
5883 594 M
0 63 V
0 4119 R
0 -63 V
6826 594 M
0 63 V
0 4119 R
0 -63 V
-5660 63 R
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
1.000 UP
1166 1372 Pls
1172 1333 Pls
1176 1339 Pls
1182 1339 Pls
1187 1339 Pls
1192 1333 Pls
1198 1338 Pls
1203 1333 Pls
1208 1333 Pls
1213 1331 Pls
1219 1333 Pls
1224 1341 Pls
1229 1341 Pls
1235 1340 Pls
1240 1338 Pls
1245 1334 Pls
1251 1334 Pls
1256 1338 Pls
1261 1336 Pls
1266 1334 Pls
1272 1331 Pls
1277 1338 Pls
1282 1340 Pls
1288 1336 Pls
1292 1332 Pls
1298 1331 Pls
1304 1332 Pls
1308 1338 Pls
1314 1333 Pls
1319 1332 Pls
1324 1337 Pls
1330 1336 Pls
1335 1338 Pls
1341 1337 Pls
1345 1336 Pls
1351 1328 Pls
1357 1336 Pls
1361 1336 Pls
1367 1333 Pls
1372 1331 Pls
1377 1332 Pls
1383 1332 Pls
1388 1337 Pls
1393 1331 Pls
1398 1334 Pls
1404 1334 Pls
1409 1336 Pls
1414 1336 Pls
1420 1328 Pls
1424 1332 Pls
1430 1333 Pls
1436 1329 Pls
1441 1336 Pls
1446 1328 Pls
1451 1337 Pls
1457 1333 Pls
1462 1333 Pls
1467 1336 Pls
1473 1329 Pls
1477 1327 Pls
1483 1333 Pls
1489 1328 Pls
1493 1337 Pls
1499 1333 Pls
1504 1328 Pls
1509 1330 Pls
1515 1336 Pls
1520 1328 Pls
1525 1329 Pls
1530 1333 Pls
1536 1328 Pls
1541 1328 Pls
1546 1330 Pls
1552 1333 Pls
1557 1328 Pls
1562 1329 Pls
1568 1339 Pls
1573 1333 Pls
1578 1339 Pls
1583 1334 Pls
1589 1334 Pls
1594 1328 Pls
1599 1336 Pls
1605 1335 Pls
1609 1328 Pls
1615 1336 Pls
1621 1333 Pls
1625 1337 Pls
1631 1336 Pls
1636 1335 Pls
1641 1336 Pls
1647 1335 Pls
1652 1328 Pls
1657 1333 Pls
1662 1332 Pls
1668 1333 Pls
1674 1330 Pls
1678 1333 Pls
1684 1338 Pls
1689 1329 Pls
1694 1338 Pls
1700 1333 Pls
1705 1331 Pls
1710 1338 Pls
1715 1334 Pls
1721 1333 Pls
1726 1334 Pls
1731 1335 Pls
1737 1334 Pls
1741 1332 Pls
1747 1342 Pls
1753 1337 Pls
1757 1337 Pls
1763 1335 Pls
1768 1333 Pls
1774 1333 Pls
1779 1336 Pls
1784 1337 Pls
1790 1334 Pls
1794 1330 Pls
1800 1334 Pls
1806 1333 Pls
1810 1335 Pls
1816 1329 Pls
1821 1341 Pls
1826 1337 Pls
1832 1333 Pls
1837 1337 Pls
1842 1333 Pls
1847 1328 Pls
1853 1328 Pls
1858 1337 Pls
1863 1337 Pls
1869 1334 Pls
1874 1337 Pls
1879 1337 Pls
1885 1336 Pls
1890 1337 Pls
1895 1343 Pls
1900 1333 Pls
1906 1333 Pls
1910 1332 Pls
1915 1337 Pls
1920 1331 Pls
1924 1328 Pls
1930 1334 Pls
1935 1328 Pls
1940 1337 Pls
1944 1334 Pls
1949 1335 Pls
1955 1336 Pls
1959 1336 Pls
1964 1336 Pls
1969 1335 Pls
1973 1328 Pls
1979 1329 Pls
1984 1333 Pls
1989 1341 Pls
1993 1337 Pls
1998 1338 Pls
2004 1331 Pls
2008 1336 Pls
2013 1338 Pls
2019 1333 Pls
2023 1337 Pls
2028 1336 Pls
2033 1340 Pls
2038 1329 Pls
2043 1333 Pls
2048 1329 Pls
2053 1329 Pls
2057 1331 Pls
2062 1338 Pls
2068 1329 Pls
2073 1336 Pls
2077 1336 Pls
2082 1336 Pls
2087 1334 Pls
2092 1336 Pls
2097 1340 Pls
2102 1334 Pls
2107 1340 Pls
2111 1334 Pls
2117 1333 Pls
2122 1334 Pls
2126 1327 Pls
2131 1333 Pls
2136 1333 Pls
2141 1338 Pls
2146 1330 Pls
2151 1333 Pls
2156 1338 Pls
2160 1340 Pls
2166 1330 Pls
2171 1328 Pls
2175 1334 Pls
2180 1331 Pls
2185 1333 Pls
2190 1328 Pls
2195 1333 Pls
2200 1331 Pls
2205 1336 Pls
2209 1328 Pls
2215 1333 Pls
2220 1328 Pls
2224 1331 Pls
2229 1331 Pls
2234 1329 Pls
2240 1333 Pls
2244 1336 Pls
2249 1334 Pls
2254 1335 Pls
2258 1336 Pls
2264 1327 Pls
2269 1337 Pls
2273 1336 Pls
2278 1336 Pls
2283 1338 Pls
2289 1327 Pls
2293 1330 Pls
2298 1329 Pls
2303 1334 Pls
2307 1336 Pls
2313 1331 Pls
2318 1336 Pls
2323 1335 Pls
2327 1330 Pls
2332 1338 Pls
2338 1329 Pls
2342 1335 Pls
2347 1338 Pls
2352 1328 Pls
2356 1337 Pls
2362 1340 Pls
2367 1332 Pls
2372 1333 Pls
2376 1330 Pls
2381 1332 Pls
2387 1334 Pls
2391 1331 Pls
2396 1339 Pls
2401 1329 Pls
2406 1337 Pls
2411 1331 Pls
2416 1333 Pls
2421 1335 Pls
2425 1335 Pls
2430 1338 Pls
2436 1328 Pls
2440 1338 Pls
2445 1338 Pls
2450 1332 Pls
2455 1337 Pls
2460 1333 Pls
2465 1334 Pls
2470 1328 Pls
2474 1336 Pls
2479 1333 Pls
2485 1331 Pls
2489 1336 Pls
2494 1332 Pls
2499 1334 Pls
2504 1338 Pls
2509 1336 Pls
2514 1332 Pls
2519 1331 Pls
2523 1343 Pls
2528 1331 Pls
2534 1338 Pls
2539 1334 Pls
2543 1336 Pls
2548 1337 Pls
2553 1331 Pls
2558 1336 Pls
2563 1333 Pls
2568 1336 Pls
2573 1329 Pls
2577 1330 Pls
2583 1336 Pls
2588 1329 Pls
2592 1329 Pls
2597 1333 Pls
2602 1338 Pls
2607 1332 Pls
2612 1332 Pls
2617 1338 Pls
2622 1329 Pls
2626 1334 Pls
2632 1333 Pls
2637 1337 Pls
2641 1336 Pls
2646 1338 Pls
2651 1329 Pls
2656 1335 Pls
2661 1328 Pls
2666 1343 Pls
2671 1328 Pls
2675 1333 Pls
2681 1338 Pls
2686 1333 Pls
2690 1334 Pls
2695 1342 Pls
2700 1330 Pls
2706 1330 Pls
2710 1334 Pls
2715 1328 Pls
2720 1334 Pls
2724 1333 Pls
2730 1335 Pls
2735 1339 Pls
2739 1339 Pls
2744 1338 Pls
2749 1332 Pls
2755 1333 Pls
2759 1328 Pls
2764 1328 Pls
2769 1343 Pls
2773 1331 Pls
2779 1336 Pls
2784 1337 Pls
2789 1331 Pls
2793 1333 Pls
2798 1332 Pls
2804 1329 Pls
2808 1339 Pls
2813 1336 Pls
2818 1331 Pls
2822 1330 Pls
2828 1339 Pls
2833 1333 Pls
2838 1336 Pls
2842 1333 Pls
2847 1339 Pls
2853 1332 Pls
2857 1331 Pls
2862 1337 Pls
2867 1333 Pls
2872 1338 Pls
2877 1332 Pls
2882 1329 Pls
2887 1332 Pls
2891 1333 Pls
2896 1335 Pls
2902 1334 Pls
2906 1333 Pls
2911 1333 Pls
2917 1333 Pls
2922 1338 Pls
2926 1331 Pls
2932 1338 Pls
2937 1333 Pls
2941 1338 Pls
2946 1333 Pls
2951 1333 Pls
2956 1333 Pls
2961 1336 Pls
2966 1335 Pls
2971 1333 Pls
2975 1328 Pls
2981 1338 Pls
2986 1336 Pls
2990 1338 Pls
2995 1341 Pls
3000 1333 Pls
3006 1328 Pls
3010 1333 Pls
3015 1338 Pls
3020 1332 Pls
3024 1338 Pls
3030 1336 Pls
3035 1337 Pls
3039 1338 Pls
3044 1338 Pls
3049 1333 Pls
3055 1338 Pls
3059 1338 Pls
3064 1331 Pls
3069 1338 Pls
3073 1333 Pls
3079 1332 Pls
3084 1336 Pls
3089 1328 Pls
3093 1330 Pls
3098 1335 Pls
3104 1333 Pls
3108 1335 Pls
3113 1334 Pls
3118 1335 Pls
3122 1337 Pls
3128 1333 Pls
3133 1333 Pls
3138 1333 Pls
3142 1338 Pls
3147 1333 Pls
3153 1329 Pls
3157 1333 Pls
3162 1335 Pls
3167 1334 Pls
3172 1333 Pls
3177 1338 Pls
3182 1339 Pls
3187 1334 Pls
3191 1330 Pls
3196 1336 Pls
3202 1334 Pls
3206 1328 Pls
3211 1333 Pls
3216 1334 Pls
3221 1333 Pls
3226 1328 Pls
3231 1335 Pls
3236 1328 Pls
3240 1335 Pls
3245 1338 Pls
3251 1336 Pls
3255 1337 Pls
3260 1337 Pls
3265 1337 Pls
3270 1330 Pls
3275 1330 Pls
3280 1339 Pls
3285 1333 Pls
3289 1337 Pls
3294 1332 Pls
3300 1328 Pls
3305 1333 Pls
3309 1337 Pls
3314 1338 Pls
3319 1334 Pls
3324 1336 Pls
3329 1339 Pls
3334 1337 Pls
3338 1333 Pls
3343 1334 Pls
3349 1339 Pls
3354 1333 Pls
3358 1332 Pls
3363 1329 Pls
3368 1328 Pls
3373 1338 Pls
3378 1332 Pls
3383 1332 Pls
3388 1331 Pls
3392 1334 Pls
3398 1338 Pls
3403 1338 Pls
3407 1330 Pls
3412 1339 Pls
3417 1334 Pls
3422 1338 Pls
3427 1342 Pls
3432 1337 Pls
3438 1334 Pls
3442 1339 Pls
3448 1332 Pls
3453 1332 Pls
3458 1336 Pls
3464 1336 Pls
3469 1336 Pls
3474 1330 Pls
3479 1335 Pls
3485 1338 Pls
3490 1339 Pls
3495 1339 Pls
3501 1330 Pls
3505 1334 Pls
3511 1339 Pls
3517 1339 Pls
3522 1340 Pls
3527 1333 Pls
3532 1339 Pls
3538 1336 Pls
3543 1330 Pls
3548 1333 Pls
3554 1333 Pls
3558 1334 Pls
3564 1336 Pls
3570 1338 Pls
3574 1335 Pls
3580 1333 Pls
3585 1337 Pls
3590 1333 Pls
3596 1336 Pls
3601 1337 Pls
3606 1333 Pls
3611 1328 Pls
3617 1329 Pls
3622 1329 Pls
3627 1328 Pls
3633 1333 Pls
3638 1329 Pls
3643 1334 Pls
3649 1331 Pls
3654 1343 Pls
3659 1336 Pls
3664 1331 Pls
3670 1337 Pls
3675 1343 Pls
3680 1329 Pls
3686 1333 Pls
3690 1333 Pls
3696 1329 Pls
3702 1332 Pls
3706 1336 Pls
3712 1332 Pls
3717 1336 Pls
3722 1332 Pls
3728 1336 Pls
3733 1331 Pls
3738 1338 Pls
3743 1328 Pls
3749 1330 Pls
3755 1336 Pls
3759 1336 Pls
3765 1335 Pls
3770 1328 Pls
3775 1328 Pls
3781 1329 Pls
3786 1336 Pls
3791 1336 Pls
3796 1330 Pls
3802 1331 Pls
3807 1329 Pls
3812 1336 Pls
3818 1336 Pls
3822 1338 Pls
3828 1331 Pls
3834 1331 Pls
3838 1336 Pls
3844 1330 Pls
3849 1333 Pls
3855 1336 Pls
3860 1333 Pls
3865 1336 Pls
3871 1328 Pls
3875 1328 Pls
3881 1336 Pls
3887 1330 Pls
3891 1336 Pls
3897 1333 Pls
3902 1334 Pls
3907 1338 Pls
3913 1330 Pls
3918 1330 Pls
3923 1336 Pls
3928 1329 Pls
3934 1328 Pls
3939 1334 Pls
3944 1328 Pls
3950 1338 Pls
3954 1337 Pls
3960 1329 Pls
3966 1329 Pls
3971 1340 Pls
3976 1336 Pls
3981 1330 Pls
3987 1338 Pls
3992 1331 Pls
3997 1333 Pls
4003 1337 Pls
4007 1328 Pls
4013 1333 Pls
4019 1329 Pls
4023 1335 Pls
4029 1330 Pls
4034 1328 Pls
4039 1335 Pls
4045 1332 Pls
4050 1327 Pls
4055 1334 Pls
4060 1330 Pls
4066 1337 Pls
4071 1333 Pls
4076 1333 Pls
4082 1330 Pls
4087 1337 Pls
4092 1339 Pls
4098 1328 Pls
4103 1333 Pls
4108 1330 Pls
4113 1331 Pls
4119 1333 Pls
4124 1329 Pls
4129 1336 Pls
4135 1331 Pls
4139 1333 Pls
4145 1341 Pls
4151 1333 Pls
4155 1332 Pls
4161 1337 Pls
4166 1333 Pls
4171 1340 Pls
4177 1334 Pls
4182 1334 Pls
4187 1334 Pls
4192 1331 Pls
4198 1332 Pls
4204 1336 Pls
4208 1332 Pls
4214 1338 Pls
4219 1337 Pls
4224 1333 Pls
4230 1331 Pls
4235 1333 Pls
4240 1339 Pls
4245 1337 Pls
4251 1329 Pls
4256 1331 Pls
4261 1330 Pls
4267 1338 Pls
4271 1332 Pls
4277 1336 Pls
4283 1338 Pls
4287 1333 Pls
4293 1333 Pls
4298 1329 Pls
4304 1336 Pls
4309 1333 Pls
4314 1339 Pls
4320 1332 Pls
4324 1333 Pls
4330 1339 Pls
4336 1334 Pls
4340 1338 Pls
4346 1336 Pls
4351 1333 Pls
4356 1338 Pls
4362 1330 Pls
4367 1333 Pls
4372 1338 Pls
4377 1333 Pls
4383 1337 Pls
4388 1338 Pls
4393 1334 Pls
4399 1333 Pls
4404 1339 Pls
4409 1330 Pls
4415 1339 Pls
4420 1331 Pls
4425 1336 Pls
4430 1338 Pls
4436 1330 Pls
4441 1337 Pls
4446 1336 Pls
4452 1334 Pls
4456 1340 Pls
4462 1334 Pls
4468 1334 Pls
4472 1339 Pls
4478 1336 Pls
4483 1338 Pls
4488 1332 Pls
4494 1337 Pls
4499 1337 Pls
4504 1340 Pls
4509 1339 Pls
4515 1343 Pls
4520 1333 Pls
4525 1338 Pls
4531 1332 Pls
4536 1336 Pls
4541 1336 Pls
4547 1333 Pls
4552 1338 Pls
4557 1338 Pls
4562 1336 Pls
4568 1334 Pls
4573 1337 Pls
4578 1333 Pls
4584 1331 Pls
4588 1336 Pls
4594 1333 Pls
4600 1331 Pls
4604 1333 Pls
4610 1332 Pls
4615 2096 Pls
4620 1919 Pls
4626 1333 Pls
4631 1333 Pls
4637 1332 Pls
4641 1337 Pls
4647 1333 Pls
4653 1328 Pls
4657 1337 Pls
4663 1336 Pls
4668 1334 Pls
4673 1328 Pls
4679 1331 Pls
4684 1337 Pls
4689 1332 Pls
4694 1332 Pls
4700 1331 Pls
4705 1331 Pls
4710 1331 Pls
4716 1332 Pls
4720 1340 Pls
4726 1338 Pls
4732 1336 Pls
4737 1337 Pls
4742 1338 Pls
4747 1328 Pls
4753 1336 Pls
4758 1328 Pls
4763 1336 Pls
4769 1336 Pls
4773 1333 Pls
4779 1336 Pls
4785 1339 Pls
4789 1332 Pls
4795 1339 Pls
4800 1338 Pls
4805 1338 Pls
4811 1341 Pls
4816 1334 Pls
4821 1340 Pls
4826 1337 Pls
4832 1333 Pls
4837 1331 Pls
4842 1338 Pls
4848 1333 Pls
4853 1332 Pls
4858 1336 Pls
4864 1339 Pls
4869 1331 Pls
4874 1337 Pls
4879 1332 Pls
4885 1332 Pls
4890 1333 Pls
4895 1334 Pls
4901 1337 Pls
4905 1340 Pls
4911 1339 Pls
4917 1333 Pls
4921 1336 Pls
4927 1333 Pls
4932 1336 Pls
4937 1339 Pls
4943 1337 Pls
4948 1330 Pls
4953 1334 Pls
4958 1335 Pls
4964 1337 Pls
4970 1335 Pls
4974 1338 Pls
4980 1335 Pls
4985 1339 Pls
4990 1339 Pls
4996 1333 Pls
5001 1339 Pls
5006 1332 Pls
5011 1333 Pls
5017 1341 Pls
5022 1338 Pls
5027 1329 Pls
5033 1336 Pls
5037 1339 Pls
5043 1331 Pls
5049 1334 Pls
5053 1338 Pls
5059 1338 Pls
5064 1333 Pls
5070 1337 Pls
5075 1332 Pls
5080 1329 Pls
5086 1334 Pls
5090 1341 Pls
5096 1337 Pls
5102 1333 Pls
5106 1330 Pls
5112 1339 Pls
5117 1332 Pls
5122 1336 Pls
5128 1337 Pls
5133 1332 Pls
5138 1338 Pls
5143 1336 Pls
5149 1334 Pls
5154 1327 Pls
5159 1337 Pls
5165 1339 Pls
5170 1328 Pls
5175 1329 Pls
5181 1330 Pls
5186 1328 Pls
5191 1338 Pls
5196 1335 Pls
5202 1336 Pls
5207 1332 Pls
5212 1328 Pls
5218 1332 Pls
5222 1332 Pls
5228 1332 Pls
5234 1330 Pls
5238 1340 Pls
5244 1339 Pls
5249 1331 Pls
5254 1332 Pls
5260 1334 Pls
5265 1337 Pls
5270 1333 Pls
5275 1338 Pls
5281 1337 Pls
5286 1335 Pls
5291 1328 Pls
5297 1337 Pls
5302 1336 Pls
5307 1333 Pls
5313 1338 Pls
5318 1338 Pls
5323 1328 Pls
5328 1333 Pls
5334 1339 Pls
5339 1333 Pls
5344 1331 Pls
5350 1328 Pls
5354 1334 Pls
5360 1334 Pls
5366 1341 Pls
5370 1329 Pls
5376 1334 Pls
5381 1337 Pls
5386 1337 Pls
5392 1330 Pls
5397 1336 Pls
5403 1339 Pls
5407 1333 Pls
5413 1336 Pls
5419 1328 Pls
5423 1333 Pls
5429 1339 Pls
5434 1336 Pls
5439 1330 Pls
5445 1331 Pls
5450 1339 Pls
5455 1336 Pls
5460 1331 Pls
5466 1335 Pls
5471 1336 Pls
5476 1333 Pls
5482 1333 Pls
5486 1333 Pls
5492 1336 Pls
5498 1336 Pls
5503 1336 Pls
5508 1339 Pls
5513 1342 Pls
5519 1337 Pls
5524 1338 Pls
5529 1336 Pls
5535 1330 Pls
5539 1333 Pls
5545 1334 Pls
5551 1337 Pls
5555 1336 Pls
5561 1332 Pls
5566 1336 Pls
5571 1338 Pls
5577 1333 Pls
5582 1333 Pls
5587 1334 Pls
5592 1328 Pls
5598 1330 Pls
5603 1337 Pls
5608 1331 Pls
5614 1329 Pls
5619 1333 Pls
5624 1332 Pls
5630 1341 Pls
5635 1336 Pls
5640 1335 Pls
5645 1333 Pls
5651 1337 Pls
5656 1333 Pls
5661 1336 Pls
5667 1339 Pls
5671 1333 Pls
5677 1334 Pls
5683 1336 Pls
5687 1333 Pls
5693 1331 Pls
5698 1331 Pls
5703 1332 Pls
5709 1332 Pls
5714 1337 Pls
5719 1333 Pls
5724 1332 Pls
5730 1330 Pls
5736 1336 Pls
5740 1330 Pls
5746 1332 Pls
5751 1339 Pls
5756 1337 Pls
5762 1333 Pls
5767 1335 Pls
5772 1332 Pls
5777 1332 Pls
5783 1330 Pls
5788 1338 Pls
5793 1328 Pls
5799 1333 Pls
5803 1336 Pls
5809 1329 Pls
5815 1330 Pls
5819 1337 Pls
5825 1339 Pls
5830 1338 Pls
5836 1337 Pls
5841 1328 Pls
5846 1334 Pls
5852 1330 Pls
5856 1337 Pls
5862 1332 Pls
5868 1334 Pls
5872 1336 Pls
5878 1328 Pls
5883 1333 Pls
5888 1336 Pls
5894 1334 Pls
5899 1333 Pls
5904 1329 Pls
5909 1338 Pls
5915 1329 Pls
5920 1330 Pls
5925 1328 Pls
5931 1336 Pls
5935 1338 Pls
5941 1334 Pls
5947 1336 Pls
5952 1329 Pls
5957 1337 Pls
5962 1340 Pls
5968 1331 Pls
5973 1336 Pls
5978 1331 Pls
5984 1328 Pls
5988 1333 Pls
5994 1338 Pls
6000 1339 Pls
6004 1335 Pls
6010 1334 Pls
6015 1331 Pls
6020 1333 Pls
6026 1333 Pls
6031 1338 Pls
6036 1337 Pls
6041 1332 Pls
6047 1333 Pls
6052 1333 Pls
6057 1332 Pls
6063 1335 Pls
6068 1329 Pls
6073 1337 Pls
6079 1337 Pls
6084 1339 Pls
6089 1333 Pls
6094 1337 Pls
6100 1338 Pls
6105 1337 Pls
6110 1332 Pls
6116 1333 Pls
6120 1338 Pls
6126 1331 Pls
6132 1337 Pls
6136 1333 Pls
6142 1331 Pls
6147 1337 Pls
6152 1337 Pls
6158 1343 Pls
6163 1333 Pls
6168 1335 Pls
6173 1329 Pls
6179 1328 Pls
6185 1328 Pls
6189 1338 Pls
6195 1328 Pls
6200 1338 Pls
6205 1329 Pls
6211 1337 Pls
6216 1334 Pls
6221 1331 Pls
6226 1336 Pls
6232 1334 Pls
6237 1332 Pls
6242 1336 Pls
6248 1334 Pls
6252 1339 Pls
6258 1331 Pls
6264 1343 Pls
6268 1332 Pls
6274 1337 Pls
6279 1340 Pls
6285 1329 Pls
6290 1332 Pls
6295 1330 Pls
6301 1329 Pls
6305 1332 Pls
6311 1331 Pls
6317 1334 Pls
6321 1336 Pls
6327 1334 Pls
6332 1337 Pls
6337 1336 Pls
6343 1336 Pls
6348 1339 Pls
6353 1331 Pls
6358 1330 Pls
6364 1334 Pls
6369 1338 Pls
6374 1339 Pls
6380 1336 Pls
6385 1331 Pls
6390 1328 Pls
6396 1332 Pls
6401 1338 Pls
6406 1340 Pls
6411 1336 Pls
6417 1333 Pls
6422 1332 Pls
6427 1339 Pls
6433 1337 Pls
6437 1331 Pls
6443 1331 Pls
6449 1334 Pls
6453 1336 Pls
6459 1336 Pls
6464 1328 Pls
6469 1330 Pls
6475 1328 Pls
6480 1334 Pls
6485 1336 Pls
6490 1333 Pls
6496 1339 Pls
6501 1333 Pls
6506 1337 Pls
6512 1337 Pls
6517 1332 Pls
6522 1338 Pls
6528 1335 Pls
6533 1333 Pls
6538 1338 Pls
6543 1333 Pls
6549 1334 Pls
6554 1337 Pls
6559 1334 Pls
6565 1336 Pls
6569 1334 Pls
6575 1333 Pls
6581 1333 Pls
6585 1330 Pls
6591 1338 Pls
6596 1335 Pls
6601 1330 Pls
6607 1337 Pls
6612 1336 Pls
6618 1335 Pls
6622 1335 Pls
6628 1337 Pls
6634 1333 Pls
6638 1337 Pls
6644 1334 Pls
6649 1331 Pls
6654 1329 Pls
6660 1333 Pls
6665 1328 Pls
6670 1333 Pls
6675 1336 Pls
6681 1332 Pls
6686 1336 Pls
6691 1338 Pls
6697 1338 Pls
6701 1337 Pls
6707 1336 Pls
6713 1334 Pls
6718 1329 Pls
6723 1338 Pls
6728 1336 Pls
6734 1328 Pls
6739 1336 Pls
6744 1336 Pls
6750 1333 Pls
6754 1334 Pls
6760 1331 Pls
6766 1333 Pls
6770 1339 Pls
6776 1328 Pls
6781 1338 Pls
6786 1335 Pls
6792 1338 Pls
6797 1336 Pls
6802 1340 Pls
6807 1336 Pls
6813 1336 Pls
6818 1339 Pls
6823 1328 Pls
2.000 UP
1.000 UL
LTb
1.000 UL
LTb
1166 4776 M
0 -4182 V
5660 0 V
0 4182 V
-5660 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
